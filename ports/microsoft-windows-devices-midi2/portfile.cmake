cmake_minimum_required (VERSION 3.30)

set(VCPKG_POLICY_SKIP_ABSOLUTE_PATHS_CHECK enabled)

set(MINIMUM_WINDOWS_SDK_VERSION "10.0.26100.0")

set(MIDI_SDK_VERSION "1.0.13-preview.13.192")
set(MIDI_SDK_NUGET_URL "https://github.com/microsoft/MIDI/releases/download/preview-13/Microsoft.Windows.Devices.Midi2.${MIDI_SDK_VERSION}.nupkg")
set(MIDI_SDK_SHA512 e950cf87ec74df7b8fb8d06c1c09646f5a9f390fa1d19b9906cc79874f52310bd90a80371f9bb089f953794b05d013d602780a5905ba77aa8d8a1a6205d341d8)

set(MIDI2_WINMD "@MIDI_SDK_EXTRACTED_FILES@/ref/native/Microsoft.Windows.Devices.Midi2.winmd")

message("MIDI2: MIDI SDK Version:   ${MIDI_SDK_VERSION}")
message("MIDI2: MIDI SDK NuGet URL: ${MIDI_SDK_NUGET_URL}")

# Get the MIDI SDK ---------------------------------------------------------------------------
# Grab the NuGet package from the official release location
vcpkg_download_distfile(
    MIDISDK_ARCHIVE
    URLS ${MIDI_SDK_NUGET_URL}
    FILENAME "Microsoft.Windows.Devices.Midi2.${MIDI_SDK_VERSION}.zip"
    SHA512 ${MIDI_SDK_SHA512}
  )

# NuGet files are just zip files, so we extract it here
vcpkg_extract_source_archive(
    MIDI_SDK_EXTRACTED_FILES
    ARCHIVE "${MIDISDK_ARCHIVE}"
    NO_REMOVE_ONE_LEVEL
  )

set(MIDI2_HEADERS_ROOT_FOLDER "${CURRENT_PACKAGES_DIR}/include")

# these two bootstrapper files are included in the NuGet package, and are not generated by cppwinrt
# the sub path they are placed in is consistent with the NuGet package folder structure

set(MIDI2_HEADERS_INIT_FOLDER ${MIDI2_HEADERS_ROOT_FOLDER}/winmidi/init/)
set(MIDI2_HEADERS_WINRT_FOLDER ${MIDI2_HEADERS_ROOT_FOLDER}/winrt/)

file(INSTALL 
    FILES
      "${MIDI_SDK_EXTRACTED_FILES}/build/native/include/winmidi/init/Microsoft.Windows.Devices.Midi2.Initialization.hpp" 
      "${MIDI_SDK_EXTRACTED_FILES}/build/native/include/winmidi/init/WindowsMidiServicesVersion.h" 
    DESTINATION "${MIDI2_HEADERS_INIT_FOLDER}"
  )

# Find and use the latest SDK, but needs to be a minimum version as defined above.
vcpkg_get_windows_sdk(WINDOWS_SDK_VERSION)

if (WINDOWS_SDK_VERSION VERSION_GREATER_EQUAL "${MINIMUM_WINDOWS_SDK_VERSION}")
  message(STATUS "MIDI2: found Windows SDK: ${WINDOWS_SDK_VERSION}")
else()
  message(FATAL_ERROR "MIDI2: Need a Windows SDK version that is at least ${MINIMUM_WINDOWS_SDK_VERSION}")
endif()


# this will update the config file with a few variables needed at build time
configure_file("${CMAKE_CURRENT_LIST_DIR}/microsoft-windows-devices-midi2-config.cmake"
    "${CURRENT_PACKAGES_DIR}/share/${PORT}/${PORT}-config.cmake"
    @ONLY
  )

# usage
file(INSTALL 
    "${CMAKE_CURRENT_LIST_DIR}/usage" 
    DESTINATION "${CURRENT_PACKAGES_DIR}/share/${PORT}"
  )

# license
vcpkg_download_distfile(
    LICENSE_FILE
    URLS https://github.com/microsoft/MIDI/blob/main/LICENSE
    FILENAME LICENSE
    SHA512 160730f5f364c4dbc387afacfb301c08912d0111726f27b1833d7c45d9fdede5fd1f4b30f53e162c69a7abfaea6b05e0e9e0254907e34f90e3d3fcf4deae1178
  ) 

vcpkg_install_copyright(
    FILE_LIST ${LICENSE_FILE}
  )
