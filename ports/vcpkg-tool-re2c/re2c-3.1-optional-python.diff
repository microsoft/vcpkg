diff -ru re2c-3.1.orig/CMakeLists.txt re2c-3.1/CMakeLists.txt
--- re2c-3.1.orig/CMakeLists.txt	2023-07-19 23:44:58.000000000 +0200
+++ re2c-3.1/CMakeLists.txt	2024-06-14 17:23:55.738439188 +0200
@@ -12,6 +12,13 @@
 
 ac_subst(PACKAGE_VERSION "${PROJECT_VERSION}")
 
+# check whether re2c is the root project
+if(CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
+    set(RE2C_IS_ROOT_PROJECT TRUE)
+else()
+    set(RE2C_IS_ROOT_PROJECT FALSE)
+endif()
+
 option(RE2C_REBUILD_LEXERS "Regenerate lexers" OFF)
 if(RE2C_REBUILD_LEXERS AND NOT RE2C_FOR_BUILD)
     message(FATAL_ERROR "option RE2C_FOR_BUILD is required for RE2C_REBUILD_LEXERS")
@@ -32,11 +39,12 @@
 option(RE2C_BUILD_BENCHMARKS "Build benchmarks" OFF)
 option(RE2C_REGEN_BENCHMARKS "Regenerate C code for benchmarks" OFF)
 
+# test targets are enabled by default only if re2c is the root project
+option(RE2C_BUILD_TESTS "Build tests" "${RE2C_IS_ROOT_PROJECT}")
+
 # checks for programs
-find_package(Python3 COMPONENTS Interpreter)
-# starting from cmake 3.19 find_package can do version check, but we are on 3.12
-if(Python3_VERSION VERSION_LESS 3.7)
-    message(FATAL_ERROR "python version 3.7 or higher is required")
+if(RE2C_REBUILD_DOCS OR RE2C_BUILD_TESTS OR RE2C_BUILD_BENCHMARKS)
+    find_package(Python3 3.7 REQUIRED COMPONENTS Interpreter)
 endif()
 if(RE2C_REBUILD_DOCS)
     execute_process(
@@ -91,10 +99,12 @@
 configure_file(doc/manpage.rst.in doc/manpage.rst @ONLY)
 configure_file(doc/help.rst.in doc/help.rst @ONLY)
 
-configure_file(run_tests.py.in run_tests.py @ONLY)
-set(RE2C_RUN_TESTS "${CMAKE_CURRENT_BINARY_DIR}/run_tests.py")
-if(CMAKE_HOST_UNIX)
-    execute_process(COMMAND chmod +x "${RE2C_RUN_TESTS}")
+if(RE2C_BUILD_TESTS)
+    configure_file(run_tests.py.in run_tests.py @ONLY)
+    set(RE2C_RUN_TESTS "${CMAKE_CURRENT_BINARY_DIR}/run_tests.py")
+    if(CMAKE_HOST_UNIX)
+        execute_process(COMMAND chmod +x "${RE2C_RUN_TESTS}")
+    endif()
 endif()
 
 ac_config_headers("config.h")
@@ -324,8 +334,8 @@
 re2c_gen_help("${re2c_help_source}" "${re2c_help}" "${re2c_help_bootstrap}")
 add_custom_target(docs DEPENDS "${re2c_docs}")
 
-# install and test targets are enabled only if re2c is the root project
-if (CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
+# install targets are enabled only if re2c is the root project
+if(RE2C_IS_ROOT_PROJECT)
     # install
     install(TARGETS re2c RUNTIME DESTINATION bin)
     install(FILES "${re2c_manpage_c}" DESTINATION "share/man/man1")
@@ -345,7 +355,9 @@
         COMMAND "${CMAKE_COMMAND}" -E remove_directory "doc"
         COMMAND "${CMAKE_COMMAND}" --build "${CMAKE_CURRENT_BINARY_DIR}"
     )
+endif()
 
+if(RE2C_BUILD_TESTS)
     # tests
     add_custom_target(tests
         DEPENDS "${RE2C_RUN_TESTS}"
@@ -509,12 +521,14 @@
     endif()
 
     # libre2c test
-    add_executable(test_libre2c lib/test.cc)
-    target_link_libraries(test_libre2c libre2c)
-    target_link_libraries(test_libre2c test_libre2c_objects_autogen)
-    add_custom_target(check_libre2c
-        COMMAND ./test_libre2c
-    )
+    if(RE2C_BUILD_TESTS)
+        add_executable(test_libre2c lib/test.cc)
+        target_link_libraries(test_libre2c libre2c)
+        target_link_libraries(test_libre2c test_libre2c_objects_autogen)
+        add_custom_target(check_libre2c
+            COMMAND ./test_libre2c
+        )
+    endif()
 
     if(RE2C_BUILD_BENCHMARKS)
         add_subdirectory(benchmarks/submatch_nfa)
@@ -523,15 +537,16 @@
     endif()
 else()
     # empty check target
-    add_custom_target(check_libre2c)
+    if(RE2C_BUILD_TESTS)
+        add_custom_target(check_libre2c)
+    endif()
 endif()
 
 if(RE2C_BUILD_BENCHMARKS)
     add_subdirectory(benchmarks/submatch_dfa_aot)
 endif()
 
-# only add check target if toplevel project
-if (CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
+if(RE2C_BUILD_TESTS)
     add_custom_target(check)
     add_dependencies(check check_re2c check_libre2c)
 endif()
