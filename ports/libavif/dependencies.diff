diff --git a/CMakeLists.txt b/CMakeLists.txt
index a28e6c3..180bb17 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -248,6 +248,7 @@ if(AVIF_LIBYUV_ENABLED)
     target_compile_definitions(avif_obj PRIVATE -DAVIF_LIBYUV_ENABLED=1)
     avif_target_link_library(yuv::yuv)
     set(AVIF_PKG_CONFIG_EXTRA_LIBS_PRIVATE "${AVIF_PKG_CONFIG_EXTRA_LIBS_PRIVATE} -lyuv")
+    set(AVIF_PKG_CONFIG_EXTRA_REQUIRES_PRIVATE "${AVIF_PKG_CONFIG_EXTRA_REQUIRES_PRIVATE} libjpeg")
     set(AVIF_LIB_USE_CXX ON)
 endif(AVIF_LIBYUV_ENABLED)
 
@@ -849,13 +850,43 @@ if(NOT SKIP_INSTALL_LIBRARIES AND NOT SKIP_INSTALL_ALL)
 
     # Enable CMake configs in VCPKG mode
     if(BUILD_SHARED_LIBS OR VCPKG_TARGET_TRIPLET)
-        install(EXPORT ${PROJECT_NAME}-config DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
+        if(NOT BUILD_SHARED_LIBS)
+            target_include_directories(avif_static PUBLIC $<INSTALL_INTERFACE:include>)
+            if(AVIF_CODEC_AOM_ENABLED)
+                find_package(aom CONFIG REQUIRED)
+            endif()
+            target_link_libraries(avif_static INTERFACE
+               yuv
+               $<$<BOOL:${AVIF_CODEC_AOM_ENABLED}>:unofficial::aom>
+               $<$<BOOL:${AVIF_CODEC_DAV1D_ENABLED}>:${DAV1D_LIBRARIES}>
+               $<$<BOOL:${AVIF_CODEC_DAV1D_ENABLED}>:${CMAKE_DL_LIBS}>
+               $<$<OR:$<BOOL:${UNIX}>,$<BOOL:${MINGW}>>:Threads::Threads>
+               $<$<OR:$<BOOL:${UNIX}>,$<BOOL:${MINGW}>>:m>
+            )
+        endif()
+        file(WRITE "${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake"
+"# Generated by vcpkg
+if(NOT \"${BUILD_SHARED_LIBS}\")
+    include(CMakeFindDependencyMacro)
+    find_dependency(libyuv CONFIG)
+    if(\"${AVIF_CODEC_AOM_ENABLED}\")
+        find_dependency(aom CONFIG)
+    endif()
+    if(UNIX OR MINGW)
+        set(THREADS_PREFER_PTHREAD_FLAG ON)
+        find_dependency(Threads)
+    endif()
+endif()
+include(\"\${CMAKE_CURRENT_LIST_DIR}/${PROJECT_NAME}-targets.cmake\")
+")
+        install(EXPORT ${PROJECT_NAME}-config FILE ${PROJECT_NAME}-targets.cmake DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME})
 
         include(CMakePackageConfigHelpers)
         write_basic_package_version_file(
             ${PROJECT_NAME}-config-version.cmake VERSION ${PROJECT_VERSION} COMPATIBILITY SameMajorVersion
         )
         install(FILES ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config-version.cmake
+                      ${CMAKE_CURRENT_BINARY_DIR}/${PROJECT_NAME}-config.cmake
                 DESTINATION ${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}
         )
     endif()
