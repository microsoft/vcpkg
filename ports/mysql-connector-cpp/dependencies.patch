diff --git a/CMakeLists.txt b/CMakeLists.txt
index f24eb57..ec7c53d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -469,7 +469,7 @@ endif()
 # system-wide). Here we arrange for the OpenSSL DLLs to be copied to the build
 # location of the connector library after building it.
 
-if(WIN32 AND OPENSSL_LIB_DIR)
+if(WIN32 AND OPENSSL_LIB_DIR AND 0)
 
   # Note: For simplicity we just copy any DLLs we can find at the given
   # OpenSSL location.
diff --git a/cdk/cmake/DepFindCompression.cmake b/cdk/cmake/DepFindCompression.cmake
index 68f8e10..ebe7e31 100644
--- a/cdk/cmake/DepFindCompression.cmake
+++ b/cdk/cmake/DepFindCompression.cmake
@@ -48,7 +48,12 @@ message(STATUS "Setting up compression libraries.")
 #######
 # ZLIB
 #
-add_ext(zlib zlib.h z ext_zlib)
+if (WIN32)
+  set(ZLIB_NAME zlib)
+else()
+  set(ZLIB_NAME z)
+endif()
+add_ext(zlib zlib.h ${ZLIB_NAME} ext_zlib)
 if(NOT ZLIB_FOUND)
   message(FATAL_ERROR "Can't build without zlib support")
 endif()
diff --git a/cdk/cmake/dependency.cmake b/cdk/cmake/dependency.cmake
index 8370d81..a111219 100644
--- a/cdk/cmake/dependency.cmake
+++ b/cdk/cmake/dependency.cmake
@@ -497,10 +497,18 @@ endfunction(add_ext_targets)
 function(add_ext_lib EXT target name)
   # Search for the library
   if(DEFINED ${EXT}_ROOT_DIR)
-    set(suffix PATHS ${${EXT}_ROOT_DIR}
-      PATH_SUFFIXES lib lib64 dll
-      NO_DEFAULT_PATH
-    )
+    if(CMAKE_BUILD_TYPE STREQUAL "Debug")
+      set(name "${name}d;${name}")
+      set(suffix PATHS "${${EXT}_ROOT_DIR}/debug"
+        PATH_SUFFIXES lib lib64 dll
+        NO_DEFAULT_PATH
+      )
+    else()
+      set(suffix PATHS ${${EXT}_ROOT_DIR}
+        PATH_SUFFIXES lib lib64 dll
+        NO_DEFAULT_PATH
+      )
+    endif()
   elseif(DEFINED ${EXT}_LIB_DIR)
     set(suffix
       PATHS ${${EXT}_LIB_DIR}
@@ -542,9 +550,10 @@ endfunction(add_ext_lib)
 
 function(add_ext_exec EXT target name)
   # Search for the library
+  string(TOLOWER ${EXT} EXT_LOWER)
   if(DEFINED ${EXT}_ROOT_DIR)
     set(suffix PATHS ${${EXT}_ROOT_DIR}
-      PATH_SUFFIXES bin
+      PATH_SUFFIXES tools/${EXT_LOWER}
       NO_DEFAULT_PATH
     )
 
diff --git a/cdk/protocol/mysqlx/CMakeLists.txt b/cdk/protocol/mysqlx/CMakeLists.txt
index a987312..666b3a2 100644
--- a/cdk/protocol/mysqlx/CMakeLists.txt
+++ b/cdk/protocol/mysqlx/CMakeLists.txt
@@ -135,8 +135,13 @@ else()
   target_link_libraries(cdk_proto_mysqlx PRIVATE ext::protobuf-lite)
 endif()
 
+if (WIN32)
+  set(EXT_ZLIB_NAME ext::zlib)
+else()
+  set(EXT_ZLIB_NAME ext::z)
+endif()
 target_link_libraries(cdk_proto_mysqlx
-  PRIVATE cdk_foundation ext::z ext::lz4 ext::zstd
+  PRIVATE cdk_foundation ${EXT_ZLIB_NAME} ext::lz4 ext::zstd
 )
 
 ADD_COVERAGE(cdk_proto_mysqlx)
diff --git a/jdbc/cmake/DepFindMySQL.cmake b/jdbc/cmake/DepFindMySQL.cmake
index 971bfd5..0639b79 100644
--- a/jdbc/cmake/DepFindMySQL.cmake
+++ b/jdbc/cmake/DepFindMySQL.cmake
@@ -167,13 +167,13 @@ function(main)
 
   find_library(MYSQL_LIB
     NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}mysqlclient${CMAKE_STATIC_LIBRARY_SUFFIX}
-    PATHS ${MYSQL_LIB_DIR}
+    PATHS "${MYSQL_LIB_DIR}/lib"
     NO_DEFAULT_PATH
   )
 
   find_library(MYSQL_LIB_DEBUG
     NAMES ${CMAKE_STATIC_LIBRARY_PREFIX}mysqlclient${CMAKE_STATIC_LIBRARY_SUFFIX}
-    PATHS "${MYSQL_LIB_DIR}/debug"
+    PATHS "${MYSQL_LIB_DIR}/debug/lib"
     NO_DEFAULT_PATH
   )
 
@@ -181,39 +181,39 @@ function(main)
 
     find_library(MYSQL_DLL
       NAMES ${CMAKE_DYNAMIC_LIBRARY_PREFIX}mysqlclient${CMAKE_DYNAMIC_LIBRARY_SUFFIX}
-      PATHS ${MYSQL_LIB_DIR}
+      PATHS "${MYSQL_LIB_DIR}/lib"
       NO_DEFAULT_PATH
       )
 
     find_library(MYSQL_DLL_DEBUG
       NAMES ${CMAKE_DYNAMIC_LIBRARY_PREFIX}mysqlclient${CMAKE_DYNAMIC_LIBRARY_SUFFIX}
-      PATHS "${MYSQL_LIB_DIR}/debug"
+      PATHS "${MYSQL_LIB_DIR}/debug/lib"
       NO_DEFAULT_PATH
       )
 
   else() #WIN32
 
-    find_library(MYSQL_DLL
-      NAMES libmysql
-      PATHS ${MYSQL_LIB_DIR}
+    find_file(MYSQL_DLL
+      NAMES libmysql.dll
+      PATHS "${MYSQL_LIB_DIR}/bin"
       NO_DEFAULT_PATH
       )
 
-    find_library(MYSQL_DLL_DEBUG
-      NAMES libmysql
-      PATHS "${MYSQL_LIB_DIR}/debug"
+    find_file(MYSQL_DLL_DEBUG
+      NAMES libmysql.dll
+      PATHS "${MYSQL_LIB_DIR}/debug/bin"
       NO_DEFAULT_PATH
       )
 
     find_library(MYSQL_DLL_IMP
       NAMES libmysql.lib
-      PATHS ${MYSQL_LIB_DIR}
+      PATHS "${MYSQL_LIB_DIR}/lib"
       NO_DEFAULT_PATH
     )
 
     find_library(MYSQL_DLL_IMP_DEBUG
       NAMES libmysql.lib
-      PATHS "${MYSQL_LIB_DIR}/debug"
+      PATHS "${MYSQL_LIB_DIR}/debug/lib"
       NO_DEFAULT_PATH
     )
   endif()
@@ -383,6 +383,7 @@ function(main)
     # external dependencies.
     #
 
+    find_package(OpenSSL)
     target_link_libraries(MySQL::client-static INTERFACE ${MYSQL_EXTERNAL_DEPENDENCIES})
 
   endif()
