diff --git a/cmake/Modules/HandleCompilerRT.cmake b/cmake/Modules/HandleCompilerRT.cmake
index 6865f45175..33dda44d18 100644
--- a/cmake/Modules/HandleCompilerRT.cmake
+++ b/cmake/Modules/HandleCompilerRT.cmake
@@ -20,25 +20,25 @@ function(get_component_name name variable)
     if(NOT name MATCHES "builtins.*")
       set(component_name "${name}_")
     endif()
-    if (CMAKE_OSX_SYSROOT MATCHES ".+MacOSX.+")
+    if (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+MacOSX.+")
       set(component_name "${component_name}osx")
 
-    elseif (CMAKE_OSX_SYSROOT MATCHES ".+iPhoneOS.+")
+    elseif (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+iPhoneOS.+")
       set(component_name "${component_name}ios")
-    elseif (CMAKE_OSX_SYSROOT MATCHES ".+iPhoneSimulator.+")
+    elseif (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+iPhoneSimulator.+")
       set(component_name "${component_name}iossim")
 
-      elseif (CMAKE_OSX_SYSROOT MATCHES ".+AppleTVOS.+")
+      elseif (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+AppleTVOS.+")
       set(component_name "${component_name}tvos")
-    elseif (CMAKE_OSX_SYSROOT MATCHES ".+AppleTVSimulator.+")
+    elseif (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+AppleTVSimulator.+")
       set(component_name "${component_name}tvossim")
 
-    elseif (CMAKE_OSX_SYSROOT MATCHES ".+WatchOS.+")
+    elseif (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+WatchOS.+")
       set(component_name "${component_name}watchos")
-    elseif (CMAKE_OSX_SYSROOT MATCHES ".+WatchSimulator.+")
+    elseif (_CMAKE_OSX_SYSROOT_PATH MATCHES ".+WatchSimulator.+")
       set(component_name "${component_name}watchossim")
     else()
-      message(WARNING "Unknown Apple SDK ${CMAKE_OSX_SYSROOT}, we don't know which compiler-rt library suffix to use.")
+      message(WARNING "Unknown Apple SDK ${_CMAKE_OSX_SYSROOT_PATH}, we don't know which compiler-rt library suffix to use.")
     endif()
   else()
     set(component_name "${name}")
diff --git a/libcxxabi/src/CMakeLists.txt b/libcxxabi/src/CMakeLists.txt
index f4722c3b35..a553615ebc 100644
--- a/libcxxabi/src/CMakeLists.txt
+++ b/libcxxabi/src/CMakeLists.txt
@@ -134,7 +134,7 @@ if ( APPLE )
   # Make sure we link in CrashReporterClient if we find it -- it's used by
   # abort() on Apple platforms when building the system dylib.
   find_library(CrashReporterClient NAMES libCrashReporterClient.a
-                                   PATHS "${CMAKE_OSX_SYSROOT}/usr/local/lib")
+                                   PATHS "${_CMAKE_OSX_SYSROOT_PATH}/usr/local/lib")
   if (CrashReporterClient)
     message(STATUS "Linking with CrashReporterClient at ${CrashReporterClient}")
     add_library_flags("${CrashReporterClient}")
diff --git a/lldb/tools/debugserver/source/CMakeLists.txt b/lldb/tools/debugserver/source/CMakeLists.txt
index f0b9756bec..0c784545c4 100644
--- a/lldb/tools/debugserver/source/CMakeLists.txt
+++ b/lldb/tools/debugserver/source/CMakeLists.txt
@@ -125,17 +125,17 @@ if(APPLE)
   set(LIBCOMPRESSION compression)
   if(APPLE_EMBEDDED)
     find_library(BACKBOARD_LIBRARY BackBoardServices
-      PATHS ${CMAKE_OSX_SYSROOT}/System/Library/PrivateFrameworks)
+      PATHS ${_CMAKE_OSX_SYSROOT_PATH}/System/Library/PrivateFrameworks)
     find_library(FRONTBOARD_LIBRARY FrontBoardServices
-      PATHS ${CMAKE_OSX_SYSROOT}/System/Library/PrivateFrameworks)
+      PATHS ${_CMAKE_OSX_SYSROOT_PATH}/System/Library/PrivateFrameworks)
     find_library(SPRINGBOARD_LIBRARY SpringBoardServices
-      PATHS ${CMAKE_OSX_SYSROOT}/System/Library/PrivateFrameworks)
+      PATHS ${_CMAKE_OSX_SYSROOT_PATH}/System/Library/PrivateFrameworks)
     find_library(MOBILESERVICES_LIBRARY MobileCoreServices
-      PATHS ${CMAKE_OSX_SYSROOT}/System/Library/PrivateFrameworks)
+      PATHS ${_CMAKE_OSX_SYSROOT_PATH}/System/Library/PrivateFrameworks)
     find_library(LOCKDOWN_LIBRARY lockdown)
     if (APPLE_EMBEDDED STREQUAL "watchos")
       find_library(CAROUSELSERVICES_LIBRARY CarouselServices
-        PATHS ${CMAKE_OSX_SYSROOT}/System/Library/PrivateFrameworks)
+        PATHS ${_CMAKE_OSX_SYSROOT_PATH}/System/Library/PrivateFrameworks)
     endif()
 
     if(NOT BACKBOARD_LIBRARY)
@@ -158,7 +158,7 @@ endif()
 
 add_definitions(-DLLDB_USE_OS_LOG)
 
-if(${CMAKE_OSX_SYSROOT} MATCHES ".Internal.sdk$")
+if(${_CMAKE_OSX_SYSROOT_PATH} MATCHES ".Internal.sdk$")
   message(STATUS "LLDB debugserver energy support is enabled")
   add_definitions(-DLLDB_ENERGY)
   set(ENERGY_LIBRARY -lpmenergy -lpmsample)
@@ -181,7 +181,7 @@ endif()
 separate_arguments(MIG_ARCH_FLAGS_SEPARTED NATIVE_COMMAND "${MIG_ARCH_FLAGS}")
 
 add_custom_command(OUTPUT ${generated_mach_interfaces}
-  VERBATIM COMMAND mig ${MIG_ARCH_FLAGS_SEPARTED} -isysroot ${CMAKE_OSX_SYSROOT} ${CMAKE_CURRENT_SOURCE_DIR}/MacOSX/dbgnub-mig.defs
+  VERBATIM COMMAND mig ${MIG_ARCH_FLAGS_SEPARTED} -isysroot ${_CMAKE_OSX_SYSROOT_PATH} ${CMAKE_CURRENT_SOURCE_DIR}/MacOSX/dbgnub-mig.defs
   DEPENDS ${CMAKE_CURRENT_SOURCE_DIR}/MacOSX/dbgnub-mig.defs
   )
 
@@ -305,7 +305,7 @@ if(APPLE_EMBEDDED)
     WITH_BKS
     )
   set_property(TARGET lldbDebugserverCommon APPEND PROPERTY COMPILE_FLAGS
-    -F${CMAKE_OSX_SYSROOT}/System/Library/PrivateFrameworks
+    -F${_CMAKE_OSX_SYSROOT_PATH}/System/Library/PrivateFrameworks
     )
 
   add_lldb_library(lldbDebugserverCommon_NonUI ${lldbDebugserverCommonSources})
diff --git a/llvm/test/CMakeLists.txt b/llvm/test/CMakeLists.txt
index 6127b76db0..0a810db531 100644
--- a/llvm/test/CMakeLists.txt
+++ b/llvm/test/CMakeLists.txt
@@ -33,6 +33,7 @@ configure_lit_site_cfg(
   MAIN_CONFIG
   ${CMAKE_CURRENT_SOURCE_DIR}/lit.cfg.py
   PATHS
+  "_CMAKE_OSX_SYSROOT_PATH"
   "CMAKE_OSX_SYSROOT"
   "LLVM_SOURCE_DIR"
   "LLVM_BINARY_DIR"
