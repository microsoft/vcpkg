diff --git a/CMakeLists.txt b/CMakeLists.txt
index bb53cc1..6a521fd 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -36,6 +36,7 @@ set_property(GLOBAL PROPERTY USE_FOLDERS ON)
 if(NOT CMAKE_OSX_DEPLOYMENT_TARGET)
   set(CMAKE_OSX_DEPLOYMENT_TARGET "13.6")
 endif()
+set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake")
 
 # Find Qt.
 find_package(Qt6 REQUIRED COMPONENTS Core Widgets Svg)
diff --git a/cmake/config.cmake.in b/cmake/config.cmake.in
new file mode 100644
index 0000000..87e2ae7
--- /dev/null
+++ b/cmake/config.cmake.in
@@ -0,0 +1,8 @@
+@PACKAGE_INIT@
+
+include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@Targets.cmake")
+include(CMakeFindDependencyMacro)
+
+find_dependency(Qt6 REQUIRED COMPONENTS Core Widgets Svg)
+
+check_required_components(@PROJECT_NAME@)
diff --git a/lib/CMakeLists.txt b/lib/CMakeLists.txt
index 05ee9a6..f173175 100644
--- a/lib/CMakeLists.txt
+++ b/lib/CMakeLists.txt
@@ -1,5 +1,3 @@
-set(LIB_TARGET_NAME ${PROJECT_NAME})
-
 # Declare files.
 set(SOURCES
   ${CMAKE_CURRENT_SOURCE_DIR}/src/animation/WidgetAnimator.cpp
@@ -110,33 +108,32 @@ set(RESOURCES
 )
 
 # Create target.
-qt_add_library(${LIB_TARGET_NAME} STATIC
+qt_add_library(${PROJECT_NAME} STATIC
   ${HEADERS}
   ${SOURCES}
   ${RESOURCES}
 )
+include(CMakePackageConfigHelpers)
 
-# Create a target alias.
-add_library(${PROJECT_NAMESPACE}::${LIB_TARGET_NAME} ALIAS ${LIB_TARGET_NAME})
-
-target_include_directories(${LIB_TARGET_NAME}
+target_include_directories(${PROJECT_NAME}
   PUBLIC
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
   PRIVATE
     $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
+    $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>
 )
 
-target_link_libraries(${LIB_TARGET_NAME}
+target_link_libraries(${PROJECT_NAME}
   PUBLIC
     Qt::Core
     Qt::Widgets
     Qt::Svg
 )
 
-set_target_properties(${LIB_TARGET_NAME}
+set_target_properties(${PROJECT_NAME}
   PROPERTIES
-    OUTPUT_NAME ${LIB_TARGET_NAME}
-    PROJECT_LABEL ${LIB_TARGET_NAME}
+    OUTPUT_NAME ${PROJECT_NAME}
+    PROJECT_LABEL ${PROJECT_NAME}
     FOLDER lib
     SOVERSION ${PROJECT_VERSION_MAJOR}
     VERSION ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}
@@ -146,7 +143,7 @@ set_target_properties(${LIB_TARGET_NAME}
     CMAKE_AUTOUIC ON
 )
 
-target_compile_options(${LIB_TARGET_NAME}
+target_compile_options(${PROJECT_NAME}
   PRIVATE
     $<$<CXX_COMPILER_ID:MSVC>:/MP /WX /W4>
     $<$<NOT:$<CXX_COMPILER_ID:MSVC>>:-Wall -Wextra -Werror>
@@ -161,5 +158,14 @@ source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR}
 
 # Select correct startup project in Visual Studio.
 if(WIN32)
-  set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT ${LIB_TARGET_NAME})
+  set_property(DIRECTORY PROPERTY VS_STARTUP_PROJECT ${PROJECT_NAME})
 endif()
+
+# Install target
+configure_package_config_file("${CMAKE_SOURCE_DIR}/cmake/config.cmake.in" "${CMAKE_BINARY_DIR}/cmake/${PROJECT_NAME}Config.cmake" INSTALL_DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
+write_basic_package_version_file("${CMAKE_BINARY_DIR}/cmake/${PROJECT_NAME}ConfigVersion.cmake" VERSION "${PROJECT_VERSION}" COMPATIBILITY AnyNewerVersion)
+install(TARGETS ${PROJECT_NAME} EXPORT "${PROJECT_NAME}Targets" LIBRARY DESTINATION "${CMAKE_INSTALL_LIBDIR}" ARCHIVE DESTINATION "${CMAKE_INSTALL_LIBDIR}" RUNTIME DESTINATION "${CMAKE_INSTALL_BINDIR}" INCLUDES DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}")
+install(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}/include/" DESTINATION "${CMAKE_INSTALL_INCLUDEDIR}/")
+install(EXPORT "${PROJECT_NAME}Targets" FILE "${PROJECT_NAME}Targets.cmake" NAMESPACE unofficial::${PROJECT_NAME}:: DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
+install(FILES "${CMAKE_BINARY_DIR}/cmake/${PROJECT_NAME}Config.cmake" "${CMAKE_BINARY_DIR}/cmake/${PROJECT_NAME}ConfigVersion.cmake" DESTINATION "${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}")
+export(EXPORT "${PROJECT_NAME}Targets" FILE "${CMAKE_BINARY_DIR}/cmake/${PROJECT_NAME}Targets.cmake" NAMESPACE unofficial::${PROJECT_NAME}::)
