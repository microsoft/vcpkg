diff --git a/lib/include/oclero/qlementine/csd/FramelessWindowBehavior.hpp b/lib/include/oclero/qlementine/csd/FramelessWindowBehavior.hpp
index decb892..33ed0a9 100644
--- a/lib/include/oclero/qlementine/csd/FramelessWindowBehavior.hpp
+++ b/lib/include/oclero/qlementine/csd/FramelessWindowBehavior.hpp
@@ -94,7 +94,7 @@ public:
    */
   void showSystemMenu(const QPoint& mousePos);
 
-signals:
+Q_SIGNALS:
   /**
    * @brief Signal called when the DPI or scale changed.
    */
diff --git a/lib/include/oclero/qlementine/csd/WindowsTitleBar.hpp b/lib/include/oclero/qlementine/csd/WindowsTitleBar.hpp
index c3f888f..a89d32e 100644
--- a/lib/include/oclero/qlementine/csd/WindowsTitleBar.hpp
+++ b/lib/include/oclero/qlementine/csd/WindowsTitleBar.hpp
@@ -62,7 +62,7 @@ protected:
   void showEvent(QShowEvent* event) override;
   bool event(QEvent* event) override;
 
-signals:
+Q_SIGNALS:
   void systemMenuTriggered();
 
 private:
diff --git a/lib/include/oclero/qlementine/tools/ThemeEditor.hpp b/lib/include/oclero/qlementine/tools/ThemeEditor.hpp
index c6f94b6..49ec1b4 100644
--- a/lib/include/oclero/qlementine/tools/ThemeEditor.hpp
+++ b/lib/include/oclero/qlementine/tools/ThemeEditor.hpp
@@ -20,7 +20,7 @@ public:
   const Theme& theme() const;
   void setTheme(const Theme& theme);
 
-signals:
+Q_SIGNALS:
   void themeChanged(const oclero::qlementine::Theme& theme);
 
 private:
diff --git a/lib/include/oclero/qlementine/widgets/ColorButton.hpp b/lib/include/oclero/qlementine/widgets/ColorButton.hpp
index 783c0d7..fee5fbc 100644
--- a/lib/include/oclero/qlementine/widgets/ColorButton.hpp
+++ b/lib/include/oclero/qlementine/widgets/ColorButton.hpp
@@ -28,7 +28,7 @@ public:
 
   QSize sizeHint() const override;
 
-signals:
+Q_SIGNALS:
   void colorChanged();
   void colorModeChanged();
 
diff --git a/lib/include/oclero/qlementine/widgets/ColorEditor.hpp b/lib/include/oclero/qlementine/widgets/ColorEditor.hpp
index 4918372..c6b181d 100644
--- a/lib/include/oclero/qlementine/widgets/ColorEditor.hpp
+++ b/lib/include/oclero/qlementine/widgets/ColorEditor.hpp
@@ -28,7 +28,7 @@ public:
   ColorMode colorMode() const;
   void setColorMode(ColorMode mode);
 
-signals:
+Q_SIGNALS:
   void colorChanged();
   void colorModeChanged();
 
diff --git a/lib/include/oclero/qlementine/widgets/Popover.hpp b/lib/include/oclero/qlementine/widgets/Popover.hpp
index b5b7877..5e7bd1e 100644
--- a/lib/include/oclero/qlementine/widgets/Popover.hpp
+++ b/lib/include/oclero/qlementine/widgets/Popover.hpp
@@ -79,11 +79,11 @@ public:
   void setHorizontalSpacing(int spacing);
   Q_SIGNAL void horizontalSpacingChanged();
 
-public slots:
+public Q_SLOTS:
   void openPopover();
   void closePopover();
 
-signals:
+Q_SIGNALS:
   void aboutToOpen();
   void aboutToClose();
   void opened();
diff --git a/lib/include/oclero/qlementine/widgets/PopoverButton.hpp b/lib/include/oclero/qlementine/widgets/PopoverButton.hpp
index 118f6ea..c99de44 100644
--- a/lib/include/oclero/qlementine/widgets/PopoverButton.hpp
+++ b/lib/include/oclero/qlementine/widgets/PopoverButton.hpp
@@ -24,10 +24,10 @@ public:
 
   Popover* popover() const;
 
-public slots:
+public Q_SLOTS:
   void setPopoverOpened(bool opened);
 
-signals:
+Q_SIGNALS:
   void popoverOpenedChanged(bool opened);
 
 protected:
diff --git a/lib/src/csd/FramelessWindowBehavior.cpp b/lib/src/csd/FramelessWindowBehavior.cpp
index 23de39c..d6f3011 100644
--- a/lib/src/csd/FramelessWindowBehavior.cpp
+++ b/lib/src/csd/FramelessWindowBehavior.cpp
@@ -41,7 +41,7 @@ const QMargins& FramelessWindowBehavior::resizeMargins() const {
 void FramelessWindowBehavior::setResizeMargins(const QMargins& margins) {
   if (margins != _resizeMargins) {
     _resizeMargins = margins;
-    emit resizeMarginsChanged();
+    Q_EMIT resizeMarginsChanged();
   }
 }
 
@@ -52,7 +52,7 @@ const QMargins& FramelessWindowBehavior::maximizedMargins() const {
 void FramelessWindowBehavior::setMaximizedMargins(const QMargins& margins) {
   if (margins != _maximizedMargins) {
     _maximizedMargins = margins;
-    emit maximizedMarginsChanged();
+    Q_EMIT maximizedMarginsChanged();
   }
 }
 
@@ -63,7 +63,7 @@ int FramelessWindowBehavior::titleBarHeight() const {
 void FramelessWindowBehavior::setTitleBarHeight(const int height) {
   if (height != _titleBarHeight) {
     _titleBarHeight = height;
-    emit titleBarHeightChanged();
+    Q_EMIT titleBarHeightChanged();
   }
 }
 
@@ -103,7 +103,7 @@ void FramelessWindowBehavior::setSystemMenuAreaWidth(int width) {
   width = std::max(0, width);
   if (width != _systemMenuAreaWidth) {
     _systemMenuAreaWidth = width;
-    emit systemMenuAreaWidthChanged();
+    Q_EMIT systemMenuAreaWidthChanged();
   }
 }
 
@@ -249,7 +249,7 @@ bool FramelessWindowBehavior::nativeEventFilter(const QByteArray& eventType, voi
       }
 
       if (!qFuzzyCompare(previousScaleFactor, _scaleFactor)) {
-        emit scaleFactorChanged();
+        Q_EMIT scaleFactorChanged();
       }
 
       const auto hWnd = reinterpret_cast<HWND>(_parentWindowHandle->winId());
diff --git a/lib/src/csd/WindowsTitleBar.cpp b/lib/src/csd/WindowsTitleBar.cpp
index 8b14ade..3463f79 100644
--- a/lib/src/csd/WindowsTitleBar.cpp
+++ b/lib/src/csd/WindowsTitleBar.cpp
@@ -146,7 +146,7 @@ void WindowsTitleBar::setupUi() {
   _rootLayout->addWidget(_iconButton);
   _iconButton->onMousePress = [this]() {
     if (systemWindowType() == SystemWindowType::Default) {
-      emit systemMenuTriggered();
+      Q_EMIT systemMenuTriggered();
     }
   };
 
@@ -230,7 +230,7 @@ void WindowsTitleBar::setButtonsSystemTheme(const SystemTheme systemTheme) {
     _minimizeButton->setSystemTheme(systemTheme);
     _maximizeButton->setSystemTheme(systemTheme);
     _closeButton->setSystemTheme(systemTheme);
-    emit buttonsSystemThemeChanged();
+    Q_EMIT buttonsSystemThemeChanged();
   }
 }
 
@@ -245,7 +245,7 @@ void WindowsTitleBar::setSystemWindowType(const SystemWindowType type) {
     _maximizeButton->setVisible(type == SystemWindowType::Default);
     _closeButton->setSystemWindowType(type);
     updateTitleGeometry();
-    emit systemWindowTypeChanged();
+    Q_EMIT systemWindowTypeChanged();
   }
 }
 
diff --git a/lib/src/csd/WindowsTitleBarButton.cpp b/lib/src/csd/WindowsTitleBarButton.cpp
index 0d1977a..ec69c2c 100644
--- a/lib/src/csd/WindowsTitleBarButton.cpp
+++ b/lib/src/csd/WindowsTitleBarButton.cpp
@@ -49,7 +49,7 @@ void WindowsTitleBarButton::setButtonType(const ButtonType type) {
     _theme = getTheme(_type, _systemTheme);
     setToolTip(getTooltip());
     update();
-    emit buttonTypeChanged();
+    Q_EMIT buttonTypeChanged();
   }
 }
 
@@ -62,7 +62,7 @@ void WindowsTitleBarButton::setSystemWindowType(const SystemWindowType type) {
     _windowType = type;
     setFixedSize(sizeHint());
     updateGeometry();
-    emit systemWindowTypeChanged();
+    Q_EMIT systemWindowTypeChanged();
   }
 }
 
@@ -269,7 +269,7 @@ void WindowsTitleBarButton::setSystemTheme(const SystemTheme systemTheme) {
     _systemTheme = systemTheme;
     _theme = getTheme(_type, _systemTheme);
     update();
-    emit systemThemeChanged();
+    Q_EMIT systemThemeChanged();
   }
 }
 } // namespace oclero::qlementine
diff --git a/lib/src/style/EventFilters.cpp b/lib/src/style/EventFilters.cpp
index e904bc3..9230125 100644
--- a/lib/src/style/EventFilters.cpp
+++ b/lib/src/style/EventFilters.cpp
@@ -234,7 +234,7 @@ bool TabBarEventFilter::eventFilter(QObject* watchedObject, QEvent* evt) {
       const auto tabIndex = _tabBar->tabAt(mouseEvent->pos());
       if (tabIndex != -1 && _tabBar->isTabVisible(tabIndex)) {
         evt->accept();
-        emit _tabBar->tabCloseRequested(tabIndex);
+        Q_EMIT _tabBar->tabCloseRequested(tabIndex);
         return true;
       }
     } else if (mouseEvent->button() == Qt::MouseButton::RightButton) {
@@ -242,7 +242,7 @@ bool TabBarEventFilter::eventFilter(QObject* watchedObject, QEvent* evt) {
       const auto tabIndex = _tabBar->tabAt(mouseEvent->pos());
       if (tabIndex != -1 && _tabBar->isTabVisible(tabIndex)) {
         evt->accept();
-        emit _tabBar->customContextMenuRequested(mouseEvent->pos());
+        Q_EMIT _tabBar->customContextMenuRequested(mouseEvent->pos());
         return true;
       }
     }
diff --git a/lib/src/style/QlementineStyle.cpp b/lib/src/style/QlementineStyle.cpp
index a2ad7d5..1e00728 100644
--- a/lib/src/style/QlementineStyle.cpp
+++ b/lib/src/style/QlementineStyle.cpp
@@ -266,7 +266,7 @@ Theme const& QlementineStyle::theme() const {
 void QlementineStyle::setTheme(Theme const& theme) {
   if (_impl->theme != theme) {
     _impl->theme = theme;
-    emit themeChanged();
+    Q_EMIT themeChanged();
 
     triggerCompleteRepaint();
   }
@@ -286,7 +286,7 @@ bool QlementineStyle::animationsEnabled() const {
 void QlementineStyle::setAnimationsEnabled(bool enabled) {
   if (enabled != _impl->animations.enabled()) {
     _impl->animations.setEnabled(enabled);
-    emit animationsEnabledChanged();
+    Q_EMIT animationsEnabledChanged();
     triggerCompleteRepaint();
   }
 }
diff --git a/lib/src/style/ThemeManager.cpp b/lib/src/style/ThemeManager.cpp
index 4e2c12b..296b3f2 100644
--- a/lib/src/style/ThemeManager.cpp
+++ b/lib/src/style/ThemeManager.cpp
@@ -25,8 +25,8 @@ void ThemeManager::setStyle(QlementineStyle* style) {
   if (style != _style) {
     _style = style;
     synchronizeThemeOnStyle();
-    emit currentThemeChanged();
-    emit themeCountChanged();
+    Q_EMIT currentThemeChanged();
+    Q_EMIT themeCountChanged();
   }
 }
 
@@ -36,7 +36,7 @@ const std::vector<Theme>& ThemeManager::themes() const {
 
 void ThemeManager::addTheme(const Theme& theme) {
   _themes.emplace_back(theme);
-  emit themeCountChanged();
+  Q_EMIT themeCountChanged();
   if (_currentIndex < 0) {
     setCurrentThemeIndex(0);
   }
@@ -82,7 +82,7 @@ void ThemeManager::setCurrentThemeIndex(int index) {
     if (index != _currentIndex) {
       _currentIndex = index;
       synchronizeThemeOnStyle();
-      emit currentThemeChanged();
+      Q_EMIT currentThemeChanged();
     }
   }
 }
diff --git a/lib/src/tools/ThemeEditor.cpp b/lib/src/tools/ThemeEditor.cpp
index d727346..0ffe162 100644
--- a/lib/src/tools/ThemeEditor.cpp
+++ b/lib/src/tools/ThemeEditor.cpp
@@ -30,7 +30,7 @@
   { \
     const auto pair = makeColorEditorAndLabel(#NAME, DESCRIPTION, &owner, theme.NAME, [this](const QColor& c) { \
       theme.NAME = c; \
-      emit owner.themeChanged(theme); \
+      Q_EMIT owner.themeChanged(theme); \
     }); \
     this->NAME##Editor = pair.second; \
     formLayout->addRow(pair.first, pair.second); \
@@ -40,7 +40,7 @@
   { \
     const auto pair = makeTextEditorAndLabel(#NAME, DESCRIPTION, &owner, [this](const QString& s) { \
       theme.meta.NAME = s; \
-      emit owner.themeChanged(theme); \
+      Q_EMIT owner.themeChanged(theme); \
     }); \
     this->NAME##Editor = pair.second; \
     formLayout->addRow(pair.first, pair.second); \
@@ -516,7 +516,7 @@ void ThemeEditor::setTheme(const Theme& theme) {
   if (theme != _impl->theme) {
     _impl->theme = theme;
     _impl->updateUi();
-    emit themeChanged(_impl->theme);
+    Q_EMIT themeChanged(_impl->theme);
   }
 }
 } // namespace oclero::qlementine
diff --git a/lib/src/widgets/AbstractItemListWidget.cpp b/lib/src/widgets/AbstractItemListWidget.cpp
index 07e80c1..d3cf850 100644
--- a/lib/src/widgets/AbstractItemListWidget.cpp
+++ b/lib/src/widgets/AbstractItemListWidget.cpp
@@ -55,7 +55,7 @@ void AbstractItemListWidget::setCurrentIndex(int index) {
     update();
     updateCurrentIndexAnimation();
     updateItemsAnimations();
-    emit currentIndexChanged();
+    Q_EMIT currentIndexChanged();
   }
 }
 
@@ -124,8 +124,8 @@ int AbstractItemListWidget::addItem(
   updateGeometry();
   updateItemsAnimations();
   updateCurrentIndexAnimation();
-  emit itemCountChanged();
-  emit currentIndexChanged();
+  Q_EMIT itemCountChanged();
+  Q_EMIT currentIndexChanged();
 
   const auto [bgColor, fgColor, badgeBgColor, badgeFgColor] = getItemBgAndFgColor(itemCount(), MouseState::Normal);
   bgColorAnimation->setDuration(animDuration);
@@ -168,7 +168,7 @@ void AbstractItemListWidget::removeItem(int index) {
       setCurrentIndex(std::max(-1, index - 1));
     }
 
-    emit itemCountChanged();
+    Q_EMIT itemCountChanged();
   }
 }
 
@@ -272,7 +272,7 @@ void AbstractItemListWidget::setIconSize(const QSize& size) {
     _iconSize = size;
     updateGeometry();
     update();
-    emit iconSizeChanged();
+    Q_EMIT iconSizeChanged();
   }
 }
 
@@ -288,7 +288,7 @@ void AbstractItemListWidget::setItemsShouldExpand(bool expand) {
     updateCurrentIndexAnimation(true);
     _focusFrame->update();
     _focusFrame->updateGeometry();
-    emit itemsShouldExpandChanged();
+    Q_EMIT itemsShouldExpandChanged();
   }
 }
 
diff --git a/lib/src/widgets/Action.cpp b/lib/src/widgets/Action.cpp
index 512ec1a..a992e80 100644
--- a/lib/src/widgets/Action.cpp
+++ b/lib/src/widgets/Action.cpp
@@ -115,8 +115,8 @@ bool Action::shortcutEditable() const {
 void Action::setShortcutEditable(bool editable) {
   if (editable != _shortcutEditable) {
     _shortcutEditable = editable;
-    emit shortcutEditableChanged();
-    emit changed();
+    Q_EMIT shortcutEditableChanged();
+    Q_EMIT changed();
   }
 }
 
@@ -130,7 +130,7 @@ void Action::setUserShortcut(const QKeySequence& shortcut) {
       //  Save the default shortcut.
       _defaultShortcut = this->shortcut();
       _shortcutEditedByUser = true;
-      emit shortcutEditedByUserChanged();
+      Q_EMIT shortcutEditedByUserChanged();
     }
 
     _userShortcut = shortcut;
@@ -138,7 +138,7 @@ void Action::setUserShortcut(const QKeySequence& shortcut) {
     // Set the new shortcut on the action.
     setShortcut(_userShortcut);
 
-    emit userShortcutChanged();
+    Q_EMIT userShortcutChanged();
   }
 }
 
@@ -147,8 +147,8 @@ void Action::resetShortcut() {
     _userShortcut = {};
     _shortcutEditedByUser = false;
 
-    emit userShortcutChanged();
-    emit shortcutEditedByUserChanged();
+    Q_EMIT userShortcutChanged();
+    Q_EMIT shortcutEditedByUserChanged();
     setShortcut(_defaultShortcut);
   }
 }
@@ -164,8 +164,8 @@ const QString& Action::description() const {
 void Action::setDescription(const QString& description) {
   if (description != _description) {
     _description = description;
-    emit descriptionChanged();
-    emit changed();
+    Q_EMIT descriptionChanged();
+    Q_EMIT changed();
   }
 }
 } // namespace oclero::qlementine
diff --git a/lib/src/widgets/ColorButton.cpp b/lib/src/widgets/ColorButton.cpp
index 9fdd259..35241b6 100644
--- a/lib/src/widgets/ColorButton.cpp
+++ b/lib/src/widgets/ColorButton.cpp
@@ -61,7 +61,7 @@ void ColorButton::setColor(const QColor& color) {
   if (newColor != _color) {
     _color = newColor;
     update();
-    emit colorChanged();
+    Q_EMIT colorChanged();
   }
 }
 
@@ -72,7 +72,7 @@ ColorMode ColorButton::colorMode() const {
 void ColorButton::setColorMode(ColorMode mode) {
   if (mode != _colorMode) {
     _colorMode = mode;
-    emit colorModeChanged();
+    Q_EMIT colorModeChanged();
     setColor(adaptColorToMode(_color));
   }
 }
diff --git a/lib/src/widgets/ColorEditor.cpp b/lib/src/widgets/ColorEditor.cpp
index efef205..47f4aba 100644
--- a/lib/src/widgets/ColorEditor.cpp
+++ b/lib/src/widgets/ColorEditor.cpp
@@ -44,12 +44,12 @@ void ColorEditor::setup(const QColor& initialColor) {
   // Connect widgets together.
   QObject::connect(_colorButton, &ColorButton::colorChanged, this, [this]() {
     syncLineEditFromButton();
-    emit colorChanged();
+    Q_EMIT colorChanged();
   });
 
   QObject::connect(_colorButton, &ColorButton::colorModeChanged, this, [this]() {
     syncLineEditFromButton();
-    emit colorModeChanged();
+    Q_EMIT colorModeChanged();
   });
 
 
diff --git a/lib/src/widgets/Expander.cpp b/lib/src/widgets/Expander.cpp
index db6882b..7dad56b 100644
--- a/lib/src/widgets/Expander.cpp
+++ b/lib/src/widgets/Expander.cpp
@@ -31,9 +31,9 @@ Expander::Expander(QWidget* parent)
 
   QObject::connect(&_animation, &QVariantAnimation::finished, this, [this]() {
     if (_expanded) {
-      emit didExpand();
+      Q_EMIT didExpand();
     } else {
-      emit didShrink();
+      Q_EMIT didShrink();
     }
   });
 }
@@ -104,9 +104,9 @@ void Expander::setExpanded(bool expanded) {
     _expanded = expanded;
 
     if (_expanded) {
-      emit aboutToExpand();
+      Q_EMIT aboutToExpand();
     } else {
-      emit aboutToShrink();
+      Q_EMIT aboutToShrink();
     }
 
     const auto isVertical = _orientation == Qt::Orientation::Vertical;
@@ -120,7 +120,7 @@ void Expander::setExpanded(bool expanded) {
     _animation.setEndValue(QVariant::fromValue<int>(target));
     _animation.start();
 
-    emit expandedChanged();
+    Q_EMIT expandedChanged();
   }
 }
 
@@ -143,7 +143,7 @@ void Expander::setOrientation(Qt::Orientation orientation) {
     }
 
     updateGeometry();
-    emit orientationChanged();
+    Q_EMIT orientationChanged();
   }
 }
 
@@ -171,7 +171,7 @@ void Expander::setContent(QWidget* content) {
       _content->setVisible(_expanded);
     }
     updateGeometry();
-    emit contentChanged();
+    Q_EMIT contentChanged();
   }
 }
 } // namespace oclero::qlementine
diff --git a/lib/src/widgets/IconWidget.cpp b/lib/src/widgets/IconWidget.cpp
index be037ee..9979d16 100644
--- a/lib/src/widgets/IconWidget.cpp
+++ b/lib/src/widgets/IconWidget.cpp
@@ -52,7 +52,7 @@ const QSize& IconWidget::iconSize() const {
 void IconWidget::setIconSize(const QSize& iconSize) {
   if (iconSize != _iconSize) {
     _iconSize = iconSize;
-    emit iconSizeChanged();
+    Q_EMIT iconSizeChanged();
     updateGeometry();
     update();
   }
diff --git a/lib/src/widgets/Label.cpp b/lib/src/widgets/Label.cpp
index d528d62..7b5689d 100644
--- a/lib/src/widgets/Label.cpp
+++ b/lib/src/widgets/Label.cpp
@@ -38,7 +38,7 @@ void Label::setRole(TextRole role) {
     _role = role;
     // Change text font, size and color.
     updatePaletteFromTheme();
-    emit roleChanged();
+    Q_EMIT roleChanged();
   }
 }
 
diff --git a/lib/src/widgets/LineEdit.cpp b/lib/src/widgets/LineEdit.cpp
index 4bafca8..6c23812 100644
--- a/lib/src/widgets/LineEdit.cpp
+++ b/lib/src/widgets/LineEdit.cpp
@@ -113,7 +113,7 @@ void LineEdit::setStatus(Status status) {
   if (status != _status) {
     _status = status;
     update();
-    emit statusChanged();
+    Q_EMIT statusChanged();
   }
 }
 } // namespace oclero::qlementine
diff --git a/lib/src/widgets/PlainTextEdit.cpp b/lib/src/widgets/PlainTextEdit.cpp
index 96ee7ab..477c6cc 100644
--- a/lib/src/widgets/PlainTextEdit.cpp
+++ b/lib/src/widgets/PlainTextEdit.cpp
@@ -41,7 +41,7 @@ void PlainTextEdit::setStatus(Status status) {
   if (status != _status) {
     _status = status;
     update();
-    emit statusChanged();
+    Q_EMIT statusChanged();
   }
 }
 
diff --git a/lib/src/widgets/Popover.cpp b/lib/src/widgets/Popover.cpp
index 5f2ab58..5ddf132 100644
--- a/lib/src/widgets/Popover.cpp
+++ b/lib/src/widgets/Popover.cpp
@@ -106,10 +106,10 @@ Popover::Popover(QWidget* parent)
   });
   QObject::connect(&_opacityAnimation, &QVariantAnimation::finished, this, [this]() {
     if (_opened) {
-      emit opened();
+      Q_EMIT opened();
     } else {
       _mousePressWasOnAnchor = false;
-      emit closed();
+      Q_EMIT closed();
       hide();
     }
   });
@@ -125,7 +125,7 @@ void Popover::setPreferredPosition(Position position) {
     if (isVisible()) {
       updatePopoverGeometry();
     }
-    emit preferredPositionChanged();
+    Q_EMIT preferredPositionChanged();
   }
 }
 
@@ -140,7 +140,7 @@ void Popover::setPreferredAlignment(Alignment alignment) {
     if (isVisible()) {
       updatePopoverGeometry();
     }
-    emit preferredAlignmentChanged();
+    Q_EMIT preferredAlignmentChanged();
   }
 }
 
@@ -171,7 +171,7 @@ void Popover::setContentWidget(QWidget* widget) {
     if (isVisible()) {
       updatePopoverGeometry();
     }
-    emit contentWidgetChanged();
+    Q_EMIT contentWidgetChanged();
   }
 }
 
@@ -183,16 +183,16 @@ void Popover::setOpened(bool opened) {
   if (opened != _opened) {
     _opened = opened;
     if (_opened) {
-      emit aboutToOpen();
+      Q_EMIT aboutToOpen();
       updatePopoverGeometry();
       show();
       startAnimation();
     } else {
-      emit aboutToClose();
+      Q_EMIT aboutToClose();
       startAnimation();
     }
 
-    emit openedChanged();
+    Q_EMIT openedChanged();
   }
 }
 
@@ -203,7 +203,7 @@ QMargins Popover::padding() const {
 void Popover::setPadding(const QMargins& padding) {
   if (padding != _frameLayout->contentsMargins()) {
     _frameLayout->setContentsMargins(padding);
-    emit paddingChanged();
+    Q_EMIT paddingChanged();
   }
 }
 
@@ -244,7 +244,7 @@ void Popover::setAnchorWidget(QWidget* widget) {
     if (isVisible()) {
       updatePopoverGeometry();
     }
-    emit anchorWidgetChanged();
+    Q_EMIT anchorWidgetChanged();
   }
 }
 
@@ -258,7 +258,7 @@ void Popover::setVerticalSpacing(int spacing) {
     if (isVisible()) {
       updatePopoverGeometry();
     }
-    emit verticalSpacingChanged();
+    Q_EMIT verticalSpacingChanged();
   }
 }
 
@@ -272,7 +272,7 @@ void Popover::setHorizontalSpacing(int spacing) {
     if (isVisible()) {
       updatePopoverGeometry();
     }
-    emit horizontalSpacingChanged();
+    Q_EMIT horizontalSpacingChanged();
   }
 }
 
diff --git a/lib/src/widgets/PopoverButton.cpp b/lib/src/widgets/PopoverButton.cpp
index 80c6034..58e421f 100644
--- a/lib/src/widgets/PopoverButton.cpp
+++ b/lib/src/widgets/PopoverButton.cpp
@@ -24,10 +24,10 @@ PopoverButton::PopoverButton(const QString& text, const QIcon& icon, QWidget* pa
   });
   QObject::connect(_popover, &Popover::openedChanged, this, [this]() {
     update();
-    emit popoverOpenedChanged(_popover->isOpened());
+    Q_EMIT popoverOpenedChanged(_popover->isOpened());
   });
   QObject::connect(_popover, &Popover::contentWidgetChanged, this, [this]() {
-    emit popoverContentWidgetChanged();
+    Q_EMIT popoverContentWidgetChanged();
   });
 }
 
diff --git a/lib/src/widgets/RoundedFocusFrame.cpp b/lib/src/widgets/RoundedFocusFrame.cpp
index 66a2689..aa240b7 100644
--- a/lib/src/widgets/RoundedFocusFrame.cpp
+++ b/lib/src/widgets/RoundedFocusFrame.cpp
@@ -11,7 +11,7 @@ const RadiusesF& RoundedFocusFrame::radiuses() const {
 void RoundedFocusFrame::setRadiuses(const RadiusesF& radiuses) {
   if (radiuses != _radiuses) {
     _radiuses = radiuses;
-    emit radiusesChanged();
+    Q_EMIT radiusesChanged();
     update();
   }
 }
diff --git a/lib/src/widgets/StatusBadgeWidget.cpp b/lib/src/widgets/StatusBadgeWidget.cpp
index 1949689..a091a17 100644
--- a/lib/src/widgets/StatusBadgeWidget.cpp
+++ b/lib/src/widgets/StatusBadgeWidget.cpp
@@ -27,7 +27,7 @@ void StatusBadgeWidget::setBadge(StatusBadge badge) {
   if (badge != _badge) {
     _badge = badge;
     update();
-    emit badgeChanged();
+    Q_EMIT badgeChanged();
   }
 }
 
@@ -40,7 +40,7 @@ void StatusBadgeWidget::setBadgeSize(StatusBadgeSize size) {
     _badgeSize = size;
     updateGeometry();
     update();
-    emit badgeSizeChanged();
+    Q_EMIT badgeSizeChanged();
   }
 }
 
 