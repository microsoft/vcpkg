diff --git a/CMakeLists.txt b/CMakeLists.txt
index 90e274cc..b20534f9 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -294,7 +294,7 @@ if (GGML_STANDALONE)
         @ONLY)
 
     install(FILES ${CMAKE_CURRENT_BINARY_DIR}/ggml.pc
-        DESTINATION share/pkgconfig)
+        DESTINATION ${CMAKE_INSTALL_LIBDIR}/pkgconfig)
 endif()
 
 #
@@ -335,6 +335,7 @@ set(variable_set_statements
 set(GGML_SHARED_LIB ${BUILD_SHARED_LIBS})
 
 get_cmake_property(all_variables VARIABLES)
+list(FILTER all_variables EXCLUDE REGEX "^GGML_PKGCONFIG")
 foreach(variable_name IN LISTS all_variables)
     if(variable_name MATCHES "^GGML_")
         string(REPLACE ";" "\\;"
diff --git a/ggml.pc.in b/ggml.pc.in
index 9be62dc3..f39c26c0 100644
--- a/ggml.pc.in
+++ b/ggml.pc.in
@@ -6,5 +6,6 @@ libdir=${prefix}/@CMAKE_INSTALL_LIBDIR@
 Name: ggml
 Description: The GGML Tensor Library for Machine Learning
 Version: 0.0.0
-Cflags: -I${includedir}
-Libs: -L${libdir} -lggml
+Cflags: -I${includedir} @GGML_PKGCONFIG_CFLAGS@
+Libs: -L${libdir} -lggml @GGML_PKGCONFIG_LIBS_BACKEND@ -lggml-base
+Libs.private: @GGML_PKGCONFIG_LIBS_PRIVATE@
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 2b5b8169..ef71cbf5 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -183,6 +183,10 @@ endif()
 
 # ggml
 
+set(GGML_PKGCONFIG_CFLAGS "")
+set(GGML_PKGCONFIG_LIBS_BACKEND "") # before ggml-base iff using static linkage
+set(GGML_PKGCONFIG_LIBS_PRIVATE "")
+
 if (GGML_BACKEND_DL AND NOT BUILD_SHARED_LIBS)
     message(FATAL_ERROR "GGML_BACKEND_DL requires BUILD_SHARED_LIBS")
 endif()
@@ -225,6 +229,7 @@ target_link_libraries(ggml PUBLIC ggml-base)
 
 if (CMAKE_SYSTEM_NAME MATCHES "Linux")
     target_link_libraries(ggml PRIVATE dl)
+    string(APPEND GGML_PKGCONFIG_LIBS_PRIVATE " -ldl")
 endif()
 
 function(ggml_add_backend_library backend)
@@ -269,11 +274,14 @@ function(ggml_add_backend backend)
     string(TOUPPER "GGML_${backend}" backend_id)
     if (${backend_id})
         string(TOLOWER "ggml-${backend}" backend_target)
+        string(APPEND GGML_PKGCONFIG_LIBS_BACKEND "-l${backend_target} ") # this scope
         add_subdirectory(${backend_target})
         message(STATUS "Including ${backend} backend")
         if (NOT GGML_BACKEND_DL)
             string(TOUPPER "GGML_USE_${backend}" backend_use)
             target_compile_definitions(ggml PUBLIC ${backend_use})
+            set(GGML_PKGCONFIG_CFLAGS "${GGML_PKGCONFIG_CFLAGS} -D${backend_use}" PARENT_SCOPE)
+            set(GGML_PKGCONFIG_LIBS_BACKEND "${GGML_PKGCONFIG_LIBS_BACKEND}" PARENT_SCOPE)
         endif()
     endif()
 endfunction()
@@ -396,11 +404,15 @@ find_library(MATH_LIBRARY m)
 if (MATH_LIBRARY)
     if (NOT WIN32 OR NOT DEFINED ENV{ONEAPI_ROOT})
         target_link_libraries(ggml-base PRIVATE m)
+        string(APPEND GGML_PKGCONFIG_LIBS_PRIVATE " -lm")
     endif()
 endif()
 
 if (CMAKE_SYSTEM_NAME MATCHES "Android")
     target_link_libraries(ggml-base PRIVATE dl)
+    if(NOT GGML_PKGCONFIG_LIBS_PRIVATE MATCHES " -ldl")
+        string(APPEND GGML_PKGCONFIG_LIBS_PRIVATE " -ldl")
+    endif()
 endif()
 
 if(CMAKE_SYSTEM_NAME MATCHES "visionOS")
@@ -414,3 +426,9 @@ if (BUILD_SHARED_LIBS)
         target_compile_definitions(${target} PUBLIC  GGML_SHARED)
     endforeach()
 endif()
+
+set(GGML_PKGCONFIG_CFLAGS "${GGML_PKGCONFIG_CFLAGS}" PARENT_SCOPE)
+set(GGML_PKGCONFIG_LIBS_PRIVATE "${GGML_PKGCONFIG_LIBS_PRIVATE}" PARENT_SCOPE)
+if(NOT BUILD_SHARED_LIBS)
+    set(GGML_PKGCONFIG_LIBS_BACKEND "${GGML_PKGCONFIG_LIBS_BACKEND}" PARENT_SCOPE)
+endif()
diff --git a/src/ggml-cpu/CMakeLists.txt b/src/ggml-cpu/CMakeLists.txt
index ce0a3e12..3bf722e5 100644
--- a/src/ggml-cpu/CMakeLists.txt
+++ b/src/ggml-cpu/CMakeLists.txt
@@ -52,6 +52,9 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
     target_compile_features(${GGML_CPU_NAME} PRIVATE c_std_11 cxx_std_17)
     target_include_directories(${GGML_CPU_NAME} PRIVATE . ggml-cpu)
 
+    set(libs_private "")
+    set(pkgconfig_cflags "")
+
     if (APPLE AND GGML_ACCELERATE)
         find_library(ACCELERATE_FRAMEWORK Accelerate)
         if (ACCELERATE_FRAMEWORK)
@@ -62,6 +65,7 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
             target_compile_definitions(${GGML_CPU_NAME} PRIVATE ACCELERATE_LAPACK_ILP64)
 
             target_link_libraries(${GGML_CPU_NAME} PRIVATE ${ACCELERATE_FRAMEWORK})
+            string(APPEND libs_private "-framework Accelerate ")
         else()
             message(WARNING "Accelerate framework not found")
         endif()
@@ -74,6 +78,12 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
             target_compile_definitions(${GGML_CPU_NAME} PRIVATE GGML_USE_OPENMP)
 
             target_link_libraries(${GGML_CPU_NAME} PRIVATE OpenMP::OpenMP_C OpenMP::OpenMP_CXX)
+            foreach(lib IN LISTS OpenMP_CXX_LIB_NAMES OpenMP_C_LIB_NAMES)
+                string(APPEND libs_private "-l${lib} ")
+            endforeach()
+            foreach(flag IN LISTS OpenMP_CXX_FLAGS OpenMP_C_FLAGS)
+                string(APPEND pkgconfig_cflags " ${flag}")
+            endforeach()
         else()
             set(GGML_OPENMP_ENABLED "OFF" CACHE INTERNAL "")
             message(WARNING "OpenMP not found")
@@ -96,6 +106,16 @@ function(ggml_add_cpu_backend_variant_impl tag_name)
         target_compile_definitions(${GGML_CPU_NAME} PRIVATE GGML_USE_CPU_HBM)
 
         target_link_libraries(${GGML_CPU_NAME} PUBLIC memkind)
+        string(APPEND libs_private "-lmemkind ")
+    endif()
+
+    string(FIND "${GGML_PKGCONFIG_CFLAGS}" "${pkgconfig_cflags}" index)
+    if(index EQUAL "-1")
+        set(GGML_PKGCONFIG_CFLAGS "${GGML_PKGCONFIG_CFLAGS}${pkgconfig_cflags}" PARENT_SCOPE)
+    endif()
+    string(FIND "${GGML_PKGCONFIG_LIBS_BACKEND}" "${libs_private}" index)
+    if(index EQUAL "-1")
+        set(GGML_PKGCONFIG_LIBS_BACKEND "${GGML_PKGCONFIG_LIBS_BACKEND}${libs_private}" PARENT_SCOPE)
     endif()
 
     if (GGML_SYSTEM_ARCH STREQUAL "ARM")
diff --git a/src/ggml-metal/CMakeLists.txt b/src/ggml-metal/CMakeLists.txt
index 0ca8a3c5..4f0bedd1 100644
--- a/src/ggml-metal/CMakeLists.txt
+++ b/src/ggml-metal/CMakeLists.txt
@@ -14,6 +14,11 @@ target_link_libraries(ggml-metal PRIVATE
                       ${METALKIT_FRAMEWORK}
                       )
 
+set(GGML_PKGCONFIG_LIBS_BACKEND
+    "${GGML_PKGCONFIG_LIBS_BACKEND} -framework Foundation -framework Metal -framework MetalKit"
+    PARENT_SCOPE
+)
+
 if (GGML_METAL_NDEBUG)
     add_compile_definitions(GGML_METAL_NDEBUG)
 endif()
