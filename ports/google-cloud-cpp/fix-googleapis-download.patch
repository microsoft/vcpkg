diff --git a/external/googleapis/CMakeLists.txt b/external/googleapis/CMakeLists.txt
index 5e93f522..30101d12 100644
--- a/external/googleapis/CMakeLists.txt
+++ b/external/googleapis/CMakeLists.txt
@@ -18,23 +18,6 @@ if (NOT GOOGLE_CLOUD_CPP_ENABLE_GRPC)
     return()
 endif ()
 
-include(GoogleapisConfig)
-
-set(GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL
-    "https://github.com/googleapis/googleapis/archive/${_GOOGLE_CLOUD_CPP_GOOGLEAPIS_COMMIT_SHA}.tar.gz"
-    "https://storage.googleapis.com/cloud-cpp-community-archive/github.com/googleapis/googleapis/archive/${_GOOGLE_CLOUD_CPP_GOOGLEAPIS_COMMIT_SHA}.tar.gz"
-)
-set(GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL_HASH
-    "${_GOOGLE_CLOUD_CPP_GOOGLEAPIS_SHA256}")
-if (GOOGLE_CLOUD_CPP_OVERRIDE_GOOGLEAPIS_URL)
-    set(GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL
-        ${GOOGLE_CLOUD_CPP_OVERRIDE_GOOGLEAPIS_URL})
-endif ()
-if (GOOGLE_CLOUD_CPP_OVERRIDE_GOOGLEAPIS_URL_HASH)
-    set(GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL_HASH
-        "${GOOGLE_CLOUD_CPP_OVERRIDE_GOOGLEAPIS_URL_HASH}")
-endif ()
-
 set(EXTERNAL_GOOGLEAPIS_PROTO_FILES
     # cmake-format: sort
     "google/api/annotations.proto"
@@ -114,7 +97,7 @@ include(GoogleCloudCppCommonOptions)
 # the generated libraries.  The Conan packages (https://conan.io), will need to
 # patch this value.  Setting the value in a single place makes such patching
 # easier.
-set(EXTERNAL_GOOGLEAPIS_PREFIX "${PROJECT_BINARY_DIR}/external/googleapis")
+set(EXTERNAL_GOOGLEAPIS_PREFIX "${CMAKE_SOURCE_DIR}/external/googleapis")
 set(EXTERNAL_GOOGLEAPIS_SOURCE
     "${EXTERNAL_GOOGLEAPIS_PREFIX}/src/googleapis_download"
     PARENT_SCOPE)
@@ -138,32 +121,6 @@ foreach (file IN LISTS protolists)
     endforeach ()
 endforeach ()
 
-include(ExternalProject)
-
-externalproject_add(
-    googleapis_download
-    EXCLUDE_FROM_ALL ON
-    PREFIX "${EXTERNAL_GOOGLEAPIS_PREFIX}"
-    URL ${GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL}
-    URL_HASH SHA256=${GOOGLE_CLOUD_CPP_GOOGLEAPIS_URL_HASH}
-    PATCH_COMMAND
-        ""
-        # ~~~
-        # Scaffolding for patching googleapis after download. For example:
-        #   PATCH_COMMAND
-        #       patch
-        #       -p1
-        #       --input=/workspace/external/googleapis.patch
-        # NOTE: This should only be used while developing with a new
-        # protobuf message. No changes to `PATCH_COMMAND` should ever be
-        # committed to the main branch.
-        # ~~~
-    CONFIGURE_COMMAND ""
-    BUILD_COMMAND ""
-    INSTALL_COMMAND ""
-    BUILD_BYPRODUCTS ${EXTERNAL_GOOGLEAPIS_BYPRODUCTS}
-    LOG_DOWNLOAD OFF)
-
 google_cloud_cpp_find_proto_include_dir(PROTO_INCLUDE_DIR)
 
 google_cloud_cpp_add_protos_property()
@@ -204,7 +161,6 @@ function (external_googleapis_add_library proto)
 endfunction ()
 
 function (external_googleapis_set_version_and_alias short_name)
-    add_dependencies("google_cloud_cpp_${short_name}" googleapis_download)
     set_target_properties(
         "google_cloud_cpp_${short_name}"
         PROPERTIES EXPORT_NAME google-cloud-cpp::${short_name}
