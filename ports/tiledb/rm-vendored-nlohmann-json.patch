diff --git a/tiledb/as_built/storage_backends.h b/tiledb/as_built/storage_backends.h
index 4aa9306..e3d2b16 100644
--- a/tiledb/as_built/storage_backends.h
+++ b/tiledb/as_built/storage_backends.h
@@ -34,7 +34,7 @@
 #ifndef TILEDB_STORAGE_BACKENDS_H
 #define TILEDB_STORAGE_BACKENDS_H
 
-#include "external/include/nlohmann/json.hpp"
+#include <nlohmann/json.hpp>
 
 using json = nlohmann::json;
 
diff --git a/tiledb/as_built/support.h b/tiledb/as_built/support.h
index 6fd5808..542d340 100644
--- a/tiledb/as_built/support.h
+++ b/tiledb/as_built/support.h
@@ -34,7 +34,7 @@
 #ifndef TILEDB_SUPPORT_H
 #define TILEDB_SUPPORT_H
 
-#include "external/include/nlohmann/json.hpp"
+#include <nlohmann/json.hpp>
 
 using json = nlohmann::json;
 
diff --git a/tiledb/CMakeLists.txt b/tiledb/CMakeLists.txt
index c131b00..81ef162 100644
--- a/tiledb/CMakeLists.txt
+++ b/tiledb/CMakeLists.txt
@@ -572,6 +572,7 @@ endif()
 # which is installed here.
 find_package(BZip2 REQUIRED)
 find_package(LZ4 MODULE REQUIRED)
+find_package(nlohmann_json CONFIG REQUIRED)
 find_package(spdlog REQUIRED)
 find_package(ZLIB REQUIRED)
 find_package(zstd CONFIG REQUIRED)
@@ -579,6 +580,7 @@ target_link_libraries(TILEDB_CORE_OBJECTS_ILIB
   INTERFACE
     BZip2::BZip2
     lz4::lz4
+    $<BUILD_INTERFACE:nlohmann_json::nlohmann_json>
     spdlog::spdlog
     ZLIB::ZLIB
     zstd::libzstd
@@ -749,7 +751,7 @@ target_link_libraries(tiledb
   PRIVATE
     # TODO: TILEDB_CORE_OBJECTS_ILIB should be removed and dependencies should be specified
     # without directly getting target_properties.
-    $<TARGET_PROPERTY:TILEDB_CORE_OBJECTS_ILIB,INTERFACE_LINK_LIBRARIES>
+    $<GENEX_EVAL:$<TARGET_PROPERTY:TILEDB_CORE_OBJECTS_ILIB,INTERFACE_LINK_LIBRARIES>>
     $<BUILD_INTERFACE:TILEDB_CORE_OBJECTS>
 )
 
diff --git a/tiledb/common/CMakeLists.txt b/tiledb/common/CMakeLists.txt
index 488865c..899e4bf 100644
--- a/tiledb/common/CMakeLists.txt
+++ b/tiledb/common/CMakeLists.txt
@@ -89,7 +89,9 @@ commence(object_library baseline)
     if (TILEDB_USE_CPP17_PMR)
       this_target_sources(polymorphic_allocator/polymorphic_allocator.cc)
     endif()
+    find_package(nlohmann_json REQUIRED)
     find_package(spdlog REQUIRED)
+    target_link_libraries(baseline PUBLIC nlohmann_json::nlohmann_json)
     target_link_libraries(baseline PUBLIC spdlog::spdlog)
     target_link_libraries(baseline PUBLIC common)
 conclude(object_library)
diff --git a/tiledb/common/memory_tracker.cc b/tiledb/common/memory_tracker.cc
index 112ddc2..2779371 100644
--- a/tiledb/common/memory_tracker.cc
+++ b/tiledb/common/memory_tracker.cc
@@ -33,7 +33,7 @@
 
 #include <fstream>
 
-#include "external/include/nlohmann/json.hpp"
+#include <nlohmann/json.hpp>
 
 #include "tiledb/common/assert.h"
 #include "tiledb/common/exception/exception.h"
diff --git a/tiledb/common/memory_tracker.h b/tiledb/common/memory_tracker.h
index e6f6723..bc10972 100644
--- a/tiledb/common/memory_tracker.h
+++ b/tiledb/common/memory_tracker.h
@@ -100,7 +100,8 @@
 #include <functional>
 #include <thread>
 
-#include "external/include/nlohmann/json.hpp"
+#include <nlohmann/json_fwd.hpp>
+
 #include "tiledb/common/pmr.h"
 #include "tiledb/common/status.h"
 #include "tiledb/sm/config/config.h"
diff --git a/tiledb/sm/filesystem/win.cc b/tiledb/sm/filesystem/win.cc
index 26f0521..e10fc72 100644
--- a/tiledb/sm/filesystem/win.cc
+++ b/tiledb/sm/filesystem/win.cc
@@ -39,6 +39,7 @@
 #include <algorithm>
 #include <cassert>
 #include <codecvt>
+#include <filesystem>
 #include <fstream>
 #include <iostream>
 #include <locale>
diff --git a/tiledb/sm/filter/filter_pipeline.cc b/tiledb/sm/filter/filter_pipeline.cc
index 089c14f..da0cb2b 100644
--- a/tiledb/sm/filter/filter_pipeline.cc
+++ b/tiledb/sm/filter/filter_pipeline.cc
@@ -245,7 +245,7 @@ Status FilterPipeline::filter_chunks_forward(
     // First filter's input is the original chunk.
     uint64_t offset = var_sizes ? chunk_offsets[i] : i * chunk_size;
     void* chunk_buffer = tile.data_as<char>() + offset;
-    uint32_t chunk_buffer_size =
+    uint64_t chunk_buffer_size =
         i == nchunks - 1 ? last_buffer_size :
         var_sizes        ? chunk_offsets[i + 1] - chunk_offsets[i] :
                            chunk_size;
@@ -337,7 +337,7 @@ Status FilterPipeline::filter_chunks_forward(
     auto& final_stage_output_metadata = final_stage_io[i].first.first;
     auto& final_stage_output_data = final_stage_io[i].first.second;
     auto filtered_size = (uint32_t)final_stage_output_data.size();
-    uint32_t orig_chunk_size =
+    uint64_t orig_chunk_size =
         i == final_stage_io.size() - 1 ? last_buffer_size :
         var_sizes ? chunk_offsets[i + 1] - chunk_offsets[i] :
                     chunk_size;
diff --git a/tiledb/sm/fragment/fragment_metadata.cc b/tiledb/sm/fragment/fragment_metadata.cc
index ba6fc1b..75f5273 100644
--- a/tiledb/sm/fragment/fragment_metadata.cc
+++ b/tiledb/sm/fragment/fragment_metadata.cc
@@ -386,7 +386,7 @@ void FragmentMetadata::compute_fragment_min_max_sum_null_count() {
         loaded_metadata_ptr_->fragment_null_counts()[idx] = std::accumulate(
             loaded_metadata_ptr_->tile_null_counts()[idx].begin(),
             loaded_metadata_ptr_->tile_null_counts()[idx].end(),
-            0);
+            0ull);
 
         if (var_size) {
           min_max_var(name);
diff --git a/tiledb/sm/query/legacy/cell_slab_iter.cc b/tiledb/sm/query/legacy/cell_slab_iter.cc
index b61a5d1..a107b6d 100644
--- a/tiledb/sm/query/legacy/cell_slab_iter.cc
+++ b/tiledb/sm/query/legacy/cell_slab_iter.cc
@@ -134,7 +134,8 @@ void CellSlabIter<T>::advance_col() {
   auto dim_num = (int)subarray_->dim_num();
 
   for (int i = 0; i < dim_num; ++i) {
-    cell_slab_coords_[i] += (i == 0) ? cell_slab_lengths_[range_coords_[i]] : 1;
+    cell_slab_coords_[i] +=
+        (i == 0) ? static_cast<T>(cell_slab_lengths_[range_coords_[i]]) : 1;
     if (cell_slab_coords_[i] > ranges_[i][range_coords_[i]].end_) {
       ++range_coords_[i];
       if (range_coords_[i] < (T)ranges_[i].size())
@@ -161,8 +162,8 @@ void CellSlabIter<T>::advance_row() {
   auto dim_num = (int)subarray_->dim_num();
 
   for (int i = dim_num - 1; i >= 0; --i) {
-    cell_slab_coords_[i] +=
-        (i == dim_num - 1) ? cell_slab_lengths_[range_coords_[i]] : 1;
+    cell_slab_coords_[i] += static_cast<T>(
+        (i == dim_num - 1) ? cell_slab_lengths_[range_coords_[i]] : 1);
     if (cell_slab_coords_[i] > ranges_[i][range_coords_[i]].end_) {
       ++range_coords_[i];
       if (range_coords_[i] < (T)ranges_[i].size())
diff --git a/tiledb/sm/query/readers/result_tile.h b/tiledb/sm/query/readers/result_tile.h
index ce1182e..ce6c80b 100644
--- a/tiledb/sm/query/readers/result_tile.h
+++ b/tiledb/sm/query/readers/result_tile.h
@@ -894,7 +894,7 @@ class ResultTileWithBitmap : public ResultTile {
    * Accumulates the number of cells in the bitmap.
    */
   void count_cells() {
-    result_num_ = std::accumulate(bitmap_.begin(), bitmap_.end(), 0);
+    result_num_ = std::accumulate(bitmap_.begin(), bitmap_.end(), 0ull);
   }
 
   /**
diff --git a/tiledb/sm/query_plan/query_plan.cc b/tiledb/sm/query_plan/query_plan.cc
index a430735..1fba009 100644
--- a/tiledb/sm/query_plan/query_plan.cc
+++ b/tiledb/sm/query_plan/query_plan.cc
@@ -40,7 +40,7 @@
 #include "tiledb/sm/query/query.h"
 #include "tiledb/sm/rest/rest_client.h"
 
-#include "external/include/nlohmann/json.hpp"
+#include <nlohmann/json.hpp>
 
 using namespace tiledb::common;
 
diff --git a/tiledb/sm/rest/rest_profile.cc b/tiledb/sm/rest/rest_profile.cc
index 68080b9..206a9b1 100644
--- a/tiledb/sm/rest/rest_profile.cc
+++ b/tiledb/sm/rest/rest_profile.cc
@@ -30,15 +30,20 @@
  * This file implements class RestProfile.
  */
 
+#include "rest_profile.h"
+
 #include <filesystem>
 #include <iostream>
 
-#include "rest_profile.h"
 #include "tiledb/common/random/random_label.h"
 
+#include <nlohmann/json.hpp>
+
 using namespace tiledb::common;
 using namespace tiledb::common::filesystem;
 
+using json = nlohmann::json;
+
 namespace tiledb::sm {
 
 /* ****************************** */
diff --git a/tiledb/sm/rest/rest_profile.h b/tiledb/sm/rest/rest_profile.h
index 83ea593..21b988c 100644
--- a/tiledb/sm/rest/rest_profile.h
+++ b/tiledb/sm/rest/rest_profile.h
@@ -37,12 +37,12 @@
 #include <map>
 #include <string>
 
-#include "external/include/nlohmann/json.hpp"
+#include <nlohmann/json_fwd.hpp>
+
 #include "tiledb/common/exception/exception.h"
 #include "tiledb/common/filesystem/home_directory.h"
 #include "tiledb/sm/misc/constants.h"
 
-using json = nlohmann::json;
 using namespace tiledb::common;
 
 namespace tiledb::sm {
@@ -160,7 +160,7 @@ class RestProfile {
    *
    * @return A json object of this RestProfile's parameter : value mapping.
    */
-  json to_json();
+  nlohmann::json to_json();
 
   /**
    * Dumps the parameter : value mapping in json object format.
diff --git a/tiledb/sm/subarray/tile_cell_slab_iter.cc b/tiledb/sm/subarray/tile_cell_slab_iter.cc
index 6dad83c..8f58066 100644
--- a/tiledb/sm/subarray/tile_cell_slab_iter.cc
+++ b/tiledb/sm/subarray/tile_cell_slab_iter.cc
@@ -210,7 +210,8 @@ void TileCellSlabIter<T>::operator++() {
 template <class T>
 void TileCellSlabIter<T>::advance_col() {
   for (int i = 0; i < dim_num_; ++i) {
-    cell_slab_coords_[i] += (i == 0) ? cell_slab_lengths_[range_coords_[i]] : 1;
+    cell_slab_coords_[i] +=
+        static_cast<T>((i == 0) ? cell_slab_lengths_[range_coords_[i]] : 1);
     if (cell_slab_coords_[i] > ranges_[i][range_coords_[i]].end_) {
       ++range_coords_[i];
       if (range_coords_[i] < (T)ranges_[i].size())
@@ -235,8 +236,8 @@ void TileCellSlabIter<T>::advance_col() {
 template <class T>
 void TileCellSlabIter<T>::advance_row() {
   for (int i = dim_num_ - 1; i >= 0; --i) {
-    cell_slab_coords_[i] +=
-        (i == dim_num_ - 1) ? cell_slab_lengths_[range_coords_[i]] : 1;
+    cell_slab_coords_[i] += static_cast<T>(
+        (i == dim_num_ - 1) ? cell_slab_lengths_[range_coords_[i]] : 1);
     if (cell_slab_coords_[i] > ranges_[i][range_coords_[i]].end_) {
       ++range_coords_[i];
       if (range_coords_[i] < (T)ranges_[i].size())
diff --git a/vcpkg.json b/vcpkg.json
index 5109eca..3f73182 100644
--- a/vcpkg.json
+++ b/vcpkg.json
@@ -7,6 +7,7 @@
             "name": "openssl",
             "platform": "!windows"
         },
+        "nlohmann-json",
         "spdlog",
         "zlib",
         "zstd"
