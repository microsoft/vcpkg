diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 84dd2a0..e1e38d2 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -75,6 +75,7 @@ include (GenerateExportHeader)
 include("../CheckFileOffsetBits.cmake")
 CHECK_FILE_OFFSET_BITS()
 
+if (BUILD_TOOLS)
 add_executable(${PROGRAM} ${PROGRAM_SOURCES})
 
 if(CMARK_SHARED)
@@ -86,6 +87,7 @@ endif()
 # Disable the PUBLIC declarations when compiling the executable:
 set_target_properties(${PROGRAM} PROPERTIES
   COMPILE_FLAGS "-DCMARK_GFM_STATIC_DEFINE -DCMARK_GFM_EXTENSIONS_STATIC_DEFINE")
+endif()
 
 # Check integrity of node structure when compiled as debug:
 set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -DCMARK_DEBUG_NODES -DDEBUG")
@@ -142,10 +144,12 @@ if (CMARK_STATIC)
   list(APPEND CMARK_INSTALL ${STATICLIBRARY})
 endif()
 
+if (BUILD_TOOLS)
 if (MSVC)
   set_property(TARGET ${PROGRAM}
     APPEND PROPERTY LINK_FLAGS /INCREMENTAL:NO)
 endif(MSVC)
+endif()
 
 if(NOT MSVC OR CMAKE_HOST_SYSTEM_NAME STREQUAL Windows)
   set(CMAKE_INSTALL_SYSTEM_RUNTIME_LIBS_NO_WARNINGS ON)
@@ -154,13 +158,20 @@ endif()
 
 set(libdir lib${LIB_SUFFIX})
 
-install(TARGETS ${PROGRAM} ${CMARK_INSTALL}
+install(TARGETS ${CMARK_INSTALL}
   EXPORT cmark-gfm
   RUNTIME DESTINATION bin
   LIBRARY DESTINATION ${libdir}
   ARCHIVE DESTINATION ${libdir}
   )
 
+if (BUILD_TOOLS)
+  install(TARGETS ${PROGRAM}
+    EXPORT cmark-targets
+    RUNTIME DESTINATION tools/cmark
+  )
+endif()
+
 if(CMARK_SHARED OR CMARK_STATIC)
   configure_file(${CMAKE_CURRENT_SOURCE_DIR}/libcmark-gfm.pc.in
     ${CMAKE_CURRENT_BINARY_DIR}/libcmark-gfm.pc @ONLY)
