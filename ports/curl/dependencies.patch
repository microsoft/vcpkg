diff --git a/CMakeLists.txt b/CMakeLists.txt
index 0cba6f626..8398477da 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -660,7 +660,7 @@ if(CURL_USE_MBEDTLS)
   find_package(MbedTLS REQUIRED)
   set(_ssl_enabled ON)
   set(USE_MBEDTLS ON)
-  list(APPEND CURL_LIBS ${MBEDTLS_LIBRARIES})
+  list(APPEND CURL_LIBS ${MBEDTLS_LINK_LIBRARIES})
   list(APPEND CURL_LIBDIRS ${MBEDTLS_LIBRARY_DIRS})
   list(APPEND LIBCURL_PC_REQUIRES_PRIVATE ${MBEDTLS_PC_REQUIRES})
   include_directories(SYSTEM ${MBEDTLS_INCLUDE_DIRS})
@@ -694,7 +694,7 @@ if(CURL_USE_WOLFSSL)
   find_package(WolfSSL REQUIRED)
   set(_ssl_enabled ON)
   set(USE_WOLFSSL ON)
-  list(APPEND CURL_LIBS ${WOLFSSL_LIBRARIES})
+  list(APPEND CURL_LIBS ${WOLFSSL_LINK_LIBRARIES})
   list(APPEND CURL_LIBDIRS ${WOLFSSL_LIBRARY_DIRS})
   list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "wolfssl")
   include_directories(SYSTEM ${WOLFSSL_INCLUDE_DIRS})
@@ -723,8 +723,8 @@ if(CURL_USE_GNUTLS)
   find_package(Nettle REQUIRED)
   set(_ssl_enabled ON)
   set(USE_GNUTLS ON)
-  list(APPEND CURL_LIBS ${GNUTLS_LIBRARIES} ${NETTLE_LIBRARIES})
-  list(APPEND CURL_LIBDIRS ${NETTLE_LIBRARY_DIRS})
+  list(APPEND CURL_LIBS ${GNUTLS_LINK_LIBRARIES} ${NETTLE_LINK_LIBRARIES})
+  list(APPEND CURL_LIBDIRS ${GNUTLS_LIBRARY_DIRS} ${NETTLE_LIBRARY_DIRS})
   list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "gnutls" "nettle")
   include_directories(SYSTEM ${GNUTLS_INCLUDE_DIRS} ${NETTLE_INCLUDE_DIRS})
   link_directories(${NETTLE_LIBRARY_DIRS})
@@ -789,7 +789,7 @@ if(CURL_BROTLI)
   find_package(Brotli REQUIRED)
   if(BROTLI_FOUND)
     set(HAVE_BROTLI ON)
-    list(APPEND CURL_LIBS ${BROTLI_LIBRARIES})
+    list(APPEND CURL_LIBS ${PC_BROTLI_LINK_LIBRARIES})
     list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libbrotlidec")
     include_directories(SYSTEM ${BROTLI_INCLUDE_DIRS})
   endif()
@@ -801,7 +801,7 @@ if(CURL_ZSTD)
   find_package(Zstd REQUIRED)
   if(ZSTD_FOUND AND NOT ZSTD_VERSION VERSION_LESS 1.0.0)
     set(HAVE_ZSTD ON)
-    list(APPEND CURL_LIBS ${ZSTD_LIBRARIES})
+    list(APPEND CURL_LIBS ${PC_ZSTD_LINK_LIBRARIES})
     list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libzstd")
     include_directories(SYSTEM ${ZSTD_INCLUDE_DIRS})
   else()
@@ -899,7 +899,7 @@ if(USE_NGHTTP2)
   find_package(NGHTTP2)
   if(NGHTTP2_FOUND)
     include_directories(SYSTEM ${NGHTTP2_INCLUDE_DIRS})
-    list(APPEND CURL_LIBS ${NGHTTP2_LIBRARIES})
+    list(APPEND CURL_LIBS ${PC_NGHTTP2_LINK_LIBRARIES})
     list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libnghttp2")
   else()
     set(USE_NGHTTP2 OFF)
@@ -927,13 +927,13 @@ if(USE_NGTCP2)
     message(FATAL_ERROR "ngtcp2 requires OpenSSL, wolfSSL or GnuTLS")
   endif()
   include_directories(SYSTEM ${NGTCP2_INCLUDE_DIRS})
-  list(APPEND CURL_LIBS ${NGTCP2_LIBRARIES})
+  list(APPEND CURL_LIBS ${PC_NGTCP2_LINK_LIBRARIES})
   list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libngtcp2")
 
   find_package(NGHTTP3 REQUIRED)
   set(USE_NGHTTP3 ON)
   include_directories(SYSTEM ${NGHTTP3_INCLUDE_DIRS})
-  list(APPEND CURL_LIBS ${NGHTTP3_LIBRARIES})
+  list(APPEND CURL_LIBS ${PC_NGHTTP3_LINK_LIBRARIES})
   list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libnghttp3")
 endif()
 
@@ -1020,6 +1020,15 @@ if(NOT CURL_DISABLE_LDAP)
 
   # Now that we know, we are not using Windows LDAP...
   if(NOT USE_WIN32_LDAP)
+    find_package(PkgConfig REQUIRED)
+    pkg_check_modules(LDAP REQUIRED ldap)
+    set(LDAP_INCLUDE_DIR "${LDAP_INCLUDE_DIRS}")
+    set(LDAP_LIBRARY "${LDAP_LINK_LIBRARIES}" CACHE STRING "")
+    list(APPEND LIBCURL_PC_REQUIRES_PRIVATE ldap)
+    pkg_check_modules(LBER REQUIRED lber)
+    set(HAVE_LIBLBER 1)
+    set(LDAP_LBER_LIBRARY "${LBER_LINK_LIBRARIES}" CACHE STRING "")
+    list(APPEND LIBCURL_PC_REQUIRES_PRIVATE lber)
     if(NOT DEFINED LDAP_LIBRARY)
       set(LDAP_LIBRARY "ldap" CACHE STRING "Name or full path to ldap library")
     endif()
@@ -1132,7 +1141,7 @@ set(HAVE_LIBIDN2 OFF)
 if(USE_LIBIDN2 AND NOT USE_APPLE_IDN AND NOT USE_WIN32_IDN)
   find_package(Libidn2)
   if(LIBIDN2_FOUND)
-    set(CURL_LIBS "${LIBIDN2_LIBRARIES};${CURL_LIBS}")
+    set(CURL_LIBS "${LIBIDN2_LINK_LIBRARIES};${CURL_LIBS}")
     list(APPEND CURL_LIBDIRS ${LIBIDN2_LIBRARY_DIRS})
     set(LIBCURL_PC_REQUIRES_PRIVATE "libidn2;${LIBCURL_PC_REQUIRES_PRIVATE}")
     include_directories(SYSTEM ${LIBIDN2_INCLUDE_DIRS})
@@ -1153,7 +1162,7 @@ set(USE_LIBPSL OFF)
 if(CURL_USE_LIBPSL)
   find_package(Libpsl)  # TODO: add REQUIRED to match autotools
   if(LIBPSL_FOUND)
-    list(APPEND CURL_LIBS ${LIBPSL_LIBRARIES})
+    list(APPEND CURL_LIBS ${PC_LIBPSL_LINK_LIBRARIES})
     list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libpsl")
     include_directories(SYSTEM ${LIBPSL_INCLUDE_DIRS})
     set(USE_LIBPSL ON)
@@ -1170,7 +1179,7 @@ set(USE_LIBSSH2 OFF)
 if(CURL_USE_LIBSSH2)
   find_package(Libssh2)
   if(LIBSSH2_FOUND)
-    list(APPEND CURL_LIBS ${LIBSSH2_LIBRARIES})
+    list(APPEND CURL_LIBS ${PC_LIBSSH2_LINK_LIBRARIES})
     list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libssh2")
     include_directories(SYSTEM ${LIBSSH2_INCLUDE_DIRS})
     set(USE_LIBSSH2 ON)
@@ -1217,7 +1226,7 @@ mark_as_advanced(CURL_USE_GSASL)
 if(CURL_USE_GSASL)
   find_package(Libgsasl REQUIRED)
   if(LIBGSASL_FOUND)
-    list(APPEND CURL_LIBS ${LIBGSASL_LIBRARIES})
+    list(APPEND CURL_LIBS ${LIBGSASL_LINK_LIBRARIES})
     list(APPEND CURL_LIBDIRS ${LIBGSASL_LIBRARY_DIRS})
     list(APPEND LIBCURL_PC_REQUIRES_PRIVATE "libgsasl")
     include_directories(SYSTEM ${LIBGSASL_INCLUDE_DIRS})
@@ -1234,6 +1243,10 @@ mark_as_advanced(CURL_USE_GSSAPI)
 
 if(CURL_USE_GSSAPI)
   find_package(GSS)
+  if(GSS_FLAVOUR STREQUAL "MIT")
+    pkg_check_modules(GSS REQUIRED mit-krb5-gssapi)
+    set(GSS_LIBRARIES "${GSS_LINK_LIBRARIES}")
+  endif()
 
   set(HAVE_GSSAPI ${GSS_FOUND})
   if(GSS_FOUND)
@@ -1309,6 +1322,12 @@ endif()
 
 option(USE_LIBRTMP "Enable librtmp from rtmpdump" OFF)
 if(USE_LIBRTMP)
+  find_package(PkgConfig REQUIRED)
+  pkg_check_modules(LIBRTMP REQUIRED librtmp)
+  include_directories(SYSTEM ${LIBRTMP_INCLUDE_DIRECTORIES})
+  list(APPEND CURL_LIBS ${LIBRTMP_LINK_LIBRARIES})
+  list(APPEND LIBCURL_PC_REQUIRES_PRIVATE librtmp)
+elseif(0)
   set(_extra_libs "rtmp")
   if(WIN32)
     list(APPEND _extra_libs "winmm")
