From 911c1afdf689274a4291a493d6ff152b1f86cb98 Mon Sep 17 00:00:00 2001
From: Daniel Emminizer <daniel.m.emminizer.civ@us.navy.mil>
Date: Tue, 11 Mar 2025 17:38:45 +0000
Subject: [PATCH 06/29] SDK: Update to osgEarth Expression Syntax (1/2)

**JIRA Issue:** SIM-18038

**Description:** Update the SDK to latest osgEarth API changes for expressions.

**Testing Performed:** Build on Windows and Linux with latest osgEarth; make test on Linux passes.
---
 Examples/GeoFencing/ExampleGeoFencing.cpp |  5 +++++
 Examples/Picking/ExamplePicking.cpp       |  5 +++++
 Examples/RadialLOS/ExampleRadialLOS.cpp   |  5 +++++
 SDK/simUtil/LayerFactory.cpp              |  4 ++++
 SDK/simVis/GOG/GogNodeInterface.cpp       | 16 +++++++++++++++-
 SDK/simVis/RangeTool.cpp                  |  7 ++++++-
 6 files changed, 40 insertions(+), 2 deletions(-)

diff --git a/Examples/GeoFencing/ExampleGeoFencing.cpp b/Examples/GeoFencing/ExampleGeoFencing.cpp
index 151496ec..5e2930dc 100644
--- a/Examples/GeoFencing/ExampleGeoFencing.cpp
+++ b/Examples/GeoFencing/ExampleGeoFencing.cpp
@@ -41,6 +41,7 @@
 #include "osgEarth/FeatureNode"
 #include "osgEarth/Geometry"
 #include "osgEarth/LineDrawable"
+#include "osgEarth/Version"
 
 #ifdef HAVE_IMGUI
 #include "SimExamplesGui.h"
@@ -172,7 +173,11 @@ void styleAnnotation(osgEarth::Style& style, const simVis::Color& fillColor, boo
   namespace sym = osgEarth;
   style.getOrCreate<sym::PolygonSymbol>()->fill()->color() = simVis::Color(fillColor, 0.5f);
   style.getOrCreate<sym::LineSymbol>()->stroke()->color() = simVis::Color::White;
+#if OSGEARTH_SOVERSION < 169
+  style.getOrCreate<sym::LineSymbol>()->stroke()->width() = 2.f;
+#else
   style.getOrCreate<sym::LineSymbol>()->stroke()->width() = osgEarth::Distance(2.f, osgEarth::Units::PIXELS);
+#endif
   style.getOrCreate<sym::LineSymbol>()->tessellationSize()->set(100, osgEarth::Units::KILOMETERS);
   style.getOrCreate<sym::AltitudeSymbol>()->verticalOffset() = 10000;
   style.getOrCreate<sym::RenderSymbol>()->backfaceCulling() = false;
diff --git a/Examples/Picking/ExamplePicking.cpp b/Examples/Picking/ExamplePicking.cpp
index 69812f05..71fc8e97 100644
--- a/Examples/Picking/ExamplePicking.cpp
+++ b/Examples/Picking/ExamplePicking.cpp
@@ -30,6 +30,7 @@
 #include "osgEarth/NodeUtils"
 #include "osgEarth/ObjectIndex"
 #include "osgEarth/Registry"
+#include "osgEarth/Version"
 #include "simNotify/Notify.h"
 #include "simCore/Common/HighPerformanceGraphics.h"
 #include "simCore/Common/Version.h"
@@ -244,7 +245,11 @@ public:
     auto lineSymbol = style.getOrCreateSymbol<osgEarth::LineSymbol>();
     // Change some line aspects to indicate we picked correctly
     lineSymbol->stroke()->color() = randomColor();
+#if OSGEARTH_SOVERSION < 169
+    lineSymbol->stroke()->width() = randomBetween(1.0, 7.0);
+#else
     lineSymbol->stroke()->width() = osgEarth::Distance(randomBetween(1.0, 7.0), osgEarth::Units::PIXELS);
+#endif
     anno->setStyle(style);
     return true;
   }
diff --git a/Examples/RadialLOS/ExampleRadialLOS.cpp b/Examples/RadialLOS/ExampleRadialLOS.cpp
index a0349549..bacf4619 100644
--- a/Examples/RadialLOS/ExampleRadialLOS.cpp
+++ b/Examples/RadialLOS/ExampleRadialLOS.cpp
@@ -43,6 +43,7 @@
 #include "osgEarth/Feature"
 #include "osgEarth/FeatureNode"
 #include "osgEarth/LocalGeometryNode"
+#include "osgEarth/Version"
 
 #ifdef HAVE_IMGUI
 #include "SimExamplesGui.h"
@@ -396,7 +397,11 @@ private:
     osgEarth::Style style;
     osg::ref_ptr<osgEarth::LineSymbol> line = style.getOrCreate<osgEarth::LineSymbol>();
     line->stroke()->color() = simVis::Color::Yellow;
+#if OSGEARTH_SOVERSION < 169
+    line->stroke()->width() = 5.0f;
+#else
     line->stroke()->width() = osgEarth::Distance(5.0f, osgEarth::Units::PIXELS);
+#endif
     osg::ref_ptr<osgEarth::AltitudeSymbol> alt = style.getOrCreate<osgEarth::AltitudeSymbol>();
     alt->clamping() = osgEarth::AltitudeSymbol::CLAMP_TO_TERRAIN;
     alt->technique() = osgEarth::AltitudeSymbol::TECHNIQUE_SCENE;
diff --git a/SDK/simUtil/LayerFactory.cpp b/SDK/simUtil/LayerFactory.cpp
index 7ab6716e..cd391533 100644
--- a/SDK/simUtil/LayerFactory.cpp
+++ b/SDK/simUtil/LayerFactory.cpp
@@ -338,7 +338,11 @@ void ShapeFileLayerFactory::setLineColor(const osg::Vec4f& color)
 void ShapeFileLayerFactory::setLineWidth(float width)
 {
   osgEarth::LineSymbol* ls = style_->getOrCreateSymbol<osgEarth::LineSymbol>();
+#if OSGEARTH_SOVERSION < 169
+  ls->stroke()->width() = width;
+#else
   ls->stroke()->width() = osgEarth::Distance(width, osgEarth::Units::PIXELS);
+#endif
 }
 
 void ShapeFileLayerFactory::setStipple(unsigned short pattern, unsigned int factor)
diff --git a/SDK/simVis/GOG/GogNodeInterface.cpp b/SDK/simVis/GOG/GogNodeInterface.cpp
index ca420303..79254891 100644
--- a/SDK/simVis/GOG/GogNodeInterface.cpp
+++ b/SDK/simVis/GOG/GogNodeInterface.cpp
@@ -42,6 +42,7 @@
 #include "osgEarth/Style"
 #include "osgEarth/TextSymbol"
 #include "osgEarth/Units"
+#include "osgEarth/Version"
 #include "simNotify/Notify.h"
 #include "simCore/Calc/Angle.h"
 #include "simCore/Calc/CoordinateConverter.h"
@@ -939,9 +940,14 @@ int GogNodeInterface::getLineState(bool& outlineState, osg::Vec4f& color, Utils:
     return 0;
 
   const osgEarth::LineSymbol* linePtr = style_.getSymbol<osgEarth::LineSymbol>();
+#if OSGEARTH_SOVERSION < 169
+  lineWidth = static_cast<int>(*(linePtr->stroke()->width()));
+  unsigned short stipple = *(linePtr->stroke()->stipple());
+#else
   lineWidth = static_cast<int>(linePtr->stroke()->width()->literal().getValue());
-  // now figure out line style based on the stipple value
   unsigned short stipple = *(linePtr->stroke()->stipplePattern());
+#endif
+  // now figure out line style based on the stipple value
   lineStyle = Utils::getLineStyleFromStipple(stipple);
   return 0;
 }
@@ -1319,7 +1325,11 @@ void GogNodeInterface::setLineStyle(Utils::LineStyle style)
   // use some default values to represent various draw styles
   unsigned short lineStyle = Utils::getStippleFromLineStyle(style);
   osgEarth::LineSymbol* lineSymbol = style_.getOrCreate<osgEarth::LineSymbol>();
+#if OSGEARTH_SOVERSION < 169
+  lineSymbol->stroke()->stipple() = lineStyle;
+#else
   lineSymbol->stroke()->stipplePattern() = lineStyle;
+#endif
   setStyle_(style_);
 
   simCore::GOG::FillableShape* fillable = dynamic_cast<simCore::GOG::FillableShape*>(shape_.get());
@@ -1336,7 +1346,11 @@ void GogNodeInterface::setLineWidth(int lineWidth)
   metaData_.setExplicitly(GOG_LINE_WIDTH_SET);
 
   osgEarth::LineSymbol* lineSymbol = style_.getOrCreate<osgEarth::LineSymbol>();
+#if OSGEARTH_SOVERSION < 169
+  lineSymbol->stroke()->width() = static_cast<float>(lineWidth);
+#else
   lineSymbol->stroke()->width() = osgEarth::Distance(static_cast<float>(lineWidth), osgEarth::Units::PIXELS);
+#endif
   setStyle_(style_);
 
   simCore::GOG::FillableShape* fillable = dynamic_cast<simCore::GOG::FillableShape*>(shape_.get());
diff --git a/SDK/simVis/RangeTool.cpp b/SDK/simVis/RangeTool.cpp
index e5413b12..b1a44a44 100644
--- a/SDK/simVis/RangeTool.cpp
+++ b/SDK/simVis/RangeTool.cpp
@@ -24,12 +24,13 @@
 #include "osg/Geode"
 #include "osg/Geometry"
 #include "osgEarth/DepthOffset"
+#include "osgEarth/LabelNode"
 #include "osgEarth/LineDrawable"
 #include "osgEarth/NodeUtils"
 #include "osgEarth/Registry"
 #include "osgEarth/ShaderGenerator"
 #include "osgEarth/StateSetCache"
-#include "osgEarth/LabelNode"
+#include "osgEarth/Version"
 
 #include "simCore/Calc/Angle.h"
 #include "simCore/Calc/Calculations.h"
@@ -640,7 +641,11 @@ void RangeTool::Association::refresh_(EntityNode* obj0, EntityNode* obj1, const
       {
         ts->halo()->color() = textOptions.outlineColor_;
         ts->haloOffset() = simVis::outlineThickness(static_cast<simData::TextOutline>(textOptions.outlineType_));
+#if OSGEARTH_SOVERSION < 169
+        ts->halo()->width() = simVis::outlineThickness(static_cast<simData::TextOutline>(textOptions.outlineType_));
+#else
         ts->halo()->width() = osgEarth::Distance(simVis::outlineThickness(static_cast<simData::TextOutline>(textOptions.outlineType_)), osgEarth::Units::PIXELS);
+#endif
         ts->haloBackdropType() = osgText::Text::OUTLINE;
       }
       else
-- 
2.47.1.windows.2

