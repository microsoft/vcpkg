diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 6879c4c..6c5814b 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -104,6 +104,7 @@ else (OpenMVG_BUILD_SHARED)
   set(BUILD_SHARED_LIBS OFF)
 endif()
 
+if(0)
 # ==============================================================================
 # Check that submodule have been initialized and updated
 # ==============================================================================
@@ -112,6 +113,7 @@ if (NOT EXISTS ${PROJECT_SOURCE_DIR}/dependencies/cereal/include)
     "\n submodule(s) are missing, please update your repository:\n"
     "  > git submodule update -i\n")
 endif()
+endif()
 
 # ==============================================================================
 # Additional cmake find modules
@@ -191,9 +193,10 @@ endif()
 # ==============================================================================
 # IMAGE IO detection
 # ==============================================================================
-find_package(JPEG QUIET)
-find_package(PNG QUIET)
-find_package(TIFF QUIET)
+find_package(JPEG REQUIRED)
+find_package(PNG REQUIRED)
+find_package(TIFF REQUIRED)
+find_package(vlfeat REQUIRED)
 
 # Folders
 set_property(GLOBAL PROPERTY USE_FOLDERS ON)
@@ -281,6 +284,7 @@ endif()
 # - external if EIGEN_INCLUDE_DIR_HINTS is defined
 # - internal if Eigen not found
 # ==============================================================================
+if(0)
 find_package(Eigen3 QUIET)
 if (NOT Eigen3_FOUND)
   set(EIGEN_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/eigen)
@@ -289,7 +293,11 @@ if (NOT Eigen3_FOUND)
 else()
   set(EIGEN_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR})
 endif()
+endif()
+
 add_definitions(-DEIGEN_MPL2_ONLY)
+find_package(Eigen3 REQUIRED)
+set(EIGEN_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR})
 
 # ==============================================================================
 # Ceres
@@ -297,7 +305,7 @@ add_definitions(-DEIGEN_MPL2_ONLY)
 # - external by default if CERES_DIR_HINTS or find_package found a valid Ceres
 # - internal if ceres not found (ceres-solver+cxsparse+miniglog)
 # ==============================================================================
-find_package(Ceres QUIET HINTS ${CERES_DIR_HINTS})
+find_package(Ceres REQUIRED)
 if (NOT Ceres_FOUND)
   set(OpenMVG_USE_INTERNAL_CERES ON)
   set(CERES_INCLUDE_DIRS
@@ -315,6 +323,7 @@ endif()
 # - internal by default (flann),
 # - external if FLANN_INCLUDE_DIR_HINTS and a valid Flann setup is found
 # ==============================================================================
+if(0)
 if (NOT DEFINED FLANN_INCLUDE_DIR_HINTS)
   set(FLANN_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
   set(OpenMVG_USE_INTERNAL_FLANN ON)
@@ -330,6 +339,9 @@ endif()
 if (NOT FLANN_FOUND OR OpenMVG_USE_INTERNAL_FLANN)
   set(FLANN_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
 endif()
+endif()
+
+find_package(flann REQUIRED)
 
 # ==============================================================================
 # CoinUtils
@@ -356,13 +368,13 @@ endif()
 if (NOT DEFINED CLP_INCLUDE_DIR_HINTS)
   set(CLP_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/)
   set(OpenMVG_USE_INTERNAL_CLP ON)
-  find_package(Clp QUIET)
+  find_package(Clp REQUIRED)
   set(CLP_INCLUDE_DIRS
      ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/
      ${CMAKE_CURRENT_SOURCE_DIR}/dependencies/osi_clp/Clp/src/OsiClp/)
   set(CLP_LIBRARIES lib_clp lib_OsiClpSolver)
 else()
-  find_package(Clp QUIET)
+  find_package(Clp REQUIRED)
 endif()
 
 # ==============================================================================
@@ -398,6 +410,7 @@ endif()
 # - internal by default (Lemon),
 # - external if LEMON_INCLUDE_DIR_HINTS and a valid Lemon setup is found
 # ==============================================================================
+if(0)
 if (NOT DEFINED LEMON_INCLUDE_DIR_HINTS)
   set(LEMON_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/lemon)
   set(OpenMVG_USE_INTERNAL_LEMON ON)
@@ -408,13 +421,16 @@ if (NOT LEMON_FOUND OR OpenMVG_USE_INTERNAL_LEMON)
     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/lemon
     ${PROJECT_BINARY_DIR}/third_party/lemon)
 endif()
+endif()
+
+find_package(LEMON REQUIRED)
 
 # ==============================================================================
 # OpenCV
 # ==============================================================================
 # - only external and enabled only if OpenMVG_USE_OPENCV is set to ON
 # ==============================================================================
-if (OpenMVG_USE_OPENCV)
+if (0)
   find_package( OpenCV QUIET )
   if (NOT OpenCV_FOUND OR OpenCV_VERSION VERSION_LESS "3.0.0")
     message(STATUS "OpenCV was not found (note that OpenCV version >= 3.0.0 is required). -> Disabling OpenCV support.")
@@ -438,7 +454,6 @@ endif()
 # Third-party libraries:
 # ==============================================================================
 add_subdirectory(third_party)
-add_subdirectory(testing)
 
 # ==============================================================================
 # openMVG modules
diff --git a/src/cmakeFindModules/FindClp.cmake b/src/cmakeFindModules/FindClp.cmake
index 8a69c23..1ed9a21 100644
--- a/src/cmakeFindModules/FindClp.cmake
+++ b/src/cmakeFindModules/FindClp.cmake
@@ -51,7 +51,7 @@ IF(EXISTS "${CLP_DIR}" AND NOT "${CLP_DIR}" STREQUAL "")
         SET(CLP_INCLUDE_DIR ${CLP_DIR})
 
         FIND_LIBRARY(CLP_LIBRARY NAMES Clp)
-        FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver)
+        FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver Clp)
         FIND_LIBRARY(OSICLP_LIBRARY NAMES OsiClp)
 
         # locate Clp libraries
diff --git a/src/cmakeFindModules/FindCoinUtils.cmake b/src/cmakeFindModules/FindCoinUtils.cmake
index 5b64ce1..595fb7d 100644
--- a/src/cmakeFindModules/FindCoinUtils.cmake
+++ b/src/cmakeFindModules/FindCoinUtils.cmake
@@ -57,6 +57,12 @@ IF(EXISTS "${COINUTILS_DIR}" AND NOT "${COINUTILS_DIR}" STREQUAL "")
           SET(COINUTILS_LIBRARIES ${COINUTILS_LIBRARY})
         ENDIF()
 
+        if(NOT WIN32)
+            find_package(PkgConfig)
+            pkg_check_modules(CoinUtils coinutils IMPORTED_TARGET)
+            list(APPEND COINUTILS_LIBRARIES PkgConfig::CoinUtils)
+        endif()
+
         MESSAGE(STATUS "CoinUtils ${COINUTILS_VERSION} found (include: ${COINUTILS_INCLUDE_DIRS})")
 ELSE()
   MESSAGE(STATUS "You are attempting to build without CoinUtils. "
diff --git a/src/cmakeFindModules/OpenMVGConfig.cmake.in b/src/cmakeFindModules/OpenMVGConfig.cmake.in
index 5a788b5..ba3b4b3 100644
--- a/src/cmakeFindModules/OpenMVGConfig.cmake.in
+++ b/src/cmakeFindModules/OpenMVGConfig.cmake.in
@@ -51,6 +51,18 @@ set(OPENMVG_VERSION @OPENMVG_VERSION@)
 get_filename_component(CURRENT_CONFIG_INSTALL_DIR
   "${CMAKE_CURRENT_LIST_FILE}" PATH)
 
+include(CMakeFindDependencyMacro)
+
+find_dependency(flann)
+find_dependency(Threads)
+find_dependency(cereal)
+find_dependency(Ceres)
+find_dependency(vlfeat)
+if(NOT WIN32)
+    find_dependency(PkgConfig)
+    pkg_check_modules(CoinUtils coinutils IMPORTED_TARGET)
+endif()
+
 # Record the state of the CMake module path when this script was
 # called so that we can ensure that we leave it in the same state on
 # exit as it was on entry, but modify it locally.
@@ -61,7 +73,7 @@ set(CMAKE_MODULE_PATH ${CURRENT_CONFIG_INSTALL_DIR})
 
 # Build the absolute root install directory as a relative path
 get_filename_component(CURRENT_ROOT_INSTALL_DIR
-  ${CMAKE_MODULE_PATH}/../../../ ABSOLUTE)
+  ${CMAKE_MODULE_PATH}/../../ ABSOLUTE)
 if (NOT EXISTS ${CURRENT_ROOT_INSTALL_DIR})
   OPENMVG_REPORT_NOT_FOUND(
     "OpenMVG install root: ${CURRENT_ROOT_INSTALL_DIR}, "
diff --git a/src/openMVG/features/CMakeLists.txt b/src/openMVG/features/CMakeLists.txt
index 7100ab0..2af4528 100644
--- a/src/openMVG/features/CMakeLists.txt
+++ b/src/openMVG/features/CMakeLists.txt
@@ -24,14 +24,13 @@ if (CMAKE_CXX_FLAGS)
 endif()
 target_include_directories(openMVG_features
   PUBLIC
-    $<BUILD_INTERFACE:${EIGEN_INCLUDE_DIRS}>
     $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>
     $<INSTALL_INTERFACE:include>
     $<INSTALL_INTERFACE:include/openMVG>
 )
 target_link_libraries(openMVG_features
   PRIVATE openMVG_fast ${STLPLUS_LIBRARY}
-  PUBLIC ${OPENMVG_LIBRARY_DEPENDENCIES} ${cereal_TARGET})
+  PUBLIC ${OPENMVG_LIBRARY_DEPENDENCIES} ${cereal_TARGET} Eigen3::Eigen)
 if (MSVC)
   set_target_properties(openMVG_features PROPERTIES COMPILE_FLAGS "/bigobj")
   target_compile_options(openMVG_features PUBLIC "-D_USE_MATH_DEFINES")
diff --git a/src/openMVG/features/akaze/mldb_descriptor.hpp b/src/openMVG/features/akaze/mldb_descriptor.hpp
index 9daf26b..db637d4 100644
--- a/src/openMVG/features/akaze/mldb_descriptor.hpp
+++ b/src/openMVG/features/akaze/mldb_descriptor.hpp
@@ -10,6 +10,7 @@
 #define OPENMVG_IMAGE_DESCRIPTION_MLDB_DESCRIPTOR_HPP
 
 #include <algorithm>
+#include <cassert>
 #include <cmath>
 
 #include "openMVG/features/descriptor.hpp"
diff --git a/src/openMVG/features/binary_regions.hpp b/src/openMVG/features/binary_regions.hpp
index f4fe8a9..a652156 100644
--- a/src/openMVG/features/binary_regions.hpp
+++ b/src/openMVG/features/binary_regions.hpp
@@ -9,6 +9,7 @@
 #ifndef OPENMVG_FEATURES_BINARY_REGIONS_HPP
 #define OPENMVG_FEATURES_BINARY_REGIONS_HPP
 
+#include <cassert>
 #include <typeinfo>
 
 #include "openMVG/features/descriptor.hpp"
diff --git a/src/openMVG/image/image_converter.hpp b/src/openMVG/image/image_converter.hpp
index 94b4000..750708e 100644
--- a/src/openMVG/image/image_converter.hpp
+++ b/src/openMVG/image/image_converter.hpp
@@ -9,6 +9,8 @@
 #ifndef OPENMVG_IMAGE_IMAGE_CONVERTER_HPP
 #define OPENMVG_IMAGE_IMAGE_CONVERTER_HPP
 
+#include <cassert>
+
 #include "openMVG/image/image_container.hpp"
 #include "openMVG/image/pixel_types.hpp"
 
diff --git a/src/openMVG/linearProgramming/CMakeLists.txt b/src/openMVG/linearProgramming/CMakeLists.txt
index 4532161..e3ddedc 100644
--- a/src/openMVG/linearProgramming/CMakeLists.txt
+++ b/src/openMVG/linearProgramming/CMakeLists.txt
@@ -16,8 +16,8 @@ target_link_libraries(openMVG_linearProgramming
     openMVG_numeric
   PRIVATE
     ${CLP_LIBRARIES}     # clp + solver wrapper
-    ${COINUTILS_LIBRARY} # container tools
-    ${OSI_LIBRARY}       # generic LP
+    ${COINUTILS_LIBRARIES} # container tools
+    ${OSI_LIBRARIES}       # generic LP
 )
 
 target_include_directories(openMVG_linearProgramming
diff --git a/src/openMVG/matching/CMakeLists.txt b/src/openMVG/matching/CMakeLists.txt
index b92a49b..c7741fb 100644
--- a/src/openMVG/matching/CMakeLists.txt
+++ b/src/openMVG/matching/CMakeLists.txt
@@ -16,6 +16,7 @@ list(REMOVE_ITEM matching_files_cpp ${REMOVEFILESUNITTEST})
 
 set(THREADS_PREFER_PTHREAD_FLAG ON)
 find_package(Threads REQUIRED)
+find_package(flann CONFIG REQUIRED)
 
 set_source_files_properties(${matching_files_cpp} PROPERTIES LANGUAGE CXX)
 add_library(openMVG_matching
@@ -40,7 +41,7 @@ target_link_libraries(openMVG_matching
 if (NOT DEFINED OpenMVG_USE_INTERNAL_FLANN)
 target_link_libraries(openMVG_matching
   PUBLIC
-    ${FLANN_LIBRARIES}
+    $<IF:$<TARGET_EXISTS:flann::flann_s>,flann::flann_s,flann::flann>
 )
 endif()
 set_target_properties(openMVG_matching PROPERTIES SOVERSION ${OPENMVG_VERSION_MAJOR} VERSION "${OPENMVG_VERSION_MAJOR}.${OPENMVG_VERSION_MINOR}")
diff --git a/src/openMVG/matching/kvld/algorithm.h b/src/openMVG/matching/kvld/algorithm.h
index c3fc3c6..765e5a4 100644
--- a/src/openMVG/matching/kvld/algorithm.h
+++ b/src/openMVG/matching/kvld/algorithm.h
@@ -10,6 +10,7 @@
 #define OPENMVG_MATCHING_KVLD_ALGORITHM_H
 
 #include <algorithm>
+#include <cassert>
 #include <cmath>
 #include <fstream>
 #include "openMVG/image/image_container.hpp"
diff --git a/src/openMVG/multiview/rotation_averaging_l1.cpp b/src/openMVG/multiview/rotation_averaging_l1.cpp
index 7151bd5..dc738e7 100644
--- a/src/openMVG/multiview/rotation_averaging_l1.cpp
+++ b/src/openMVG/multiview/rotation_averaging_l1.cpp
@@ -191,7 +191,7 @@ unsigned int FilterRelativeRotations(
     const Matrix3x3& Rj = Rs[relR.j];
     const Matrix3x3& Rij = relR.Rij;
     const Mat3 eRij(Rj.transpose()*Rij*Ri);
-    const openMVG::Vec3 erij;
+    const openMVG::Vec3 erij{};
     ceres::RotationMatrixToAngleAxis((const double*)eRij.data(), (double*)erij.data());
     errors[r] = (float)erij.norm();
   }
@@ -371,7 +371,7 @@ inline void FillErrorMatrix(
     const Matrix3x3& Rj = Rs[relR.j];
     const Matrix3x3& Rij = relR.Rij;
     const Mat3 eRij(Rj.transpose()*Rij*Ri);
-    const openMVG::Vec3 erij;
+    const openMVG::Vec3 erij{};
     ceres::RotationMatrixToAngleAxis((const double*)eRij.data(), (double*)erij.data());
     b.block<3,1>(3*r,0) = erij;
   }
@@ -389,7 +389,7 @@ inline void CorrectMatrix(
     Matrix3x3& Ri = Rs[r];
     const uint32_t i = (r<nMainViewID ? r : r-1);
     const openMVG::Vec3 eRid = openMVG::Vec3(x.block<3,1>(3*i,0));
-    const Mat3 eRi;
+    const Mat3 eRi{};
     ceres::AngleAxisToRotationMatrix((const double*)eRid.data(), (double*)eRi.data());
     Ri = Ri*eRi;
   }
diff --git a/src/openMVG/multiview/solver_fundamental_kernel.cpp b/src/openMVG/multiview/solver_fundamental_kernel.cpp
index 2ffd45a..bbf74b4 100644
--- a/src/openMVG/multiview/solver_fundamental_kernel.cpp
+++ b/src/openMVG/multiview/solver_fundamental_kernel.cpp
@@ -110,7 +110,7 @@ void EightPointSolver::Solve
                          x2.colwise().homogeneous(),
                          &epipolar_constraint);
   // Find the F matrice in the nullspace of epipolar_constraint.
-  Eigen::SelfAdjointEigenSolver<Mat9> solver
+  Eigen::SelfAdjointEigenSolver<Eigen::Matrix<double, 9, 9>> solver
     (epipolar_constraint.transpose() * epipolar_constraint);
   f = solver.eigenvectors().leftCols<1>();
 
diff --git a/src/openMVG/numeric/CMakeLists.txt b/src/openMVG/numeric/CMakeLists.txt
index 1407bdd..a754a46 100644
--- a/src/openMVG/numeric/CMakeLists.txt
+++ b/src/openMVG/numeric/CMakeLists.txt
@@ -22,7 +22,6 @@ if (CMAKE_CXX_FLAGS)
 endif()
 target_include_directories(openMVG_numeric
   PUBLIC
-    $<BUILD_INTERFACE:${EIGEN_INCLUDE_DIRS}>
     $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}>
     $<INSTALL_INTERFACE:include>
 )
@@ -30,8 +29,7 @@ if (DEFINED OpenMVG_USE_INTERNAL_EIGEN)
   target_include_directories(openMVG_numeric PUBLIC
     $<INSTALL_INTERFACE:${CMAKE_INSTALL_PREFIX}/include/openMVG/third_party/eigen/>)
 else()
-  target_include_directories(openMVG_numeric PUBLIC
-    $<INSTALL_INTERFACE:${EIGEN_INCLUDE_DIRS}>)
+  target_link_libraries(openMVG_numeric PUBLIC Eigen3::Eigen)
 endif()
 
 if (MSVC)
diff --git a/src/openMVG/numeric/eigen_alias_definition.hpp b/src/openMVG/numeric/eigen_alias_definition.hpp
index cd8e398..7470272 100644
--- a/src/openMVG/numeric/eigen_alias_definition.hpp
+++ b/src/openMVG/numeric/eigen_alias_definition.hpp
@@ -21,6 +21,7 @@
 #include <initializer_list>
 #include <memory>
 #include <vector>
+#include <cassert>
 
 // Extend EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION with initializer list support.
 #define EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION_INITIALIZER_LIST(...)       \
diff --git a/src/openMVG/system/CMakeLists.txt b/src/openMVG/system/CMakeLists.txt
index 5ed532b..a7b5d07 100644
--- a/src/openMVG/system/CMakeLists.txt
+++ b/src/openMVG/system/CMakeLists.txt
@@ -9,7 +9,6 @@ set_property(TARGET openMVG_system PROPERTY FOLDER OpenMVG/OpenMVG)
 install(TARGETS openMVG_system DESTINATION ${CMAKE_INSTALL_LIBDIR} EXPORT openMVG-targets)
 
 add_library(openMVG_progress_test INTERFACE)
-target_link_libraries(openMVG_progress_test INTERFACE ${OPENMVG_LIBRARY_DEPENDENCIES})
-target_include_directories(openMVG_progress_test INTERFACE ${EIGEN_INCLUDE_DIRS})
+target_link_libraries(openMVG_progress_test INTERFACE ${OPENMVG_LIBRARY_DEPENDENCIES} Eigen3::Eigen)
 
 UNIT_TEST(openMVG progress "openMVG_system;openMVG_progress_test;openMVG_testing")
diff --git a/src/software/SfM/CMakeLists.txt b/src/software/SfM/CMakeLists.txt
index 893abd3..430d8a4 100644
--- a/src/software/SfM/CMakeLists.txt
+++ b/src/software/SfM/CMakeLists.txt
@@ -222,8 +222,8 @@ target_link_libraries(openMVG_main_PointsFiltering
     openMVG_system
     openMVG_sfm
     ${STLPLUS_LIBRARY}
+    Eigen3::Eigen
 )
-target_include_directories(openMVG_main_PointsFiltering PRIVATE ${EIGEN_INCLUDE_DIRS})
 
 add_executable(openMVG_main_ChangeLocalOrigin main_ChangeLocalOrigin.cpp)
 target_link_libraries(openMVG_main_ChangeLocalOrigin
diff --git a/src/software/SfM/clustering/domSetLibrary/CMakeLists.txt b/src/software/SfM/clustering/domSetLibrary/CMakeLists.txt
index 41e8e06..013f9c7 100644
--- a/src/software/SfM/clustering/domSetLibrary/CMakeLists.txt
+++ b/src/software/SfM/clustering/domSetLibrary/CMakeLists.txt
@@ -1,4 +1,4 @@
 add_library( domset STATIC domset.cc domset.h types.h )
-target_include_directories(domset PUBLIC ${EIGEN_INCLUDE_DIRS})
+target_link_libraries(domset PUBLIC Eigen3::Eigen)
 target_link_libraries(domset PRIVATE openMVG_matching)
 set_property(TARGET domset PROPERTY FOLDER OpenMVG/software/clustering)
-- 
2.34.1.windows.1

