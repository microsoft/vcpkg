diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index 6879c4c..e7644ee 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -324,8 +324,9 @@ else()
   if (TARGET flann::flann)
     set(FLANN_LIBRARIES "flann::flann;flann::flann_cpp")
   else()
-    find_package(Flann QUIET)
+    set(FLANN_LIBRARIES "flann::flann_s;flann::flann_cpp_s")
   endif()
+  set(FLANN_FOUND TRUE)
 endif()
 if (NOT FLANN_FOUND OR OpenMVG_USE_INTERNAL_FLANN)
   set(FLANN_INCLUDE_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/flann/src/cpp)
@@ -402,7 +403,7 @@ if (NOT DEFINED LEMON_INCLUDE_DIR_HINTS)
   set(LEMON_INCLUDE_DIR_HINTS ${CMAKE_CURRENT_SOURCE_DIR}/third_party/lemon)
   set(OpenMVG_USE_INTERNAL_LEMON ON)
 endif()
-find_package(Lemon QUIET)
+find_package(LEMON REQUIRED)
 if (NOT LEMON_FOUND OR OpenMVG_USE_INTERNAL_LEMON)
   set(LEMON_INCLUDE_DIRS
     ${CMAKE_CURRENT_SOURCE_DIR}/third_party/lemon
diff --git a/src/cmakeFindModules/FindClp.cmake b/src/cmakeFindModules/FindClp.cmake
index 8a69c23..a694a09 100644
--- a/src/cmakeFindModules/FindClp.cmake
+++ b/src/cmakeFindModules/FindClp.cmake
@@ -51,7 +51,7 @@ IF(EXISTS "${CLP_DIR}" AND NOT "${CLP_DIR}" STREQUAL "")
         SET(CLP_INCLUDE_DIR ${CLP_DIR})
 
         FIND_LIBRARY(CLP_LIBRARY NAMES Clp)
-        FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver)
+        FIND_LIBRARY(CLPSOLVER_LIBRARY NAMES ClpSolver Clp NAMES_PER_DIR)
         FIND_LIBRARY(OSICLP_LIBRARY NAMES OsiClp)
 
         # locate Clp libraries
diff --git a/src/cmakeFindModules/FindCoinUtils.cmake b/src/cmakeFindModules/FindCoinUtils.cmake
index 5b64ce1..3dc0894 100644
--- a/src/cmakeFindModules/FindCoinUtils.cmake
+++ b/src/cmakeFindModules/FindCoinUtils.cmake
@@ -56,6 +56,11 @@ IF(EXISTS "${COINUTILS_DIR}" AND NOT "${COINUTILS_DIR}" STREQUAL "")
         IF(DEFINED COINUTILS_LIBRARY)
           SET(COINUTILS_LIBRARIES ${COINUTILS_LIBRARY})
         ENDIF()
+        if(NOT WIN32)
+            find_package(PkgConfig)
+            pkg_check_modules(CoinUtils coinutils IMPORTED_TARGET)
+            list(APPEND COINUTILS_LIBRARIES PkgConfig::CoinUtils)
+        endif()
 
         MESSAGE(STATUS "CoinUtils ${COINUTILS_VERSION} found (include: ${COINUTILS_INCLUDE_DIRS})")
 ELSE()
diff --git a/src/cmakeFindModules/OpenMVGConfig.cmake.in b/src/cmakeFindModules/OpenMVGConfig.cmake.in
index 5a788b5..1102ace 100644
--- a/src/cmakeFindModules/OpenMVGConfig.cmake.in
+++ b/src/cmakeFindModules/OpenMVGConfig.cmake.in
@@ -61,7 +61,7 @@ set(CMAKE_MODULE_PATH ${CURRENT_CONFIG_INSTALL_DIR})
 
 # Build the absolute root install directory as a relative path
 get_filename_component(CURRENT_ROOT_INSTALL_DIR
-  ${CMAKE_MODULE_PATH}/../../../ ABSOLUTE)
+  ${CMAKE_CURRENT_LIST_DIR}/../.. ABSOLUTE)
 if (NOT EXISTS ${CURRENT_ROOT_INSTALL_DIR})
   OPENMVG_REPORT_NOT_FOUND(
     "OpenMVG install root: ${CURRENT_ROOT_INSTALL_DIR}, "
@@ -88,11 +88,17 @@ set(OpenMVG_USE_OPENMP "@OpenMVG_USE_OPENMP@")
 
 # Find transitive dependencies if required
 include(CMakeFindDependencyMacro)
+find_dependency(flann CONFIG)
+find_dependency(Ceres CONFIG)
+if(NOT WIN32)
+    find_dependency(PkgConfig)
+    pkg_check_modules(CoinUtils coinutils IMPORTED_TARGET)
+endif()
 if (OpenMVG_USE_OPENMP)
-  find_dependency(OpenMP REQUIRED)
+  find_dependency(OpenMP)
 endif()
 if (NOT OpenMVG_USE_INTERNAL_CEREAL)
-  find_dependency(cereal REQUIRED)
+  find_dependency(cereal CONFIG)
 endif()
 
 # Import exported OpenMVG targets
diff --git a/src/openMVG/linearProgramming/CMakeLists.txt b/src/openMVG/linearProgramming/CMakeLists.txt
index 4532161..e3ddedc 100644
--- a/src/openMVG/linearProgramming/CMakeLists.txt
+++ b/src/openMVG/linearProgramming/CMakeLists.txt
@@ -16,8 +16,8 @@ target_link_libraries(openMVG_linearProgramming
     openMVG_numeric
   PRIVATE
     ${CLP_LIBRARIES}     # clp + solver wrapper
-    ${COINUTILS_LIBRARY} # container tools
-    ${OSI_LIBRARY}       # generic LP
+    ${COINUTILS_LIBRARIES} # container tools
+    ${OSI_LIBRARIES}       # generic LP
 )
 
 target_include_directories(openMVG_linearProgramming
