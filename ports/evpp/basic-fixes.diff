diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7872fc8..e1e7c02 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,4 +1,5 @@
-cmake_minimum_required (VERSION 2.8)
+cmake_minimum_required (VERSION 3.10)
+set(CMAKE_CXX_STANDARD 14)
 
 project (safe-evpp C CXX)
 
@@ -24,22 +25,18 @@ if (UNIX)
          -fms-extensions
          -Wfloat-equal
          -Wextra
-         -std=c++11
     )
     include_directories (${PROJECT_SOURCE_DIR}
                          ${PROJECT_SOURCE_DIR}/3rdparty)
 else (UNIX)
 set (CXX_FLAGS -DWIN32 -D_WIN32 -EHsc)
-    set(VcpkgRoot ${_VCPKG_INSTALLED_DIR}/${VCPKG_TARGET_TRIPLET})
-    include_directories(${VcpkgRoot}/include
+    include_directories(
                         ${PROJECT_SOURCE_DIR}
                         ${PROJECT_SOURCE_DIR}/3rdparty/wininclude)
 
     # On windows, Debug mode
-    link_directories(${VcpkgRoot}/debug/lib ${VcpkgRoot}/debug/lib/manual-link)
 
     # On Windows, Release mode
-    # link_directories(${VcpkgRoot}/lib ${VcpkgRoot}/lib/manual-link)
 endif (UNIX)
 
 string (REPLACE ";" " " CMAKE_CXX_FLAGS "${CXX_FLAGS}")
diff --git a/apps/evmc/CMakeLists.txt b/apps/evmc/CMakeLists.txt
index 9918919..888c672 100644
--- a/apps/evmc/CMakeLists.txt
+++ b/apps/evmc/CMakeLists.txt
@@ -6,11 +6,11 @@ file(GLOB evmc_SRCS *.cc
 file(GLOB evmc_PUBLIC_HEADERS *.h)
 
 add_library(evmc_static STATIC ${evmc_SRCS})
-target_link_libraries(evmc_static ${LIBRARIES})
+target_link_libraries(evmc_static PRIVATE ${LIBRARIES})
 
 if (UNIX)
     add_library(evmc SHARED ${evmc_SRCS})
-    target_link_libraries(evmc ${LIBRARIES})
+    target_link_libraries(evmc PRIVATE ${LIBRARIES})
 
     set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
     include (utils)
diff --git a/apps/evnsq/CMakeLists.txt b/apps/evnsq/CMakeLists.txt
index c510814..a4d4113 100644
--- a/apps/evnsq/CMakeLists.txt
+++ b/apps/evnsq/CMakeLists.txt
@@ -2,11 +2,11 @@ file(GLOB evnsq_SRCS *.cc *.h)
 file(GLOB evnsq_PUBLIC_HEADERS *.h)
 
 add_library(evnsq_static STATIC ${evnsq_SRCS})
-target_link_libraries(evnsq_static ${LIBRARIES})
+target_link_libraries(evnsq_static PRIVATE ${LIBRARIES})
 
 if (UNIX)
     add_library(evnsq SHARED ${evnsq_SRCS})
-    target_link_libraries(evnsq ${LIBRARIES})
+    target_link_libraries(evnsq PRIVATE ${LIBRARIES})
 
     set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
     include (utils)
diff --git a/evpp/CMakeLists.txt b/evpp/CMakeLists.txt
index b2e470d..1dfd91b 100644
--- a/evpp/CMakeLists.txt
+++ b/evpp/CMakeLists.txt
@@ -14,30 +14,30 @@ set (MACOSX_RPATH ${LIBRARY_OUTPUT_PATH})
 include_directories(${PROJECT_SOURCE_DIR})
 
 add_library(evpp_static STATIC ${evpp_SRCS})
-target_link_libraries(evpp_static ${DEPENDENT_LIBRARIES})
+target_link_libraries(evpp_static PRIVATE ${DEPENDENT_LIBRARIES})
 
 add_library(evpp_lite_static STATIC ${evpp_lite_SRCS})
-target_link_libraries(evpp_lite_static ${DEPENDENT_LIBRARIES})
+target_link_libraries(evpp_lite_static PRIVATE ${DEPENDENT_LIBRARIES})
 
 if (UNIX)
     add_library(evpp SHARED ${evpp_SRCS})
-    target_link_libraries(evpp ${DEPENDENT_LIBRARIES})
+    target_link_libraries(evpp PRIVATE ${DEPENDENT_LIBRARIES})
 
     # boost lockfree queue
     add_library(evpp_boost SHARED ${evpp_SRCS})
     add_library(evpp_boost_static STATIC ${evpp_SRCS})
     target_compile_definitions(evpp_boost PRIVATE -DH_HAVE_BOOST=1)
     target_compile_definitions(evpp_boost_static PRIVATE -DH_HAVE_BOOST=1)
-    target_link_libraries(evpp_boost        ${DEPENDENT_LIBRARIES})
-    target_link_libraries(evpp_boost_static ${DEPENDENT_LIBRARIES})
+    target_link_libraries(evpp_boost        PRIVATE ${DEPENDENT_LIBRARIES})
+    target_link_libraries(evpp_boost_static PRIVATE ${DEPENDENT_LIBRARIES})
 
     # https://github.com/cameron314/concurrentqueue
     add_library(evpp_concurrentqueue SHARED ${evpp_SRCS})
     add_library(evpp_concurrentqueue_static STATIC ${evpp_SRCS})
     target_compile_definitions(evpp_concurrentqueue PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
     target_compile_definitions(evpp_concurrentqueue_static PRIVATE -DH_HAVE_CAMERON314_CONCURRENTQUEUE=1)
-    target_link_libraries(evpp_concurrentqueue        ${DEPENDENT_LIBRARIES})
-    target_link_libraries(evpp_concurrentqueue_static ${DEPENDENT_LIBRARIES})
+    target_link_libraries(evpp_concurrentqueue        PRIVATE ${DEPENDENT_LIBRARIES})
+    target_link_libraries(evpp_concurrentqueue_static PRIVATE ${DEPENDENT_LIBRARIES})
 
     set (CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake")
     include (utils)
