diff --git a/blosc/CMakeLists.txt b/blosc/CMakeLists.txt
index 15b3426..614103c 100644
--- a/blosc/CMakeLists.txt
+++ b/blosc/CMakeLists.txt
@@ -81,95 +81,6 @@ endif()
 
 set(INTERNAL_LIBS ${PROJECT_SOURCE_DIR}/internal-complibs)
 
-# link dependencies
-#   "link" dependent targets via target_link_libraries (preferred) and
-#   manually add includes / libs for others
-if(LZ4_FOUND)
-    if(BUILD_SHARED)
-        target_include_directories(blosc2_shared PUBLIC ${LZ4_INCLUDE_DIR})
-    endif()
-    if(BUILD_STATIC)
-        target_include_directories(blosc2_static PUBLIC ${LZ4_INCLUDE_DIR})
-    endif()
-    if(BUILD_TESTS)
-        target_include_directories(blosc_testing PUBLIC ${LZ4_INCLUDE_DIR})
-    endif()
-else()
-    set(LZ4_LOCAL_DIR ${INTERNAL_LIBS}/lz4-1.10.0)
-    if(BUILD_SHARED)
-        target_include_directories(blosc2_shared PRIVATE ${LZ4_LOCAL_DIR})
-    endif()
-    if(BUILD_STATIC)
-        target_include_directories(blosc2_static PRIVATE ${LZ4_LOCAL_DIR})
-    endif()
-    if(BUILD_TESTS)
-        target_include_directories(blosc_testing PRIVATE ${LZ4_LOCAL_DIR})
-    endif()
-endif()
-
-if(NOT DEACTIVATE_ZLIB)
-    if(ZLIB_NG_FOUND)
-        if(BUILD_SHARED)
-            target_link_libraries(blosc2_shared PUBLIC ZLIB_NG::ZLIB_NG)
-        endif()
-        if(BUILD_STATIC)
-            target_link_libraries(blosc2_static PUBLIC ZLIB_NG::ZLIB_NG)
-        endif()
-        if(BUILD_TESTS)
-            target_link_libraries(blosc_testing PUBLIC ZLIB_NG::ZLIB_NG)
-        endif()
-    elseif(ZLIB_FOUND)
-        if(BUILD_SHARED)
-            target_link_libraries(blosc2_shared PUBLIC ZLIB::ZLIB)
-        endif()
-        if(BUILD_STATIC)
-            target_link_libraries(blosc2_static PUBLIC ZLIB::ZLIB)
-        endif()
-        if(BUILD_TESTS)
-            target_link_libraries(blosc_testing PUBLIC ZLIB::ZLIB)
-        endif()
-    else()
-        set(ZLIB_LOCAL_DIR ${INTERNAL_LIBS}/${ZLIB_NG_DIR})
-        if(BUILD_SHARED)
-            target_include_directories(blosc2_shared PRIVATE ${ZLIB_LOCAL_DIR})
-        endif()
-        if(BUILD_STATIC)
-            target_include_directories(blosc2_static PRIVATE ${ZLIB_LOCAL_DIR})
-        endif()
-        if(BUILD_TESTS)
-            target_include_directories(blosc_testing PRIVATE ${ZLIB_LOCAL_DIR})
-        endif()
-    endif()
-endif()
-
-if(NOT DEACTIVATE_ZSTD)
-    if(ZSTD_FOUND)
-        if(BUILD_SHARED)
-            target_include_directories(blosc2_shared PUBLIC ${ZSTD_INCLUDE_DIR})
-            target_link_libraries(blosc2_shared PUBLIC ${ZSTD_LIBRARY})
-        endif()
-        if(BUILD_STATIC)
-            target_include_directories(blosc2_static PUBLIC ${ZSTD_INCLUDE_DIR})
-            target_link_libraries(blosc2_static PUBLIC ${ZSTD_LIBRARY})
-        endif()
-        if(BUILD_TESTS)
-            target_include_directories(blosc_testing PUBLIC ${ZSTD_INCLUDE_DIR})
-            target_link_libraries(blosc_testing PUBLIC ${ZSTD_LIBRARY})
-        endif()
-    else()
-        set(ZSTD_LOCAL_DIR ${INTERNAL_LIBS}/zstd-1.5.7)
-        if(BUILD_SHARED)
-            target_include_directories(blosc2_shared PRIVATE ${ZSTD_LOCAL_DIR} ${ZSTD_LOCAL_DIR}/common)
-        endif()
-        if(BUILD_STATIC)
-            target_include_directories(blosc2_static PRIVATE ${ZSTD_LOCAL_DIR} ${ZSTD_LOCAL_DIR}/common)
-        endif()
-        if(BUILD_TESTS)
-            target_include_directories(blosc_testing PRIVATE ${ZSTD_LOCAL_DIR} ${ZSTD_LOCAL_DIR}/common)
-        endif()
-    endif()
-endif()
-
 # Threads
 if(HAVE_THREADS)
     if(CMAKE_VERSION VERSION_LESS 3.1)
@@ -189,31 +100,48 @@ if(NOT WIN32)
     set(LIBS ${LIBS} ${CMAKE_DL_LIBS})
 endif()
 
+# link dependencies
+#   "link" dependent targets via target_link_libraries (preferred) and
+#   manually add includes / libs for others
 if(LZ4_FOUND)
-    set(LIBS ${LIBS} ${LZ4_LIBRARY})
+    if (TARGET LZ4::lz4)
+        list(APPEND LIBS LZ4::lz4)
+    else()
+        list(APPEND LIBS ${LZ4_LIBRARY})
+        list(APPEND BLOSC_INCLUDE_DIRS ${LZ4_INCLUDE_DIRS})
+    endif()
 else()
+    set(LZ4_LOCAL_DIR ${INTERNAL_LIBS}/lz4-1.10.0)
     file(GLOB LZ4_FILES ${LZ4_LOCAL_DIR}/*.c)
     list(APPEND SOURCES ${LZ4_FILES})
     source_group("LZ4" FILES ${LZ4_FILES})
+    list(APPEND BLOSC_INCLUDE_DIRS ${LZ4_LOCAL_DIR})
 endif()
 
 if(NOT DEACTIVATE_ZLIB)
     if(ZLIB_NG_FOUND)
-        set(LIBS ${LIBS} ${ZLIB_NG_LIBRARY})
+        list(APPEND LIBS ZLIB_NG::ZLIB_NG)
     elseif(ZLIB_FOUND)
-        set(LIBS ${LIBS} ${ZLIB_LIBRARIES})
+        list(APPEND LIBS ZLIB::ZLIB)
     else()
         set(ZLIB_LOCAL_DIR ${INTERNAL_LIBS}/${ZLIB_NG_DIR})
         file(GLOB ZLIB_FILES ${ZLIB_LOCAL_DIR}/*.c)
         list(APPEND SOURCES ${ZLIB_FILES})
         source_group("Zlib" FILES ${ZLIB_FILES})
+        list(APPEND BLOSC_INCLUDE_DIRS ${ZLIB_LOCAL_DIR})
     endif()
 endif()
 
 if(NOT DEACTIVATE_ZSTD)
     if(ZSTD_FOUND)
-        set(LIBS ${LIBS} ${ZSTD_LIBRARY})
+        if (TARGET zstd::libzstd)
+            list(APPEND LIBS zstd::libzstd)
+        else()
+            list(APPEND LIBS ${ZSTD_LIBRARY})
+            list(APPEND BLOSC_INCLUDE_DIRS ${ZSTD_INCLUDE_DIR})
+        endif()
     else()
+        set(ZSTD_LOCAL_DIR ${INTERNAL_LIBS}/zstd-1.5.7)
         # Enable assembly code only when not using MSVC *and* x86 is there
         if((NOT MSVC) AND COMPILER_SUPPORT_SSE2)   # if SSE2 is here, this is an x86 platform
             message(STATUS "Adding support for assembly sources in ZSTD")
@@ -231,6 +159,7 @@ if(NOT DEACTIVATE_ZSTD)
             ${ZSTD_DECOMPRESS_FILES} ${ZSTD_DICT_FILES})
         list(APPEND SOURCES ${ZSTD_FILES})
         source_group("Zstd" FILES ${ZSTD_FILES})
+        list(APPEND BLOSC_INCLUDE_DIRS ${ZSTD_LOCAL_DIR} ${ZSTD_LOCAL_DIR}/common)
     endif()
 endif()
 
@@ -395,18 +324,18 @@ endif()
 
 # add libraries for dependencies that are not CMake targets
 if(BUILD_SHARED)
-    target_link_libraries(blosc2_shared PUBLIC ${LIBS})
-    target_include_directories(blosc2_shared PUBLIC ${BLOSC_INCLUDE_DIRS})
+    target_link_libraries(blosc2_shared PRIVATE ${LIBS})
+    target_include_directories(blosc2_shared PRIVATE ${BLOSC_INCLUDE_DIRS})
 endif()
 
 if(BUILD_STATIC)
-    target_link_libraries(blosc2_static PUBLIC ${LIBS})
-    target_include_directories(blosc2_static PUBLIC ${BLOSC_INCLUDE_DIRS})
+    target_link_libraries(blosc2_static PRIVATE ${LIBS})
+    target_include_directories(blosc2_static PRIVATE ${BLOSC_INCLUDE_DIRS})
 endif()
 
 if(BUILD_TESTS)
-    target_link_libraries(blosc_testing PUBLIC ${LIBS})
-    target_include_directories(blosc_testing PUBLIC ${BLOSC_INCLUDE_DIRS})
+    target_link_libraries(blosc_testing PRIVATE ${LIBS})
+    target_include_directories(blosc_testing PRIVATE ${BLOSC_INCLUDE_DIRS})
 endif()
 
 # we use this variable in the CMake file one directory above ours
diff --git a/Blosc2Config.cmake.in b/Blosc2Config.cmake.in
index 68d8b5c..844d0e2 100644
--- a/Blosc2Config.cmake.in
+++ b/Blosc2Config.cmake.in
@@ -43,7 +43,7 @@ else()
 endif()
 
 if(PREFER_EXTERNAL_LZ4)
-    find_dependency(LZ4)
+    find_dependency(lz4 CONFIG)
 endif()
 set(Blosc2_LZ4_FOUND TRUE)
 
@@ -51,7 +51,7 @@ if(DEACTIVATE_ZLIB)
     set(Blosc2_ZLIB_FOUND FALSE)
 elseif(NOT DEACTIVATE_ZLIB AND PREFER_EXTERNAL_ZLIB)
     if(HAVE_ZLIB_NG)
-        find_dependency(ZLIB_NG)
+        find_dependency(ZLIB_NG CONFIG)
     else()
         find_dependency(ZLIB)
     endif()
@@ -61,7 +61,7 @@ endif()
 if(DEACTIVATE_ZSTD)
     set(Blosc2_ZSTD_FOUND FALSE)
 elseif(NOT PREFER_EXTERNAL_ZSTD AND PREFER_EXTERNAL_ZSTD)
-    find_dependency(ZSTD)
+    find_dependency(zstd CONFIG)
     set(Blosc2_ZSTD_FOUND TRUE)
 endif()
 
diff --git a/CMakeLists.txt b/CMakeLists.txt
index fd0ae5a..39ec771 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -175,14 +175,14 @@ else()
 endif()
 
 if(PREFER_EXTERNAL_LZ4)
-    find_package(LZ4)
+    find_package(LZ4 CONFIG NAMES lz4)
 else()
     message(STATUS "Using LZ4 internal sources.")
 endif()
 
 if(NOT DEACTIVATE_ZLIB)
     if(PREFER_EXTERNAL_ZLIB)
-        find_package(ZLIB_NG)
+        find_package(ZLIB_NG CONFIG)
         if(ZLIB_NG_FOUND)
             set(HAVE_ZLIB_NG TRUE)
         else()
@@ -220,7 +220,7 @@ endif()
 
 if(NOT DEACTIVATE_ZSTD)
     if(PREFER_EXTERNAL_ZSTD)
-        find_package(ZSTD)
+        find_package(ZSTD CONFIG NAMES zstd)
         if(NOT ZSTD_FOUND)
           message(STATUS "No ZSTD library found.  Using internal sources.")
         endif()
