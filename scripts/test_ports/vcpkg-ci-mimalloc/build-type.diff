diff --git a/test/CMakeLists.txt b/test/CMakeLists.txt
index c5fff1a..03a86ca 100644
--- a/test/CMakeLists.txt
+++ b/test/CMakeLists.txt
@@ -20,6 +20,7 @@ find_package(mimalloc 2.2 CONFIG REQUIRED)
 message(STATUS "Found mimalloc installed at: ${MIMALLOC_LIBRARY_DIR} (${MIMALLOC_VERSION_DIR})")
 
 
+if(BUILD_SHARED_LIBS)
 # link with a dynamic shared library
 # use `LD_PRELOAD` to actually override malloc/free at runtime with mimalloc
 add_executable(dynamic-override  main-override.c)
@@ -27,15 +28,19 @@ target_link_libraries(dynamic-override PUBLIC mimalloc)
 
 add_executable(dynamic-override-cxx  main-override.cpp)
 target_link_libraries(dynamic-override-cxx PUBLIC mimalloc)
+endif()
 
 
+if(0)
 # overriding with a static object file works reliable as the symbols in the
 # object file have priority over those in library files
 add_executable(static-override-obj main-override.c ${MIMALLOC_OBJECT_DIR}/mimalloc${CMAKE_C_OUTPUT_EXTENSION})
 target_include_directories(static-override-obj PUBLIC ${MIMALLOC_INCLUDE_DIR})
 target_link_libraries(static-override-obj PUBLIC mimalloc-static)
+endif()
 
 
+if(NOT BUILD_SHARED_LIBS AND NOT WIN32)
 # overriding with a static library works too if using the `mimalloc-override.h`
 # header to redefine malloc/free. (the library already overrides new/delete)
 add_executable(static-override-static main-override-static.c)
@@ -49,6 +54,7 @@ target_link_libraries(static-override PUBLIC mimalloc-static)
 
 add_executable(static-override-cxx  main-override.cpp)
 target_link_libraries(static-override-cxx PUBLIC mimalloc-static)
+endif()
 
 
 ## test memory errors
