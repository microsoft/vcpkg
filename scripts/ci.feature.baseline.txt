###########################################################################
## This file defines the current expected build state of ports in CI.
##
## States
## The following states can be specified for a port:
##           If a port is missing from this file then it is assumed
##           to build successfully.
##    fail - The port build is expected to fail in the CI system.
##           This is not necessarily the same as if a port is expected to build
##           on a developers machine because it may fail due to the machine
##           configuration. 
##    skip - Do not build this port in the CI system.
##           This is added to ports that may be flaky or conflict with other
##           ports. Please comment for why a port is skipped so it can be
##           removed when the issue is resolved.
## cascade - The port depends on a port that fails or is excluded by a supports
##           expression of a dependency but the port itself states that it can be build.
##           This is added to ports to detect "hidden" not tested ports. 
##
## Additional States can be specified for specific features:
##            feature-fails - The listed feature do not build. They are therefore excluded
##                            from the "combined" feature test because it would
##                            simply fail too.
##        combination-fails - The listed combination of features will fail to build.
##                     skip - The listed features are not tested in the CI system.
##                  cascade - The listed features are cascading.
## no-separate-feature-test - The listed features are not tested in the "separate" feature test.
##                  options - The listed features are mutually exclusive and can not be selected together.
##                            The first feature in the list is added to every test combination. Use the `core`
##                            feature as first one to add no feature to every test combination.
##
## You could select ports by triplet or supports expression:
##    curl[wchar]:x64-osx   = feature-fails # the wchar feature does not work on !windows
##    curl[wchar](!windows) = feature-fails # Using support expressions is often shorter than listing all triplets
##
## Examples:
##    qt3d[extras] = options # extras will be always added to the test combination (it is currently a requirement)
##    curl[core,openssl,wolfssl] = options # openssl and wolfssl are exclusive ssl backends but none must be selected
##    libgit2[pcre,pcre2] = options # you have to select pcre xor pcre2
## 
##    libcanberra[gtk3](osx) = combination-fails # The feature works in the "combined" feature test
##    vlpp[tools](osx) = feature-fails # error: use of undeclared identifier 'PATH_MAX'
##
##    entt[experimental] = skip # required head build
##    realsense2[openni2](!windows) = cascade # cpkg-tool-lessmsi[core] only supports native & windows
##
##    # Testing all targets separately would be too time consuming:
##    halide[target-amdgpu,target-arm,target-d3d12compute,target-hexagon,target-metal,target-mips,target-nvptx,target-opencl,target-powerpc,target-riscv,target-x86] = no-separate-feature-test

halide = skip
llvm = skip

# Add new items alphabetically
ace:x64-windows-static-md=fail
allegro5:arm64-windows=fail # Fails with "fatal error LNK1322: cannot avoid potential ARM hazard" even with /Gy
apr:arm64-windows=fail # Cross compiling CI machine cannot run gen_test_char to generate apr_escape_test_char.h
blitz:arm-uwp=fail
blitz:arm64-windows=fail
blitz:x64-uwp=fail
bond:arm-uwp=fail
bond:arm64-osx=fail
bond:x64-osx=fail
bond:x64-uwp=fail
caf:arm-uwp=fail
caf:x64-uwp=fail
caffe2:arm64-windows=fail
caffe2:x86-windows=fail
casclib(uwp)=fail
cctag:x64-windows-static-md=fail
cello:arm-uwp=fail
cello:x64-uwp=fail
chartdir=skip # chartdir does not offer stable download URLs  
chromium-base:x64-linux=skip # broken on Linux because
chromium-base:x64-osx=skip # broken on OSX for unknown reasons; it appears to be messing with some form of system-wide cache because the first attempt to build it fails, but subsequent attempts succeed
chromium-base(windows) =skip # chromium-base has several problems and is upgraded to "skip" because it hits a lot of servers that can slow CI broken on Windows because it does not yet support VS2022
clamav:arm64-windows=fail
clockutils:x64-linux=fail
coin(uwp | (windows & arm)) = fail
coroutine(uwp)=fail
cpp-netlib(uwp)=fail
cppcoro(uwp | linux | osx)=fail
cppfs(uwp)=fail
cppmicroservices(uwp | (windows & arm))=fail
crashpad:x86-windows=fail
ctemplate:x64-linux=fail
ctemplate:x64-osx=fail
cuda:x64-osx=fail
dbghelp=skip # Since pipeline cannot automatically install dbghelp dependency, skip this detection
dimcli(windows & static)=fail # VS2019 version 16.9.4's project system changes where PDBs are placed in a way that breaks the upstream build script of this port. See https://developercommunity.visualstudio.com/t/Toolset-169-regression-vcxproj-producin/1356639
discord-game-sdk:x64-windows-static-md=fail
discord-game-sdk:x64-windows-static=fail
discord-rpc:arm-uwp=fail
discord-rpc:x64-uwp=fail
dmlc(uwp) = fail
eastl:arm-uwp=fail
ebml:arm-uwp=fail
elfutils(osx) = fail # Checks for gnu extension so only works with gcc.
epsilon(uwp)=fail
faiss:arm64-windows=fail
fastrtps:arm-uwp=fail
fastrtps:x64-uwp=fail
fastrtps:x64-windows-static-md=fail
fastrtps:x64-windows-static=fail
fmi4cpp:arm-uwp=fail
fmi4cpp:x64-uwp=fail
fmilib:arm-uwp=fail
fmilib:x64-uwp=fail
fontconfig:arm-uwp=fail
fontconfig:x64-uwp=fail
forge:x86-windows=fail
freeglut:arm-uwp=fail
freeglut:x64-osx=fail
freeglut:x64-uwp=fail
freeopcua:arm64-windows=fail # Needs /bigobj
ftgl:arm-uwp=fail
ftgl:x64-uwp=fail
functions-framework-cpp:x64-uwp=fail # https://github.com/GoogleCloudPlatform/functions-framework-cpp/issues/207
gazebo:x64-linux=fail
gazebo:x64-windows=fail # VS 2022 Update 3 seems to have broken Gazebo: https://devdiv.visualstudio.com/DefaultCollection/DevDiv/_workitems/edit/1522474
geotrans = skip # Port geotrans source ftp://ftp.nga.mil server extremely slow may take several hours to download
getopt:arm-uwp=fail
getopt:x64-uwp=fail
gflags(uwp)=fail
glfw3(uwp)=fail
glibmm:x64-windows-static-md=fail
glibmm:x64-windows-static=fail
gmmlib:arm-uwp=fail
gmmlib:arm64-windows=fail
gmmlib:x64-osx=fail
gmmlib:x64-uwp=fail
gmmlib:x64-windows-static-md=fail
gmmlib:x64-windows-static=fail
gmmlib:x64-windows=fail
gmmlib:x86-windows=fail
google-cloud-cpp(uwp)=fail
gperftools:arm-uwp=fail
gperftools:arm64-windows=fail
gperftools:x64-uwp=fail
graphicsmagick(uwp)=fail
graphqlparser:arm64-osx=fail # python2 required
gsoap = skip # gsoap does not offer stable public source downloads
gtk:x64-windows-static-md=fail
gtk:x64-windows-static=fail
halide:x64-windows-static=fail
hdf5((arm & windows) | uwp) = fail
hpx:arm64-windows=fail
hpx:x64-windows-static=fail
hunspell:x64-windows-static-md=fail
ideviceinstaller:x64-windows-static-md=fail
idevicerestore:x64-linux=fail
idevicerestore:x64-osx=fail
ignition-common1:x64-linux=fail
ignition-msgs1:arm-uwp=fail
ignition-msgs1:arm64-windows=fail
ignition-msgs1:x64-uwp=fail
ignition-msgs5:arm-uwp=fail
ignition-msgs5:arm64-windows=fail
ignition-msgs5:x64-uwp=fail
ijg-libjpeg:x64-windows-static-md=fail
intel-mkl:arm-uwp=fail
intel-mkl:arm64-osx=fail
intel-mkl:arm64-windows=fail
intel-mkl:x64-osx=fail
intel-mkl:x64-windows-static-md=fail
intel-mkl:x64-windows-static=fail
intel-mkl:x86-windows=fail
irrlicht:arm-uwp=fail
irrlicht:arm64-windows=fail
irrlicht:x64-uwp=fail
ismrmrd:x86-windows=fail
jemalloc:arm-uwp=fail
jemalloc:arm64-windows=fail
jemalloc:x64-uwp=fail
jinja2cpplight:arm-uwp=fail
jinja2cpplight:x64-uwp=fail
kfr:arm-uwp=fail
kfr:arm64-windows=fail
kfr[capi](windows) = feature-fails # feature emits DLL even when built static
lastools:arm-uwp=fail
lastools:x64-uwp=fail
lcm:x64-windows-static-md=fail
lcm:x64-windows-static=fail
leptonica:arm-uwp=fail
leptonica:x64-uwp=fail
leveldb:arm-uwp=fail
leveldb:x64-uwp=fail
libaiff:x64-linux=fail
libarchive:arm-uwp=fail
libcerf:x64-windows-static-md=fail
libcopp:arm-uwp=fail
libcopp:arm64-windows=fail
libepoxy:arm-uwp=fail
libepoxy:x64-uwp=fail
libepoxy:x64-windows-static=fail
libevhtp:arm-uwp=fail
libevhtp:arm64-windows=fail
libevhtp:x64-uwp=fail
libevhtp:x64-windows-static-md=fail
libevhtp:x64-windows-static=fail
libevhtp:x64-windows=fail
libevhtp:x86-windows=fail
libexif:arm-uwp=fail
libexif:x64-uwp=fail
libfreenect2:arm64-windows=fail
libgit2:arm-uwp=fail
libgit2:x64-uwp=fail
libgo:arm-uwp=fail
libgo:arm64-windows=fail
libgo:x64-uwp=fail
libgpod:x64-linux=fail # Missing system libraries on linux to run/prepare autoconf
libgpod:x64-osx=fail
libgxps:x64-windows-static-md=fail
libgxps:x64-windows-static=fail
libirecovery:x64-windows-static-md=fail
libjxl:arm-uwp=skip # 120 min build time for libjxl arm-uwp-rel, reason unknown
liblemon:arm-uwp=fail
liblemon:x64-uwp=fail
liblo:arm-uwp=fail
liblo:x64-uwp=fail
libmagic:arm-uwp=fail
libmagic:x64-uwp=fail
libmicrodns:arm-uwp=fail # Build fails since PIC is not enabled and some configuration tests do not work properly on UWP
libmicrodns:x64-uwp=fail
libmicrohttpd:x64-windows-static-md=fail
libmodman:x64-windows-static=fail
libmodplug:arm-uwp=fail
libmodplug:x64-uwp=fail
libmpeg2:arm-uwp=fail
libmpeg2:x64-linux=fail
libmpeg2:x64-osx=fail
libmpeg2:x64-uwp=fail
libmupdf:x64-osx=fail
libmysql:x86-windows=fail
libopusenc:arm-uwp=fail
libopusenc:x64-uwp=fail
libosip2:x64-windows-static-md=fail
libplist:x64-windows-static=fail
libqcow=skip # The developer of libqcow does not offer stable release archives
libsoundio:arm-uwp=fail
libsoundio:arm64-windows=fail
libsoundio:x64-uwp=fail
libspatialite:arm-uwp=fail
libspatialite:x64-uwp=fail
libssh:arm-uwp=fail
libssh:x64-uwp=fail
libtins:arm-uwp=fail
libtins:x64-uwp=fail
libtomcrypt:arm-uwp=fail
libtomcrypt:arm64-windows=fail
libusb:arm-uwp=fail
libusb:x64-uwp=fail
libusb-win32:arm-uwp=fail
libusb-win32:x64-linux=fail
libusb-win32:x64-osx=fail
libusb-win32:x64-uwp=fail
libusbmuxd:arm-uwp=fail
libusbmuxd:x64-osx=fail
libusbmuxd:x64-uwp=fail
libuv:arm-uwp=fail
libuv:x64-uwp=fail
libvmdk:arm-uwp=fail
libvmdk:x64-uwp=fail
libvmdk=skip #Skip detection to avoid upstream remove older releases
libwandio:arm-uwp=fail
libwandio:arm64-windows=fail
libwandio:x64-uwp=fail
libwandio:x64-windows-static-md=fail
libwandio:x64-windows-static=fail
libwandio:x64-windows=fail
libwandio:x86-windows=fail
libxt:arm64-windows=fail # clang-cl ICEd
licensepp:arm-uwp=fail
licensepp:x64-uwp=fail
linenoise-ng:arm-uwp=fail
linenoise-ng:x64-uwp=fail
linenoise-ng:x64-windows-static-md=fail
live555:arm-uwp=fail
live555:x64-uwp=fail
llgl(uwp)=fail # fails due to an outdated gcc version
log4cplus:arm-uwp=fail
log4cplus:x64-uwp=fail
log4cxx:arm-uwp=fail
log4cxx:x64-uwp=fail
luafilesystem:arm-uwp=fail
luafilesystem:x64-uwp=fail
luajit:arm64-windows=fail
luasec:x64-windows-static=fail
lzfse:arm-uwp=fail
marble:arm-uwp=fail
marble:arm64-windows=fail
marble:x64-linux=fail
marble:x64-osx=fail
marble:x64-windows-static-md=fail
marble:x64-windows-static=fail
marble:x86-windows=fail
mathgl:arm-uwp=fail
mathgl:x64-uwp=fail
mesa:x64-linux=fail # Missing dependent libraries.
mesa:x64-osx=fail # Missing dependent libraries.
mesa:x64-windows-static=fail # Due to static crt.
milerius-sfml-imgui:x64-windows-static=fail
minifb:arm-uwp=fail
minifb:x64-uwp=fail
miniupnpc:arm-uwp=fail
miniupnpc:x64-uwp=fail
mlpack:x64-uwp=fail # https://github.com/mlpack/mlpack/pull/2945
mongoose:arm-uwp=fail
mongoose:x64-uwp=fail
monkeys-audio:arm-uwp=fail
monkeys-audio:arm64-windows=fail
monkeys-audio:x64-linux=fail
monkeys-audio:x64-osx=fail
monkeys-audio:x64-uwp=fail
monkeys-audio:x64-windows-static=fail
moos-core:arm-uwp=fail
moos-core:x64-uwp=fail
moos-core:x64-windows-static=fail
moos-essential:arm64-windows=fail
moos-essential:x64-windows-static-md=fail
moos-essential:x64-windows=fail
moos-essential:x86-windows=fail
ms-quic:arm-uwp=fail
ms-quic:arm64-windows=fail
ms-quic:x64-uwp=fail
ms-quic:x64-windows-static-md=fail
ms-quic:x64-windows=fail
ms-quic:x86-windows=fail
msmpi:arm-uwp=fail
msmpi:arm64-windows=fail
msmpi:x64-linux=fail
msmpi:x64-osx=fail
msmpi:x64-uwp=fail
munit:arm-uwp=fail
munit:arm64-windows=fail
munit:x64-uwp=fail
nana:arm-uwp=fail
nana:x64-linux=fail
nana:x64-osx=fail
nana:x64-uwp=fail
nanodbc:arm-uwp=fail
nanodbc:x64-uwp=fail
nativefiledialog:arm-uwp=fail
nativefiledialog:x64-uwp=fail
netcdf-cxx4:x64-windows-static-md=fail
nettle:arm-uwp=fail
ngspice:x64-windows-static=fail
numactl:arm-uwp=fail
numactl:arm64-windows=fail
numactl:x64-osx=fail
numactl:x64-uwp=fail
numactl:x64-windows-static-md=fail
numactl:x64-windows-static=fail
numactl:x64-windows=fail
numactl:x86-windows=fail
ocilib:arm-uwp=fail
ocilib:arm64-windows=fail
ocilib:x64-uwp=fail
ocilib:x64-windows-static-md=fail
octomap:arm-uwp=fail
octomap:x64-uwp=fail
ode:arm-uwp=fail
ode:arm64-windows=fail
ode:x64-uwp=fail
offscale-libetcd-cpp:arm-uwp=fail
offscale-libetcd-cpp:x64-uwp=fail
open62541:x64-windows-static-md=fail
openal-soft:arm-uwp=fail
openal-soft:x64-uwp=fail
opencc:arm64-windows=fail # opencc/deps/rapidjson-1.1.0/rapidjson.h: Unknown machine endianess detected
opencc(uwp)=fail # opencc/deps/marisa-0.2.5/lib/marisa/grimoire/io/mapper.cc currently doesn't support UWP.
opencl:arm-uwp=fail
opencl:x64-uwp=fail
opencsg:arm-uwp=fail
opencsg:x64-uwp=fail
opendnp3:arm-uwp=fail
opendnp3:x64-uwp=fail
openmama:x64-windows-static-md=fail
openmesh:arm-uwp=fail
openmesh:arm64-windows=fail
openmesh:x64-uwp=fail
openvdb(windows & static)=fail # https://github.com/AcademySoftwareFoundation/openvdb/issues/1362: openvdb\openvdb\libopenvdb.lib : fatal error LNK1248: image size (109A36020) exceeds maximum allowable size (FFFFFFFF)
openvpn3:x64-osx=fail
openvr:arm-uwp=fail
openvr:arm64-windows=fail
openvr:x64-osx=fail
openvr:x64-uwp=fail
openvr:x64-windows-static=fail
opusfile:arm-uwp=fail
opusfile:x64-uwp=fail
paho-mqtt:arm-uwp=fail
paho-mqtt:x64-uwp=fail
pango:x64-windows-static-md=fail
pango:x64-windows-static=fail
pfring:arm64-osx=fail
pfring:x64-osx=fail
pixman:arm-uwp=fail
platform-folders:arm-uwp=fail
platform-folders:x64-uwp=fail
plibsys:arm-uwp=fail
plibsys:x64-uwp=fail
plplot:arm-uwp=fail
plplot:arm64-windows=fail
plplot:x64-uwp=fail
pmdk:arm-uwp=fail
pmdk:arm64-windows=fail
pmdk:x64-linux=fail
pmdk:x64-osx=fail
pmdk:x64-uwp=fail
pmdk:x64-windows-static=fail
pmdk:x86-windows=fail
popsift:x64-windows-static-md=fail
portable-snippets:arm-uwp=fail
qbittorrent:x64-linux=fail # Not yet ready for these platforms.
qbittorrent:x64-osx=fail # Not yet ready for these platforms.
qpid-proton:arm-uwp=fail
qpid-proton:x64-uwp=fail
qpid-proton:x64-windows-static=fail
qt5-base:arm64-windows=fail
qt5-canvas3d=skip # Skip deprecated Qt module (remove after 1 year or longer due to vcpkg upgrade not handling removed ports correctly)
qt5-wayland:x64-osx=fail # Missing system libraries
qt5-webengine = fail # Missing prerequisites for CI success
qt5-x11extras(osx)=fail # Missing system libraries
qt5-x11extras(windows)=fail # Missing libraries
qtvirtualkeyboard[t9write] = skip # depends on the port 't9write' that does not exists
qtwayland(osx)=fail # Missing system libraries
quantlib:x64-windows-static-md=fail
qwt-qt6:x64-osx=fail
rapidstring:arm-uwp=fail
rapidstring:arm64-windows=fail
rapidstring:x64-linux=fail
rapidstring:x64-uwp=fail
rapidstring:x64-windows-static-md=fail
rapidstring:x64-windows-static=fail
rapidstring:x64-windows=fail
rapidstring:x86-windows=fail
raylib:arm-uwp=fail
raylib:x64-uwp=fail
readline:arm-uwp=fail
readline:x64-uwp=fail
realsense[core](uwp) = combination-fails 
realsense[tools](uwp) = feature-fails 
replxx:arm-uwp=fail
replxx:x64-uwp=fail
restbed:arm-uwp=fail
restbed:x64-uwp=fail
rocksdb:arm-uwp=fail
rocksdb:x64-uwp=fail
rpclib:arm-uwp=fail
rpclib:arm64-windows=fail
rpclib:x64-uwp=fail
rply=skip #The website of rply http://w3.impa.br/~diego/software/rply cannot be accessed
rsasynccpp:arm-uwp=fail
rsasynccpp:arm64-windows=fail
rsasynccpp:x64-linux=fail
rsasynccpp:x64-osx=fail
rtlsdr:arm-uwp=fail
rtlsdr:arm64-windows=fail
rtlsdr:x64-linux=fail
rtlsdr:x64-osx=fail
rtlsdr:x64-uwp=fail
scnlib:arm-uwp=fail
scnlib:x64-uwp=fail
sdformat10:x64-windows-static-md=fail
sdformat6:arm-uwp=fail
sdformat6:arm64-windows=fail
sdformat6:x64-uwp=fail
sdformat6:x64-windows-static-md=fail
sdformat9:arm-uwp=fail
sdformat9:x64-uwp=fail
sdformat9:x64-windows-static-md=fail
sdl2-mixer:arm-uwp=fail
sdl2-net:arm-uwp=fail
sentencepiece:x64-windows-static-md=fail
septag-sx:arm-uwp=fail
septag-sx:arm64-windows=fail
septag-sx:x64-uwp=fail
shiva:x64-windows-static-md=fail
shiva:x64-windows-static=fail
shiva-sfml:arm64-osx=fail
shiva-sfml:x64-linux=fail
shiva-sfml:x64-osx=fail
shiva-sfml:x64-windows=fail
shiva-sfml:x86-windows=fail
signalrclient:arm-uwp=fail
simbody:arm64-windows=fail
sleef:x86-windows=fail
slikenet:arm-uwp=fail
slikenet:x64-uwp=fail
sockpp:arm-uwp=fail
sockpp:x64-uwp=fail
soil2:arm-uwp=fail
soil2:x64-uwp=fail
soqt:arm-uwp=fail
soqt:arm64-windows=fail
soqt:x64-uwp=fail
soundtouch:arm-uwp=fail
soundtouch:x64-uwp=fail
spaceland:arm-uwp=fail
spaceland:arm64-windows=fail
spaceland:x64-uwp=fail
spdk:x64-linux=fail
spdk-dpdk:arm-uwp=fail
spdk-dpdk:arm64-windows=fail
spdk-dpdk:x64-osx=fail
spdk-dpdk:x64-uwp=fail
spdk-dpdk:x64-windows-static-md=fail
spdk-dpdk:x64-windows-static=fail
spdk-dpdk:x64-windows=fail
spdk-dpdk:x86-windows=fail
spdk-ipsec:arm-uwp=fail
spdk-ipsec:arm64-windows=fail
spdk-ipsec:x64-osx=fail
spdk-ipsec:x64-uwp=fail
spdk-ipsec:x64-windows-static-md=fail
spdk-ipsec:x64-windows-static=fail
spdk-ipsec:x64-windows=fail
spdk-ipsec:x86-windows=fail
stormlib:arm-uwp=fail
stormlib:x64-uwp=fail
stxxl:arm-uwp=fail
stxxl:x64-uwp=fail
systemc:arm-uwp=fail
systemc:arm64-windows=fail
systemc:x64-uwp=fail
tcl:arm-uwp=fail
tcl:arm64-windows=fail
tcl:x64-uwp=fail
telnetpp:arm-uwp=fail
telnetpp:x64-uwp=fail
tensorflow-cc(windows)=fail # tensorflow does not support VS2022
tensorflow(windows)=fail # tensorflow does not support VS2022
tidy-html5:arm-uwp=fail
tidy-html5:x64-uwp=fail
tinkerforge:arm-uwp=fail
tinkerforge:x64-uwp=fail
tiny-process-library:arm-uwp=fail
tiny-process-library:x64-uwp=fail
tmxparser:arm-uwp=fail
tmxparser:arm64-windows=fail
tmxparser:x64-uwp=fail
tmxparser:x64-windows-static-md=fail
tmxparser:x64-windows-static=fail
tmxparser:x64-windows=fail
tmxparser:x86-windows=fail
torch-th:arm-uwp=fail
torch-th:arm64-windows=fail
torch-th:x64-uwp=fail
torch-th:x64-windows-static=fail
treehopper:x64-linux=fail
treehopper:x64-windows-static=fail
unicorn:x64-windows-static-md=fail
unicorn-lib:arm-uwp=fail
unicorn-lib:x64-uwp=fail
unittest-cpp:arm-uwp=fail
usbmuxd:x64-windows-static-md=fail
usd=skip # USD has set official policy that they will not update to be compatible with TBB in the near term (https://github.com/PixarAnimationStudios/USD/issues/1600)
uthenticode:arm-uwp=fail
uthenticode:x64-uwp=fail
v8:arm-uwp=fail
v8:arm64-windows=fail
v8:x64-osx=fail
v8:x64-uwp=fail
v8(windows)=fail # the version of v8 we have in the repo doesn't support VS2022
vectorclass:arm-uwp=fail
vectorclass:arm64-windows=fail
winreg:x64-linux=fail
winreg:x64-osx=fail
workflow:arm-uwp=fail
workflow:x64-uwp=fail
wpilib:arm64-windows=fail
wxchartdir:x64-osx=fail
x265:arm-uwp=fail
x265:arm64-windows=fail
x265:x64-uwp=fail
xalan-c:arm64-windows=fail
xalan-c:x64-windows-static=fail
xbitmaps:x64-osx=skip # No xorg-macros available on osx
xerces-c:arm-uwp=fail
xerces-c:x64-uwp=fail
xmlsec:arm-uwp=fail
xmlsec:x64-uwp=fail
yara:arm-uwp=fail
yara:x64-uwp=fail
z3:arm-uwp=fail
z3:x64-uwp=fail
zeroc-ice(uwp)=fail # ZeroC doesn't provide ARM tagets in project files.
zint:x64-osx=fail
zyre:x64-windows-static-md=fail


# testing all features would be too slow:
aws-sdk-cpp[access-management,accessanalyzer,account,acm,acm-pca,alexaforbusiness,amp,amplify,amplifybackend,amplifyuibuilder,apigateway,apigatewaymanagementapi,apigatewayv2,appconfig,appconfigdata,appfabric,appflow,appintegrations,application-autoscaling,application-insights,applicationcostprofiler,appmesh,apprunner,appstream,appsync,arc-zonal-shift,athena,auditmanager,autoscaling,autoscaling-plans,awsmigrationhub,awstransfer,backup,backup-gateway,backupstorage,batch,billingconductor,braket,budgets,ce,chime,chime-sdk-identity,chime-sdk-media-pipelines,chime-sdk-meetings,chime-sdk-messaging,chime-sdk-voice,cleanrooms,cloud9,cloudcontrol,clouddirectory,cloudformation,cloudfront,cloudhsm,cloudhsmv2,cloudsearch,cloudsearchdomain,cloudtrail,cloudtrail-data,codeartifact,codebuild,codecatalyst,codecommit,codedeploy,codeguru-reviewer,codeguru-security,codeguruprofiler,codepipeline,codestar,codestar-connections,codestar-notifications,cognito-identity,cognito-idp,cognito-sync,comprehend,comprehendmedical,compute-optimizer,config,connect,connect-contact-lens,connectcampaigns,connectcases,connectparticipant,controltower,cur,customer-profiles,databrew,dataexchange,datapipeline,datasync,dax,detective,devicefarm,devops-guru,directconnect,discovery,dlm,dms,docdb,docdb-elastic,drs,ds,dynamodb,dynamodbstreams,ebs,ec2,ec2-instance-connect,ecr,ecr-public,ecs,eks,elastic-inference,elasticache,elasticbeanstalk,elasticfilesystem,elasticloadbalancing,elasticloadbalancingv2,elasticmapreduce,elastictranscoder,email,emr-containers,emr-serverless,entityresolution,es,eventbridge,events,evidently,finspace,finspace-data,firehose,fis,fms,forecast,forecastquery,frauddetector,fsx,gamelift,gamesparks,glacier,globalaccelerator,glue,grafana,greengrass,greengrassv2,groundstation,guardduty,health,healthlake,honeycode,iam,identity-management,identitystore,imagebuilder,importexport,inspector,inspector2,internetmonitor,iot,iot-data,iot-jobs-data,iot-roborunner,iot1click-devices,iot1click-projects,iotanalytics,iotdeviceadvisor,iotevents,iotevents-data,iotfleethub,iotfleetwise,iotsecuretunneling,iotsitewise,iotthingsgraph,iottwinmaker,iotwireless,ivs,ivs-realtime,ivschat,kafka,kafkaconnect,kendra,kendra-ranking,keyspaces,kinesis,kinesis-video-archived-media,kinesis-video-media,kinesis-video-signaling,kinesis-video-webrtc-storage,kinesisanalytics,kinesisanalyticsv2,kinesisvideo,kms,lakeformation,lambda,lex,lex-models,lexv2-models,lexv2-runtime,license-manager,license-manager-linux-subscriptions,license-manager-user-subscriptions,lightsail,location,logs,lookoutequipment,lookoutmetrics,lookoutvision,m2,machinelearning,macie,macie2,managedblockchain,managedblockchain-query,marketplace-catalog,marketplace-entitlement,marketplacecommerceanalytics,mediaconnect,mediaconvert,medialive,mediapackage,mediapackage-vod,mediapackagev2,mediastore,mediastore-data,mediatailor,medical-imaging,memorydb,meteringmarketplace,mgn,migration-hub-refactor-spaces,migrationhub-config,migrationhuborchestrator,migrationhubstrategy,mobile,monitoring,mq,mturk-requester,mwaa,neptune,neptunedata,network-firewall,networkmanager,nimble,oam,omics,opensearch,opensearchserverless,opsworks,opsworkscm,organizations,osis,outposts,panorama,payment-cryptography,payment-cryptography-data,pca-connector-ad,personalize,personalize-events,personalize-runtime,pi,pinpoint,pinpoint-email,pinpoint-sms-voice-v2,pipes,polly,pricing,privatenetworks,proton,qldb,qldb-session,queues,quicksight,ram,rbin,rds,rds-data,redshift,redshift-data,redshift-serverless,rekognition,resiliencehub,resource-explorer-2,resource-groups,resourcegroupstaggingapi,robomaker,rolesanywhere,route53,route53-recovery-cluster,route53-recovery-control-config,route53-recovery-readiness,route53domains,route53resolver,rum,s3,s3-crt,s3-encryption,s3control,s3outposts,sagemaker,sagemaker-a2i-runtime,sagemaker-edge,sagemaker-featurestore-runtime,sagemaker-geospatial,sagemaker-metrics,sagemaker-runtime,savingsplans,scheduler,schemas,sdb,secretsmanager,securityhub,securitylake,serverlessrepo,service-quotas,servicecatalog,servicecatalog-appregistry,servicediscovery,sesv2,shield,signer,simspaceweaver,sms,sms-voice,snow-device-management,snowball,sns,sqs,ssm,ssm-contacts,ssm-incidents,ssm-sap,sso,sso-admin,sso-oidc,states,storagegateway,sts,support,support-app,swf,synthetics,text-to-speech,textract,timestream-query,timestream-write,tnb,transcribe,transcribestreaming,transfer,translate,verifiedpermissions,voice-id,vpc-lattice,waf,waf-regional,wafv2,wellarchitected,wisdom,workdocs,worklink,workmail,workmailmessageflow,workspaces,workspaces-web,xray]  = no-separate-feature-test
google-cloud-cpp[accessapproval,accesscontextmanager,advisorynotifications,alloydb,apigateway,apigeeconnect,apikeys,appengine,artifactregistry,asset,assuredworkloads,automl,baremetalsolution,batch,beyondcorp,bigquery,bigtable,billing,binaryauthorization,certificatemanager,channel,cloudbuild,commerce,composer,confidentialcomputing,connectors,contactcenterinsights,container,containeranalysis,datacatalog,datafusion,datamigration,dataplex,dataproc,datastore,datastream,debugger,deploy,dialogflow-cx,dialogflow-es,discoveryengine,dlp,documentai,edgecontainer,eventarc,experimental-opentelemetry,experimental-storage-grpc,filestore,functions,gameservices,gkehub,gkemulticloud,grafeas,iam,iap,ids,iot,kms,language,logging,managedidentities,memcache,metastore,migrationcenter,monitoring,networkconnectivity,networkmanagement,networksecurity,notebooks,optimization,orgpolicy,osconfig,oslogin,policysimulator,policytroubleshooter,privateca,profiler,pubsub,rapidmigrationassessment,recommender,redis,resourcemanager,resourcesettings,retail,run,scheduler,secretmanager,securitycenter,servicecontrol,servicedirectory,servicemanagement,serviceusage,shell,spanner,speech,storage,storageinsights,storagetransfer,support,talent,tasks,texttospeech,tpu,trace,translate,video,videointelligence,vision,vmmigration,vmwareengine,vpcaccess,webrisk,websecurityscanner,workflows,workstations] = no-separate-feature-test
halide[target-aarch64,target-all,target-amdgpu,target-arm,target-d3d12compute,target-hexagon,target-metal,target-nvptx,target-opencl,target-opengl-compute,target-powerpc,target-riscv,target-webassembly,target-x86] = no-separate-feature-test
llvm[target-aarch64,target-all,target-amdgpu,target-arc,target-arm,target-avr,target-bpf,target-csky,target-directx,target-hexagon,target-lanai,target-loongarch,target-m68k,target-mips,target-msp430,target-nvptx,target-powerpc,target-riscv,target-sparc,target-spirv,target-systemz,target-ve,target-webassembly,target-x86,target-xcore,target-xtensa] = no-separate-feature-test



# cascade
3fd:x64-uwp = cascade
ableton-link[hut]:arm64-uwp = cascade
ableton-link[hut]:arm64-windows = cascade
ableton-link[hut]:x64-uwp = cascade
ace[xml-utils]:x64-linux = cascade
ace[xml-utils](osx) = cascade
activemq-cpp:arm64-windows = cascade
adios2:arm64-uwp = cascade
adios2:arm64-windows = cascade
adios2:x64-uwp = cascade
adios2[cuda](osx) = cascade
adios2[cuda,mpi]:x86-windows = cascade
adios2[python]:x64-uwp = cascade
alembic[hdf5]:arm64-windows = cascade
aliyun-oss-c-sdk:arm64-windows = cascade
allegro5:arm64-uwp = cascade
allegro5:x64-uwp = cascade
ampl-asl(uwp) = cascade
ampl-mp(uwp) = cascade
anari:arm64-uwp = cascade
anari:x64-uwp = cascade
apr-util:arm64-uwp = cascade
apr-util:arm64-windows = cascade
apr-util:x64-uwp = cascade
apsi[hexl,log4cplus,zeromq]:x64-uwp = cascade
apsi[log4cplus,zeromq]:arm64-uwp = cascade
arb:arm64-uwp = cascade
arb:x64-uwp = cascade
argtable3:arm64-uwp = cascade
argtable3:x64-uwp = cascade
arpack-ng:arm64-windows = cascade
arrayfire:x64-uwp = cascade
arrayfire[cuda]:x64-windows = cascade
arrayfire[cuda]:x64-windows-static = cascade
arrayfire[cuda]:x64-windows-static-md = cascade
arrayfire[opencl](uwp) = cascade
arrow:x64-uwp = cascade
arrow[cuda](osx) = cascade
asio[coroutine]:arm64-uwp = cascade
asio[coroutine]:arm64-windows = cascade
asio[coroutine]:x64-uwp = cascade
assimp:arm64-uwp = cascade
assimp:x64-uwp = cascade
async-mqtt:arm64-uwp = cascade
async-mqtt:x64-uwp = cascade
atk:arm64-uwp = cascade
atk:x64-uwp = cascade
atk[introspection](static) = cascade
atkmm:arm64-uwp = cascade
atkmm:x64-uwp = cascade
atkmm:x64-windows-static = cascade
atkmm:x64-windows-static-md = cascade
autodock-vina:arm64-uwp = cascade
autodock-vina:x64-uwp = cascade
avro-cpp:arm64-uwp = cascade
avro-cpp:x64-uwp = cascade
aws-checksums:x64-uwp = cascade
azmq:arm64-uwp = cascade
azmq:x64-uwp = cascade
azure-iot-sdk-c:arm64-uwp = cascade
azure-iot-sdk-c:x64-uwp = cascade
azure-kinect-sensor-sdk:arm64-uwp = cascade
azure-kinect-sensor-sdk:arm64-windows = cascade
azure-kinect-sensor-sdk:x64-uwp = cascade
azure-kinect-sensor-sdk[tool](uwp) = cascade
azure-messaging-eventhubs-checkpointstore-blob-cpp:x64-uwp = cascade
azure-messaging-eventhubs-cpp:arm64-uwp = cascade
azure-messaging-eventhubs-cpp:x64-uwp = cascade
azure-uamqp-c:arm64-uwp = cascade
azure-uamqp-c:x64-uwp = cascade
azure-uhttp-c:arm64-uwp = cascade
azure-uhttp-c:x64-uwp = cascade
azure-umqtt-c:arm64-uwp = cascade
azure-umqtt-c:x64-uwp = cascade
bitserializer[rapidyaml-archive]:arm64-uwp = cascade
bitserializer[rapidyaml-archive]:arm64-windows = cascade
bitserializer[rapidyaml-archive]:x64-uwp = cascade
bitserializer-rapidyaml:arm64-uwp = cascade
bitserializer-rapidyaml:arm64-windows = cascade
bitserializer-rapidyaml:x64-uwp = cascade
bloomberg-quantum:x64-uwp = cascade
bond:arm64-uwp = cascade
bond:x64-uwp = cascade
boost[mpi]:arm64-uwp = cascade
boost[mpi]:arm64-windows = cascade
boost[mpi]:x64-uwp = cascade
boost[mpi]:x86-windows = cascade
boost-graph-parallel:arm64-windows = cascade
boost-graph-parallel:x86-windows = cascade
boost-mpi:arm64-windows = cascade
boost-mpi:x86-windows = cascade
boost-odeint[mpi]:arm64-uwp = cascade
boost-odeint[mpi]:arm64-windows = cascade
boost-odeint[mpi]:x64-uwp = cascade
boost-odeint[mpi]:x86-windows = cascade
boost-property-map-parallel:arm64-windows = cascade
boost-property-map-parallel:x86-windows = cascade
boost-python[python2](osx) = cascade
boost-regex[icu]:arm64-uwp = cascade
boost-regex[icu]:x64-uwp = cascade
caffe2:arm64-uwp = cascade
caffe2:arm64-windows = cascade
caffe2:x64-uwp = cascade
caffe2:x64-windows-static = cascade
caffe2:x64-windows-static-md = cascade
caffe2:x86-windows = cascade
caffe2(osx) = cascade
cairo[fontconfig,gobject]:arm64-uwp = cascade
cairo[fontconfig,gobject]:x64-uwp = cascade
cairomm:arm64-uwp = cascade
cairomm:x64-uwp = cascade
cartographer:arm64-uwp = cascade
cartographer:x64-uwp = cascade
cctz:arm64-uwp = cascade
ceres:x64-uwp = cascade
ceres[cuda]:x86-windows = cascade
ceres[tools]:arm64-uwp = cascade
cgal:arm64-uwp = cascade
cgal:x64-uwp = cascade
cgal[qt]:arm64-windows = cascade
cgal[qt]:x64-windows = cascade
cgal[qt]:x86-windows = cascade
cgns[hdf5,mpi]:arm64-uwp = cascade
cgns[hdf5,mpi]:arm64-windows = cascade
cgns[hdf5,mpi]:x64-uwp = cascade
cgns[mpi]:x86-windows = cascade
chronoengine[irrlicht]:arm64-osx = cascade
clblas:x64-uwp = cascade
clblast:arm64-uwp = cascade
clblast:x64-uwp = cascade
clfft:arm64-uwp = cascade
clfft:x64-uwp = cascade
clrng:x64-uwp = cascade
coin-or-cbc:arm64-uwp = cascade
coin-or-cbc:x64-uwp = cascade
coin-or-cgl:arm64-uwp = cascade
coin-or-cgl:x64-uwp = cascade
coin-or-clp:arm64-uwp = cascade
coin-or-clp:x64-uwp = cascade
coin-or-ipopt:arm64-osx = cascade
coin-or-ipopt:arm64-uwp = cascade
coin-or-ipopt:arm64-windows = cascade
coin-or-ipopt:x64-uwp = cascade
coin-or-ipopt:x86-windows = cascade
coin-or-osi:arm64-uwp = cascade
coin-or-osi:x64-uwp = cascade
collada-dom:arm64-uwp = cascade
collada-dom:x64-uwp = cascade
colmap:arm64-uwp = cascade
colmap:arm64-windows = cascade
colmap:x64-uwp = cascade
colmap:x64-windows = cascade
colmap:x86-windows = cascade
colmap[cuda,cuda-redist](arm64 & osx) = cascade
cppcms:arm64-uwp = cascade
cppcms:x64-uwp = cascade
cppkafka:arm64-uwp = cascade
cppkafka:x64-uwp = cascade
cppzmq:arm64-uwp = cascade
cppzmq:x64-uwp = cascade
crashrpt:x64-windows-static = cascade
cub(!((windows & x64 & !uwp) | (linux & x64) | (linux & arm64))) = cascade
cuda-api-wrappers(uwp | osx) = cascade
curl[mbedtls,wolfssl]:arm64-uwp = cascade
curl[mbedtls,wolfssl]:x64-uwp = cascade
curl[winssl](!windows) = cascade
cutelyst2:arm64-uwp = cascade
cutelyst2:arm64-windows = cascade
cutelyst2:x64-uwp = cascade
cyclonedds-cxx:arm64-uwp = cascade
cyclonedds-cxx:arm64-windows = cascade
cyclonedds-cxx:x64-uwp = cascade
cyclonedds-cxx[idllib]:x64-windows-static = cascade
cyclonedds-cxx[idllib]:x64-windows-static-md = cascade
czmq:arm64-uwp = cascade
czmq:x64-uwp = cascade
darknet:arm64-uwp = cascade
darknet:x64-uwp = cascade
darknet[cuda,cudnn,full,opencv-cuda,opencv2-base,opencv2-cuda,opencv3-base,opencv3-cuda]:arm64-windows = cascade
darknet[cuda,cudnn,full,opencv-cuda,opencv2-base,opencv2-cuda,opencv3-base,opencv3-cuda]:x86-windows = cascade
darknet[cuda,cudnn,full,opencv-cuda,opencv2-cuda,opencv3-cuda](arm64 & osx) = cascade
darknet[cudnn,opencv2-base,opencv2-cuda,opencv3-base,opencv3-cuda,full]:x64-windows-static = cascade
darknet[cudnn,opencv2-base,opencv2-cuda,opencv3-base,opencv3-cuda,full]:x64-windows-static-md = cascade
darknet[cudnn,opencv2-cuda,opencv3-base,opencv3-cuda,full]:x64-windows = cascade
darknet[opencv2-base]:arm64-osx = cascade
darknet[opencv2-base,opencv2-cuda,opencv3-base,opencv3-cuda]:x64-linux = cascade
darknet[opencv3-base]:arm64-osx = cascade
dartsim:arm64-uwp = cascade
dartsim:arm64-windows = cascade
dartsim:x64-uwp = cascade
dartsim:x64-windows-static = cascade
daxa:x64-uwp = cascade
dcmtk[icu](uwp) = cascade
dcmtk[icu](uwp) = cascade 
devil[openexr]:arm64-uwp = cascade
devil[openexr]:x64-uwp = cascade
directxtex[openexr]:arm64-uwp = cascade
directxtex[openexr]:x64-uwp = cascade
directxtk[xaudio2redist]:x64-uwp = cascade
directxtk12[xaudio2redist]:x64-uwp = cascade
dlib[cuda]:arm64-windows = cascade
dlib[cuda]:x64-windows = cascade
dlib[cuda]:x64-windows-static = cascade
dlib[cuda]:x64-windows-static-md = cascade
dlib[cuda]:x86-windows = cascade
dlib[cuda](osx) = cascade
dlib[cuda](uwp) = cascade
dv-processing:arm64-uwp = cascade
dv-processing:arm64-windows = cascade
dv-processing:x64-uwp = cascade
dv-processing[tools](uwp) = cascade
easycl:arm64-uwp = cascade
easycl:x64-uwp = cascade
ecal:x64-uwp = cascade
egl:x64-uwp = cascade
elements:arm64-uwp = cascade
elements:x64-uwp = cascade
embree3:x64-uwp = cascade
etcd-cpp-apiv3:arm64-uwp = cascade
etcd-cpp-apiv3:x64-uwp = cascade
evpp:arm64-uwp = cascade
evpp:x64-uwp = cascade
faiss[gpu]:arm64-windows = cascade
fastrtps:arm64-uwp = cascade
fastrtps:x64-uwp = cascade
fbgemm:arm64-osx = cascade
fbgemm:arm64-windows = cascade
fcl:arm64-uwp = cascade
fcl:x64-uwp = cascade
ffmpeg[all,all-gpl,all-nonfree]:x64-linux = cascade
ffmpeg[alsa]:x64-windows-static = cascade
ffmpeg[alsa]:x64-windows-static-md = cascade
ffmpeg[alsa,ass,avisynthplus,dav1d,fontconfig,fribidi,ilbc,modplug,openh264,qsv,ssh,tensorflow,tesseract,x265]:arm64-uwp = cascade
ffmpeg[alsa,ass,avisynthplus,fontconfig,fribidi,openh264,qsv,ssh,tensorflow,tesseract,x265]:x64-uwp = cascade
ffmpeg[alsa,avisynthplus,tensorflow,x265]:arm64-windows = cascade
ffmpeg[alsa,dav1d,tensorflow]:x86-windows = cascade
ffmpeg[alsa,tensorflow]:x64-windows = cascade
ffmpeg[amf,alsa,qsv](osx) = cascade
ffmpeg[modplug]:x64-uwp = cascade
ffmpeg[qsv](!windows) = cascade
fizz:arm64-uwp = cascade
fizz:arm64-windows = cascade
fizz:x64-uwp = cascade
fizz:x86-windows = cascade
flann[cuda]:x86-windows = cascade
flann[cuda](osx) = cascade
flann[cuda,hdf5]:arm64-uwp = cascade
flann[cuda,hdf5]:arm64-windows = cascade
flann[cuda,hdf5]:x64-uwp = cascade
flashlight-cuda[fl,imgclass,lm,objdet,asr]:x64-linux = cascade
flashlight-sequence[cuda]:arm64-uwp = cascade
flashlight-sequence[cuda]:arm64-windows = cascade
flashlight-sequence[cuda]:x64-uwp = cascade
flashlight-sequence[cuda]:x86-windows = cascade
flashlight-sequence[cuda](osx) = cascade
flashlight-text[kenlm]:arm64-uwp = cascade
flashlight-text[kenlm]:arm64-windows = cascade
flashlight-text[kenlm]:x64-uwp = cascade
fluidsynth:arm64-uwp = cascade
fluidsynth:x64-uwp = cascade
folly[liburing]:arm64-osx = cascade
folly[liburing]:x64-windows = cascade
folly[liburing]:x64-windows-static = cascade
folly[liburing]:x64-windows-static-md = cascade
font-util:arm64-uwp = cascade
font-util:x64-uwp = cascade
fontconfig:arm64-uwp = cascade
fontconfig:x64-uwp = cascade
freeglut:arm64-uwp = cascade
freeglut:x64-uwp = cascade
freeimage:arm64-uwp = cascade
freeimage:x64-uwp = cascade
freeopcua:arm64-uwp = cascade
freeopcua:x64-uwp = cascade
freetds:x86-windows = cascade
freetype-gl:arm64-uwp = cascade
freetype-gl:x64-uwp = cascade
ftgl:arm64-uwp = cascade
ftgl:x64-uwp = cascade
g2o:x64-uwp = cascade
gamedev-framework:x64-uwp = cascade
games101-cgl:arm64-uwp = cascade
games101-cgl:x64-uwp = cascade
gamma:arm64-uwp = cascade
gamma:x64-uwp = cascade
gazebo:x64-windows-static = cascade
gazebo:x64-windows-static-md = cascade
gazebo(arm | uwp | osx) = cascade
gdal[aws-ec2-windows]:arm64-osx = cascade
gdal[aws-ec2-windows](!windows) = cascade
gdal[hdf5]:arm64-windows = cascade
gdcm2:arm64-uwp = cascade
gdcm2:arm64-windows = cascade
gdcm2:x64-uwp = cascade
gdk-pixbuf:arm64-uwp = cascade
gdk-pixbuf:x64-uwp = cascade
gdk-pixbuf[introspection]:arm64-osx = cascade
gdk-pixbuf[introspection]:x64-linux = cascade
ginkgo[cuda]:arm64-uwp = cascade
ginkgo[cuda]:arm64-windows = cascade
ginkgo[cuda]:x64-uwp = cascade
ginkgo[cuda]:x86-windows = cascade
ginkgo[cuda](osx) = cascade
ginkgo[mpi]:x64-uwp = cascade
gl2ps:arm64-uwp = cascade
gl2ps:x64-uwp = cascade
glew:arm64-uwp = cascade
glew:x64-uwp = cascade
glog:arm64-uwp = cascade
glog:x64-uwp = cascade
glpk[dl]:arm64-osx = cascade
glpk[dl,mysql]:arm64-uwp = cascade
glpk[dl,mysql]:x64-uwp = cascade
glpk[dl,mysql,odbc]:x64-uwp = cascade
glpk[mysql]:arm64-osx = cascade
glpk[mysql]:arm64-windows = cascade
glpk[mysql]:x86-windows = cascade
glpk[odbc]:arm64-osx = cascade
glui:arm64-uwp = cascade
glui:x64-uwp = cascade
gmime:arm64-uwp = cascade
gmime:x64-uwp = cascade
gmsh[mpi]:arm64-windows = cascade
gmsh[mpi]:x64-windows = cascade
gmsh[mpi]:x64-windows-static = cascade
gmsh[mpi]:x64-windows-static-md = cascade
gmsh[mpi,occ]:x86-windows = cascade
google-cloud-cpp-common:arm64-uwp = cascade
google-cloud-cpp-common:x64-uwp = cascade
google-cloud-cpp-spanner:arm64-uwp = cascade
google-cloud-cpp-spanner:x64-uwp = cascade
googleapis:arm64-uwp = cascade
googleapis:x64-uwp = cascade
gppanel:arm64-uwp = cascade
gppanel:x64-uwp = cascade
grantlee:arm64-uwp = cascade
grantlee:x64-uwp = cascade
graphene:x64-uwp = cascade
graphene[introspection]:arm64-osx = cascade
graphene[introspection]:x64-linux = cascade
graphviz:arm64-uwp = cascade
graphviz:x64-uwp = cascade
grppi[tbb]:arm64-uwp = cascade
grppi[tbb]:x64-uwp = cascade
gst-rtsp-server:arm64-uwp = cascade
gst-rtsp-server:x64-uwp = cascade
gstreamer[asio,gl-graphene,x265]:arm64-windows = cascade
gstreamer[faad]:x64-linux = cascade
gtk:arm64-uwp = cascade
gtk:arm64-windows = cascade
gtk:x64-uwp = cascade
gtk:x64-windows-static = cascade
gtk[introspection]:arm64-osx = cascade
gtk[introspection]:x64-linux = cascade
gtk[introspection]:x64-windows-static-md = cascade
gtk3:arm64-uwp = cascade
gtk3:x64-uwp = cascade
gtk3:x64-windows-static = cascade
gtk3[introspection]:arm64-osx = cascade
gtk3[introspection]:arm64-windows = cascade
gtk3[introspection]:x64-linux = cascade
gtkmm:arm64-windows = cascade
gtkmm:x64-windows-static = cascade
gtkmm:x64-windows-static-md = cascade
gts:arm64-uwp = cascade
gts:x64-uwp = cascade
gtsam:arm64-uwp = cascade
gtsam:x64-uwp = cascade
gz-common5:x64-uwp = cascade
gz-fuel-tools8:x64-uwp = cascade
gz-fuel-tools8(osx) = cascade
gz-gui7(android | arm | uwp | osx) = cascade
gz-physics6:x64-uwp = cascade
gz-physics6(arm|android) = cascade
gz-plugin2:x64-uwp = cascade
gz-rendering7:x64-uwp = cascade
gz-rendering7(arm|android) = cascade
gz-sensors7:x64-uwp = cascade
gz-sensors7(arm | android) = cascade
gz-transport12:x64-uwp = cascade
gz-transport12(osx) = cascade
h5py-lzf:arm64-uwp = cascade
h5py-lzf:arm64-windows = cascade
h5py-lzf:x64-uwp = cascade
halide:arm64-windows = cascade
halide[target-all]:x86-windows = cascade
hareflow:arm64-uwp = cascade
hareflow:x64-uwp = cascade
hareflow:x64-windows-static = cascade
harfbuzz[introspection](static) = cascade
hashids:arm64-uwp = cascade
hashids:x64-uwp = cascade
hdf5[parallel]:arm64-windows = cascade
hdf5[parallel]:x86-windows = cascade
hexl:x64-uwp = cascade
highfive:arm64-uwp = cascade
highfive:arm64-windows = cascade
highfive:x64-uwp = cascade
hikogui:x64-uwp = cascade
hpx:arm64-uwp = cascade
hpx:x64-uwp = cascade
hpx[cuda](osx) = cascade
hpx[cuda,mpi]:arm64-windows = cascade
hyperscan:x64-uwp = cascade
hypodermic:arm64-uwp = cascade
hypodermic:x64-uwp = cascade
hypre:arm64-uwp = cascade
hypre:arm64-windows = cascade
hypre:x64-uwp = cascade
hypre:x86-windows = cascade
ideviceinstaller:x64-uwp = cascade
idevicerestore:arm64-uwp = cascade
idevicerestore:arm64-windows = cascade
idevicerestore:x64-uwp = cascade
idevicerestore:x64-windows-static = cascade
idevicerestore:x64-windows-static-md = cascade
idyntree[assimp]:arm64-uwp = cascade
idyntree[assimp]:x64-uwp = cascade
idyntree[irrlicht]:arm64-osx = cascade
ignition-common1:arm64-osx = cascade
ignition-common1:arm64-uwp = cascade
ignition-common1:x64-uwp = cascade
ignition-common3:arm64-uwp = cascade
ignition-common3:x64-uwp = cascade
ignition-fuel-tools1:arm64-osx = cascade
ignition-fuel-tools1:arm64-uwp = cascade
ignition-fuel-tools1:x64-linux = cascade
ignition-fuel-tools1:x64-uwp = cascade
ignition-fuel-tools4:arm64-osx = cascade
ignition-fuel-tools4:arm64-uwp = cascade
ignition-fuel-tools4:arm64-windows = cascade
ignition-fuel-tools4:x64-uwp = cascade
ignition-plugin1:arm64-uwp = cascade
ignition-plugin1:x64-uwp = cascade
ignition-transport4:arm64-uwp = cascade
ignition-transport4:arm64-windows = cascade
ignition-transport4:x64-uwp = cascade
ignition-transport8:arm64-osx = cascade
ignition-transport8:arm64-uwp = cascade
ignition-transport8:arm64-windows = cascade
ignition-transport8:x64-uwp = cascade
ignition-transport9:arm64-osx = cascade
ignition-transport9:arm64-uwp = cascade
ignition-transport9:arm64-windows = cascade
ignition-transport9:x64-uwp = cascade
imgui[allegro5-binding]:arm64-windows = cascade
imgui[allegro5-binding,glfw-binding,glut-binding]:arm64-uwp = cascade
imgui[allegro5-binding,glfw-binding,glut-binding]:x64-uwp = cascade
imgui[vulkan-binding]:x64-uwp = cascade
imgui-sfml:arm64-uwp = cascade
imgui-sfml:x64-uwp = cascade
io2d:arm64-uwp = cascade
io2d:x64-uwp = cascade
irrxml:arm64-osx = cascade
irrxml:arm64-uwp = cascade
irrxml:arm64-windows = cascade
irrxml:x64-uwp = cascade
ismrmrd:x64-uwp = cascade
itay-grudev-singleapplication(uwp) = cascade
itk:arm64-uwp = cascade
itk:arm64-windows = cascade
itk:x64-uwp = cascade
itk[cuda](osx) = cascade
itk[cuda,cufftw]:x86-windows = cascade
itk[cufftw]:arm64-osx = cascade
ixwebsocket[mbedtls,ssl]:arm64-uwp = cascade
ixwebsocket[mbedtls,ssl]:x64-uwp = cascade
jaeger-client-cpp:x64-uwp = cascade
jkqtplotter(uwp) = cascade
jsonnet:arm64-uwp = cascade
jsonnet:arm64-windows = cascade
jsonnet:x64-uwp = cascade
kd-soap:arm64-uwp = cascade
kd-soap:x64-uwp = cascade
kddockwidgets:arm64-uwp = cascade
kddockwidgets:x64-uwp = cascade
kealib:arm64-uwp = cascade
kealib:arm64-windows = cascade
kealib:x64-uwp = cascade
kenlm:x64-uwp = cascade
kf5archive:arm64-uwp = cascade
kf5archive:arm64-windows = cascade
kf5archive:x64-uwp = cascade
kf5attica:arm64-uwp = cascade
kf5attica:arm64-windows = cascade
kf5attica:x64-uwp = cascade
kf5attica:x64-windows = cascade
kf5attica:x86-windows = cascade
kf5bookmarks:arm64-uwp = cascade
kf5bookmarks:arm64-windows = cascade
kf5bookmarks:x64-uwp = cascade
kf5bookmarks:x64-windows = cascade
kf5bookmarks:x86-windows = cascade
kf5codecs:arm64-uwp = cascade
kf5codecs:arm64-windows = cascade
kf5codecs:x64-uwp = cascade
kf5codecs:x64-windows = cascade
kf5codecs:x86-windows = cascade
kf5completion:arm64-uwp = cascade
kf5completion:arm64-windows = cascade
kf5completion:x64-uwp = cascade
kf5completion:x64-windows = cascade
kf5completion:x86-windows = cascade
kf5config:arm64-uwp = cascade
kf5config:arm64-windows = cascade
kf5config:x64-uwp = cascade
kf5config:x64-windows = cascade
kf5config:x86-windows = cascade
kf5configwidgets:arm64-uwp = cascade
kf5configwidgets:arm64-windows = cascade
kf5configwidgets:x64-uwp = cascade
kf5configwidgets:x64-windows = cascade
kf5configwidgets:x86-windows = cascade
kf5coreaddons:arm64-uwp = cascade
kf5coreaddons:arm64-windows = cascade
kf5coreaddons:x64-uwp = cascade
kf5coreaddons:x64-windows = cascade
kf5coreaddons:x86-windows = cascade
kf5crash:arm64-uwp = cascade
kf5crash:arm64-windows = cascade
kf5crash:x64-uwp = cascade
kf5crash:x64-windows = cascade
kf5crash:x86-windows = cascade
kf5dbusaddons:arm64-uwp = cascade
kf5dbusaddons:arm64-windows = cascade
kf5dbusaddons:x64-uwp = cascade
kf5dbusaddons:x64-windows = cascade
kf5dbusaddons:x86-windows = cascade
kf5declarative:arm64-uwp = cascade
kf5declarative:arm64-windows = cascade
kf5declarative:x64-uwp = cascade
kf5declarative:x64-windows = cascade
kf5declarative:x86-windows = cascade
kf5declarative[opengl]:x64-windows-static = cascade
kf5diagram:arm64-uwp = cascade
kf5diagram:arm64-windows = cascade
kf5diagram:x64-uwp = cascade
kf5guiaddons:arm64-uwp = cascade
kf5guiaddons:arm64-windows = cascade
kf5guiaddons:x64-uwp = cascade
kf5guiaddons:x64-windows = cascade
kf5guiaddons:x86-windows = cascade
kf5guiaddons[wayland]:arm64-osx = cascade
kf5guiaddons[wayland]:x64-windows-static = cascade
kf5guiaddons[wayland]:x64-windows-static-md = cascade
kf5holidays:arm64-uwp = cascade
kf5holidays:arm64-windows = cascade
kf5holidays:x64-uwp = cascade
kf5holidays:x64-windows = cascade
kf5holidays:x86-windows = cascade
kf5i18n:arm64-uwp = cascade
kf5i18n:arm64-windows = cascade
kf5i18n:x64-uwp = cascade
kf5i18n:x64-windows = cascade
kf5i18n:x86-windows = cascade
kf5iconthemes:arm64-uwp = cascade
kf5iconthemes:arm64-windows = cascade
kf5iconthemes:x64-uwp = cascade
kf5iconthemes:x64-windows = cascade
kf5iconthemes:x86-windows = cascade
kf5itemmodels:arm64-uwp = cascade
kf5itemmodels:arm64-windows = cascade
kf5itemmodels:x64-uwp = cascade
kf5itemmodels:x64-windows = cascade
kf5itemmodels:x86-windows = cascade
kf5itemviews:arm64-uwp = cascade
kf5itemviews:arm64-windows = cascade
kf5itemviews:x64-uwp = cascade
kf5itemviews:x64-windows = cascade
kf5itemviews:x86-windows = cascade
kf5jobwidgets:arm64-uwp = cascade
kf5jobwidgets:arm64-windows = cascade
kf5jobwidgets:x64-uwp = cascade
kf5jobwidgets:x64-windows = cascade
kf5jobwidgets:x86-windows = cascade
kf5kcmutils:arm64-uwp = cascade
kf5kcmutils:arm64-windows = cascade
kf5kcmutils:x64-uwp = cascade
kf5kcmutils:x64-windows = cascade
kf5kcmutils:x86-windows = cascade
kf5kio:arm64-uwp = cascade
kf5kio:arm64-windows = cascade
kf5kio:x64-uwp = cascade
kf5kio:x64-windows = cascade
kf5kio:x86-windows = cascade
kf5newstuff:arm64-uwp = cascade
kf5newstuff:arm64-windows = cascade
kf5newstuff:x64-uwp = cascade
kf5newstuff:x64-windows = cascade
kf5newstuff:x86-windows = cascade
kf5notifications:arm64-uwp = cascade
kf5notifications:arm64-windows = cascade
kf5notifications:x64-uwp = cascade
kf5notifications:x64-windows = cascade
kf5notifications:x86-windows = cascade
kf5package:arm64-uwp = cascade
kf5package:arm64-windows = cascade
kf5package:x64-uwp = cascade
kf5package:x64-windows = cascade
kf5package:x86-windows = cascade
kf5parts:arm64-uwp = cascade
kf5parts:arm64-windows = cascade
kf5parts:x64-uwp = cascade
kf5parts:x64-windows = cascade
kf5parts:x86-windows = cascade
kf5plotting:arm64-uwp = cascade
kf5plotting:arm64-windows = cascade
kf5plotting:x64-uwp = cascade
kf5plotting:x64-windows = cascade
kf5plotting:x86-windows = cascade
kf5service:arm64-uwp = cascade
kf5service:arm64-windows = cascade
kf5service:x64-uwp = cascade
kf5service:x64-windows = cascade
kf5service:x86-windows = cascade
kf5solid:arm64-uwp = cascade
kf5solid:arm64-windows = cascade
kf5solid:x64-uwp = cascade
kf5solid:x64-windows = cascade
kf5solid:x86-windows = cascade
kf5sonnet:arm64-uwp = cascade
kf5sonnet:arm64-windows = cascade
kf5sonnet:x64-uwp = cascade
kf5sonnet:x64-windows = cascade
kf5sonnet:x86-windows = cascade
kf5syntaxhighlighting:arm64-uwp = cascade
kf5syntaxhighlighting:arm64-windows = cascade
kf5syntaxhighlighting:x64-uwp = cascade
kf5syntaxhighlighting:x64-windows = cascade
kf5syntaxhighlighting:x86-windows = cascade
kf5texteditor:x64-uwp = cascade
kf5textwidgets:arm64-uwp = cascade
kf5textwidgets:arm64-windows = cascade
kf5textwidgets:x64-uwp = cascade
kf5textwidgets:x64-windows = cascade
kf5textwidgets:x86-windows = cascade
kf5wallet:arm64-uwp = cascade
kf5wallet:arm64-windows = cascade
kf5wallet:x64-uwp = cascade
kf5wallet:x64-windows = cascade
kf5wallet:x86-windows = cascade
kf5widgetsaddons:arm64-uwp = cascade
kf5widgetsaddons:arm64-windows = cascade
kf5widgetsaddons:x64-uwp = cascade
kf5widgetsaddons:x64-windows = cascade
kf5widgetsaddons:x86-windows = cascade
kf5windowsystem:arm64-uwp = cascade
kf5windowsystem:arm64-windows = cascade
kf5windowsystem:x64-uwp = cascade
kf5windowsystem:x64-windows = cascade
kf5windowsystem:x86-windows = cascade
kf5xmlgui:arm64-uwp = cascade
kf5xmlgui:arm64-windows = cascade
kf5xmlgui:x64-uwp = cascade
kf5xmlgui:x64-windows = cascade
kf5xmlgui:x86-windows = cascade
lapack-reference:arm64-uwp = cascade
lapack-reference:arm64-windows = cascade
lapack-reference:x64-uwp = cascade
lcm:arm64-uwp = cascade
lcm:x64-uwp = cascade
lemon:arm64-uwp = cascade
lemon:x64-uwp = cascade
lensfun:x64-uwp = cascade
libadwaita:arm64-uwp = cascade
libadwaita:arm64-windows = cascade
libadwaita:x64-uwp = cascade
libadwaita:x64-windows-static = cascade
libadwaita:x64-windows-static-md = cascade
libalkimia:arm64-uwp = cascade
libalkimia:arm64-windows = cascade
libalkimia:x64-uwp = cascade
libalkimia:x64-windows = cascade
libalkimia:x86-windows = cascade
libalkimia[webengine]:arm64-osx = cascade
libalkimia[webengine](static) = cascade
libass:arm64-uwp = cascade
libass:x64-uwp = cascade
libcaer:x64-uwp = cascade
libcanberra[alsa]:arm64-osx = cascade
libcroco:arm64-uwp = cascade
libcroco:x64-uwp = cascade
libdmx:arm64-uwp = cascade
libdmx:x64-uwp = cascade
libe57:arm64-uwp = cascade
libe57:x64-uwp = cascade
libe57format:arm64-uwp = cascade
libe57format:x64-uwp = cascade
libfontenc:arm64-uwp = cascade
libfontenc:x64-uwp = cascade
libfreenect2:arm64-uwp = cascade
libfreenect2:x64-uwp = cascade
libfreenect2[openni2]:arm64-osx = cascade
libfreenect2[openni2]:arm64-windows = cascade
libfreenect2[openni2]:x64-linux = cascade
libfreenect2[openni2]:x64-windows-static = cascade
libftdi:arm64-osx = cascade
libftdi:arm64-uwp = cascade
libftdi:x64-linux = cascade
libftdi:x64-uwp = cascade
libftdi:x64-windows-static = cascade
libftdi:x64-windows-static-md = cascade
libftdi1:arm64-uwp = cascade
libftdi1:x64-uwp = cascade
libgd[fontconfig]:arm64-uwp = cascade
libgd[fontconfig]:x64-uwp = cascade
libgxps:arm64-uwp = cascade
libgxps:x64-uwp = cascade
libheif:arm64-uwp = cascade
libheif:arm64-windows = cascade
libheif:x64-uwp = cascade
libical[rscale]:arm64-uwp = cascade
libical[rscale]:x64-uwp = cascade
libice:arm64-uwp = cascade
libice:x64-uwp = cascade
libideviceactivation:arm64-uwp = cascade
libideviceactivation:x64-uwp = cascade
libigl[cgal,embree,glfw,imgui,opengl,png]:arm64-uwp = cascade
libigl[cgal,embree,glfw,imgui,opengl,png]:x64-uwp = cascade
libigl[embree]:arm64-windows = cascade
libimobiledevice:arm64-uwp = cascade
libimobiledevice:x64-uwp = cascade
libirecovery:x64-uwp = cascade
liblas:x64-uwp = cascade
liblsquic:arm64-uwp = cascade
liblsquic:arm64-windows = cascade
liblsquic:x64-uwp = cascade
libmagic:arm64-uwp = cascade
libmagic:x64-uwp = cascade
libmupdf:arm64-uwp = cascade
libmupdf:x64-uwp = cascade
libnice:arm64-uwp = cascade
libnice:x64-uwp = cascade
libnice-gst:arm64-uwp = cascade
libnice-gst:x64-uwp = cascade
libodb-boost:x64-linux = cascade
libodb-mysql:arm64-uwp = cascade
libodb-mysql:x64-linux = cascade
libodb-mysql:x64-uwp = cascade
libodb-mysql:x86-windows = cascade
libodb-pgsql:arm64-uwp = cascade
libodb-pgsql:x64-linux = cascade
libodb-pgsql:x64-uwp = cascade
libodb-sqlite:x64-linux = cascade
libosmium:arm64-uwp = cascade
libosmium:x64-uwp = cascade
libp7-baical:arm64-osx = cascade
libp7-baical:arm64-uwp = cascade
libp7-baical:arm64-windows = cascade
libp7-baical:x64-uwp = cascade
libphonenumber:arm64-uwp = cascade
libphonenumber:x64-uwp = cascade
libpmemobj-cpp[benchmark]:arm64-osx = cascade
libpmemobj-cpp[benchmark]:arm64-uwp = cascade
libpmemobj-cpp[benchmark]:arm64-windows = cascade
libpmemobj-cpp[benchmark]:x64-linux = cascade
libpmemobj-cpp[benchmark]:x64-uwp = cascade
libpmemobj-cpp[benchmark]:x64-windows-static = cascade
libpmemobj-cpp[benchmark]:x86-windows = cascade
libpq[tcl]:arm64-windows = cascade
libpqxx:arm64-uwp = cascade
libpqxx:x64-uwp = cascade
libqglviewer:arm64-uwp = cascade
libqglviewer:x64-uwp = cascade
libqrencode[tool]:arm64-uwp = cascade
libqrencode[tool]:x64-uwp = cascade
libraqm:arm64-uwp = cascade
libraqm:x64-uwp = cascade
librsvg:arm64-uwp = cascade
librsvg:x64-uwp = cascade
libsm:arm64-uwp = cascade
libsm:x64-uwp = cascade
libspatialite:arm64-uwp = cascade
libspatialite:x64-uwp = cascade
libtorch:x86-windows = cascade
libtorch[vulkan] = cascade # no vulkan sdk installed
libtorch(uwp | (arm & windows) | (arm64 & osx)) = cascade
libwebp[all,unicode,vwebp-sdl,vwebp]:arm64-uwp = cascade
libwebp[all,vwebp-sdl,vwebp]:x64-uwp = cascade
libwebp[unicode]:arm64-windows = cascade
libwebp[vwebp-sdl]:arm64-osx = cascade
libwebp[vwebp-sdl]:x64-linux = cascade
libwebp[vwebp-sdl]:x64-windows-static = cascade
libwebp[vwebp-sdl]:x64-windows-static-md = cascade
libx11:arm64-uwp = cascade
libx11:x64-uwp = cascade
libxau:arm64-uwp = cascade
libxau:x64-uwp = cascade
libxaw:arm64-osx = cascade
libxaw:arm64-uwp = cascade
libxaw:arm64-windows = cascade
libxaw:x64-uwp = cascade
libxcomposite:arm64-uwp = cascade
libxcomposite:x64-uwp = cascade
libxdamage:arm64-uwp = cascade
libxdamage:x64-uwp = cascade
libxdmcp:arm64-uwp = cascade
libxdmcp:x64-uwp = cascade
libxext:arm64-uwp = cascade
libxext:x64-uwp = cascade
libxfixes:arm64-uwp = cascade
libxfixes:x64-uwp = cascade
libxfont:arm64-uwp = cascade
libxfont:x64-uwp = cascade
libxft:arm64-uwp = cascade
libxft:x64-uwp = cascade
libxi:arm64-uwp = cascade
libxi:x64-uwp = cascade
libxinerama:arm64-uwp = cascade
libxinerama:x64-uwp = cascade
libxkbcommon:arm64-uwp = cascade
libxkbcommon:x64-uwp = cascade
libxkbfile:arm64-uwp = cascade
libxkbfile:x64-uwp = cascade
libxml2[icu](uwp) = cascade 
libxmlpp:arm64-uwp = cascade
libxmlpp:x64-uwp = cascade
libxmu:arm64-uwp = cascade
libxmu:arm64-windows = cascade
libxmu:x64-uwp = cascade
libxpm:arm64-uwp = cascade
libxpm:x64-uwp = cascade
libxpresent:arm64-uwp = cascade
libxpresent:x64-uwp = cascade
libxrandr:arm64-uwp = cascade
libxrandr:x64-uwp = cascade
libxrender:arm64-uwp = cascade
libxrender:x64-uwp = cascade
libxres:arm64-uwp = cascade
libxres:x64-uwp = cascade
libxscrnsaver:arm64-uwp = cascade
libxscrnsaver:x64-uwp = cascade
libxt:arm64-uwp = cascade
libxt:x64-uwp = cascade
libxtst:arm64-uwp = cascade
libxtst:x64-uwp = cascade
libxv:arm64-uwp = cascade
libxv:x64-uwp = cascade
libxxf86vm:arm64-uwp = cascade
libxxf86vm:x64-uwp = cascade
libzim:arm64-uwp = cascade
libzim:x64-uwp = cascade
libzip[mbedtls]:arm64-uwp = cascade
libzip[mbedtls]:x64-uwp = cascade
llgl[vulkan](osx) = cascade # no vulkan sdk installed
log4cxx:arm64-windows = cascade
luasec:x64-linux = cascade
luv:arm64-windows = cascade
magma(uwp | osx) = cascade
magnum[al-info,anyaudioimporter,audio,glfwapplication,wavaudioimporter]:arm64-uwp = cascade
magnum[al-info,anyaudioimporter,audio,glfwapplication,wavaudioimporter]:x64-uwp = cascade
magnum[distancefieldconverter,fontconverter,gl-info,imageconverter,magnumfont,magnumfontconverter,opengltester,sceneconverter,shaders,text]:x64-uwp = cascade
magnum[vk]:x64-uwp = cascade
magnum-extras:arm64-uwp = cascade
magnum-extras:x64-uwp = cascade
magnum-extras[ui]:x64-uwp = cascade
magnum-integration:arm64-uwp = cascade
magnum-integration:x64-uwp = cascade
magnum-plugins:arm64-uwp = cascade
magnum-plugins:x64-uwp = cascade
magnum-plugins[meshoptimizersceneconverter]:x64-uwp = cascade
mapnik:arm64-uwp = cascade
mapnik:x64-uwp = cascade
marble:x64-uwp = cascade
mathgl[hdf5,qt5]:arm64-windows = cascade
matio[hdf5,mat73]:arm64-uwp = cascade
matio[hdf5,mat73]:arm64-windows = cascade
matio[hdf5,mat73]:x64-uwp = cascade
mdl-sdk:x64-uwp = cascade
mesa[default-features,gles1,gles2,offscreen,opengl]:x64-uwp = cascade
mesa[llvm]:x64-uwp = cascade
mfl:arm64-uwp = cascade
mfl:x64-uwp = cascade
milerius-sfml-imgui:arm64-uwp = cascade
milerius-sfml-imgui:x64-uwp = cascade
minc:arm64-uwp = cascade
minc:arm64-windows = cascade
minc:x64-uwp = cascade
mnn[cuda]:x64-windows = cascade
mnn[cuda]:x64-windows-static = cascade
mnn[cuda]:x64-windows-static-md = cascade
mnn[cuda]:x86-windows = cascade
mnn[vulkan](osx) = cascade # no vulkan sdk installed
modern-cpp-kafka:arm64-uwp = cascade
modern-cpp-kafka:x64-uwp = cascade
mongo-cxx-driver:arm64-uwp = cascade
mongo-cxx-driver:x64-uwp = cascade
moos-essential:arm64-uwp = cascade
moos-essential:x64-uwp = cascade
moos-essential:x64-windows-static = cascade
moos-ui:arm64-uwp = cascade
moos-ui:x64-uwp = cascade
moos-ui:x64-windows-static = cascade
mosquitto:arm64-uwp = cascade
mosquitto:x64-uwp = cascade
mpi:arm64-windows = cascade
mpi:x86-windows = cascade
msdfgen[geometry-preprocessing]:arm64-windows = cascade
msix:arm64-uwp = cascade
msix:x64-uwp = cascade
mujoco:arm64-uwp = cascade
mujoco:x64-uwp = cascade
netcdf-c[hdf5]:arm64-uwp = cascade
netcdf-c[hdf5]:arm64-windows = cascade
netcdf-c[hdf5]:x64-uwp = cascade
netcdf-cxx4:arm64-uwp = cascade
netcdf-cxx4:arm64-windows = cascade
netcdf-cxx4:x64-uwp = cascade
ngtcp2[gnutls]:arm-neon-android=cascade
ngtcp2[gnutls]:arm64-android=cascade
ngtcp2[gnutls]:arm64-uwp=cascade
ngtcp2[gnutls]:arm64-windows-static-md=cascade
ngtcp2[gnutls]:arm64-windows=cascade
ngtcp2[gnutls]:x64-android=cascade
ngtcp2[gnutls,wolfssl]:x64-uwp=cascade
ngtcp2[wolfssl]:arm64-uwp=cascade
nmap:arm64-uwp = cascade
nmap:arm64-windows = cascade
nmap:x64-uwp = cascade
nmap:x64-windows-static = cascade
nmap:x64-windows-static-md = cascade
nmap:x86-windows = cascade
nng[mbedtls](uwp) = cascade
nngpp:arm64-uwp = cascade
nngpp:x64-uwp = cascade
nss:x64-uwp = cascade
nss:x64-windows-static = cascade
nss:x64-windows-static-md = cascade
numcpp:arm64-uwp = cascade
numcpp:x64-uwp = cascade
numcpp[python]:arm64-windows = cascade
nuspell:arm64-uwp = cascade
nuspell:x64-uwp = cascade
nvtt[cuda]:x86-windows = cascade
oatpp-mbedtls:arm64-uwp = cascade
oatpp-mbedtls:x64-uwp = cascade
oatpp-postgresql:arm64-uwp = cascade
oatpp-postgresql:x64-uwp = cascade
ogre:x64-uwp = cascade
ogre[assimp,freeimage,openexr,python]:arm64-uwp = cascade
ogre-next:arm64-uwp = cascade
ogre-next:arm64-windows = cascade
ogre-next:x64-uwp = cascade
ogre-next:x64-windows-static = cascade
ogre-next[csharp]:arm64-osx = cascade
ogre-next[d3d9]:arm64-osx = cascade
ogre-next[java]:arm64-osx = cascade
ogre-next[python]:arm64-osx = cascade
ompl:arm64-uwp = cascade
ompl:x64-uwp = cascade
omplapp:arm64-uwp = cascade
omplapp:x64-uwp = cascade
omplapp[ode]:arm64-windows = cascade
onnx[pybind11]:arm64-windows = cascade
onnx-optimizer:arm64-uwp = cascade
onnx-optimizer:x64-uwp = cascade
onnx-optimizer[pybind11]:arm64-windows = cascade
onnx-optimizer[pybind11]:x64-linux = cascade
onnx-optimizer[pybind11]:x64-windows-static = cascade
onnx-optimizer[pybind11]:x64-windows-static-md = cascade
onnx-optimizer[pybind11]:x86-windows = cascade
open62541[mbedtls]:arm64-uwp = cascade
open62541[mbedtls]:x64-uwp = cascade
opencascade:x86-windows = cascade
opencascade[samples,tbb]:x64-linux = cascade
opencascade[tbb]:x64-windows = cascade
opencascade[tbb]:x64-windows-static = cascade
opencascade[tbb]:x64-windows-static-md = cascade
opencascade[tbb,vtk,freeimage](uwp) = cascade
opencc:x64-windows-static = cascade
opencsg:arm64-uwp = cascade
opencsg:x64-uwp = cascade
opencv[cuda,cudnn](osx) = cascade
opencv[cuda,cudnn,dc1394,dnn-cuda,freetype,gdcm,gstreamer,gtk,halide,openexr,opengl,ovis,python,qt,sfm,tbb,vtk]:arm64-uwp = cascade
opencv[cuda,cudnn,dc1394,dnn-cuda,freetype,gdcm,gstreamer,gtk,openexr,opengl,ovis,qt,sfm,tbb,vtk]:x64-uwp = cascade
opencv[cuda,cudnn,dc1394,dnn-cuda,gdcm,gtk,vtk]:arm64-windows = cascade
opencv[cuda,cudnn,dc1394,dnn-cuda,gtk]:x86-windows = cascade
opencv[dc1394,cudnn,dnn-cuda,gtk]:x64-windows = cascade
opencv[dc1394,cudnn,dnn-cuda,gtk]:x64-windows-static-md = cascade
opencv[dnn-cuda](osx) = cascade
opencv[gtk]:arm64-osx = cascade
opencv[halide,dc1394,cudnn,dnn-cuda,gtk]:x64-windows-static = cascade
opencv[halide,python]:x64-uwp = cascade
opencv2[cuda](osx) = cascade
opencv2[cuda,dc1394]:x86-windows = cascade
opencv2[dc1394]:x64-windows = cascade
opencv2[dc1394,gtk]:x64-windows-static = cascade
opencv2[dc1394,gtk]:x64-windows-static-md = cascade
opencv3[cuda](osx) = cascade
opencv3[cuda,dc1394]:x86-windows = cascade
opencv3[cuda,dc1394,freetype,gdcm,gstreamer,gtk,halide,openexr,opengl,ovis,python,qt,sfm,tbb,vtk]:arm64-uwp = cascade
opencv3[cuda,dc1394,freetype,gdcm,gstreamer,gtk,halide,openexr,opengl,ovis,python,qt,sfm,tbb,vtk]:x64-uwp = cascade
opencv3[cuda,dc1394,gdcm,gtk,halide,qt,vtk]:arm64-windows = cascade
opencv3[dc1394,cuda]:x64-windows = cascade
opencv3[dc1394,cuda,gtk]:x64-windows-static-md = cascade
opencv3[dc1394,halide,cuda,gtk]:x64-windows-static = cascade
opencv4[cuda,cudnn](osx) = cascade
opencv4[cuda,cudnn,dc1394,dnn-cuda]:x86-windows = cascade
opencv4[cuda,cudnn,dc1394,dnn-cuda,freetype,gdcm,gstreamer,halide,openexr,opengl,ovis,python,qt,sfm,tbb,vtk]:arm64-uwp = cascade
opencv4[cuda,cudnn,dc1394,dnn-cuda,freetype,gdcm,gstreamer,halide,openexr,opengl,ovis,python,qt,sfm,tbb,vtk]:x64-uwp = cascade
opencv4[cuda,cudnn,dc1394,dnn-cuda,gdcm,halide,vtk]:arm64-windows = cascade
opencv4[dc1394,cudnn,dnn-cuda]:x64-windows = cascade
opencv4[dc1394,cudnn,dnn-cuda]:x64-windows-static-md = cascade
opencv4[dc1394,halide,cudnn,dnn-cuda]:x64-windows-static = cascade
opencv4[dnn-cuda](osx) = cascade
openimageio:arm64-uwp = cascade
openimageio:x64-uwp = cascade
openimageio[libheif,pybind11]:arm64-windows = cascade
openmama:arm64-uwp = cascade
openmama:arm64-windows = cascade
openmama:x64-uwp = cascade
openmama:x64-windows-static = cascade
openmvg:arm64-uwp = cascade
openmvg:x64-uwp = cascade
openmvg[software]:arm64-windows = cascade
openmvs:arm64-uwp = cascade
openmvs:arm64-windows = cascade
openmvs:x64-linux = cascade
openmvs:x64-uwp = cascade
openmvs[cuda]:arm64-osx = cascade
openmvs[cuda]:x86-windows = cascade
openmvs[cuda](osx) = cascade
openni2:arm64-osx = cascade
openni2:arm64-windows = cascade
openni2:x64-linux = cascade
openscap(uwp) = cascade
openscap[crypto,util,python](arm & windows) = cascade
opensubdiv[cuda]:x86-windows = cascade
opensubdiv[dx]:x64-linux = cascade
opentelemetry-cpp[jaeger,prometheus]:arm64-uwp = cascade
opentelemetry-cpp[jaeger,prometheus]:x64-uwp = cascade
opentelemetry-cpp[prometheus]:arm64-windows = cascade
openturns:arm64-uwp = cascade
openturns:arm64-windows = cascade
openturns:x64-uwp = cascade
openvdb:arm64-uwp = cascade
openvdb:x64-uwp = cascade
openvdb[nanovdb](osx) = cascade
openvino:arm64-uwp = cascade
openvino:x64-uwp = cascade
openvms[cuda](osx) = cascade
openvpn3:arm64-uwp = cascade
openvpn3:x64-uwp = cascade
osg[default-features]:arm64-osx = cascade
osg[nvtt]:arm64-osx = cascade
osg[nvtt]:arm64-windows = cascade
osg[sdl1]:arm64-osx = cascade
osg-qt:arm64-osx = cascade
osg-qt:arm64-uwp = cascade
osg-qt:arm64-windows = cascade
osg-qt:x64-uwp = cascade
osgearth:x64-uwp = cascade
osmanip:arm64-uwp = cascade
osmanip:x64-uwp = cascade
pagmo2:arm64-uwp = cascade
pagmo2:x64-uwp = cascade
paho-mqttpp3:arm64-uwp = cascade
paho-mqttpp3:x64-uwp = cascade
pango:arm64-uwp = cascade
pango:x64-uwp = cascade
pango[introspection]:arm64-osx = cascade
pango[introspection]:arm64-windows = cascade
pango[introspection]:x64-linux = cascade
pango[introspection]:x64-windows-static = cascade
pango[introspection]:x64-windows-static-md = cascade
pangolin[openni2]:arm64-osx = cascade
pangolin[openni2]:x64-linux = cascade
pangolin[openni2,pybind11,realsense,uvc]:arm64-windows = cascade
pangolin[openni2,uvc]:x64-windows-static = cascade
pangolin[uvc]:x64-windows = cascade
pangolin[uvc]:x64-windows-static-md = cascade
pangolin[uvc]:x86-windows = cascade
pangomm:x64-uwp = cascade
pangomm:x64-windows-static = cascade
pangomm:x64-windows-static-md = cascade
parallelstl:arm64-uwp = cascade
parallelstl:x64-uwp = cascade
paraview:arm64-uwp = cascade
paraview:arm64-windows = cascade
paraview:x64-uwp = cascade
paraview[cuda]:x64-linux = cascade
paraview[cuda](osx) = cascade
paraview[cuda,mpi,python,vtkm]:x86-windows = cascade
paraview[python]:x64-windows-static-md = cascade
paraview[python,all-modules]:x64-windows-static = cascade
parmetis:arm64-uwp = cascade
parmetis:arm64-windows = cascade
parmetis:x64-uwp = cascade
parmetis:x86-windows = cascade
parquet:arm64-uwp = cascade
parquet:arm64-windows = cascade
parquet:x64-uwp = cascade
parquet:x86-windows = cascade
pbc:x64-windows-static = cascade
pbc:x64-windows-static-md = cascade
pcapplusplus:arm64-uwp = cascade
pcapplusplus:arm64-windows = cascade
pcapplusplus:x64-uwp = cascade
pcapplusplus:x64-windows-static = cascade
pcapplusplus:x64-windows-static-md = cascade
pcapplusplus:x86-windows = cascade
pcl:arm64-uwp = cascade
pcl:x64-uwp = cascade
pcl[apps]:arm64-osx = cascade
pcl[apps,examples,openni2,pcap,qt,visualization,vtk]:arm64-windows = cascade
pcl[cuda](osx) = cascade
pcl[openni2]:arm64-osx = cascade
pcl[openni2,apps]:x64-linux = cascade
pcl[pcap]:x64-windows-static-md = cascade
pcl[pcap]:x86-windows = cascade
pcl[pcap,openni2,apps]:x64-windows-static = cascade
pdal:arm64-uwp = cascade
pdal:x64-uwp = cascade
pdal[hdf,supported-plugins]:arm64-windows = cascade
pdal-c:arm64-uwp = cascade
pdal-c:arm64-windows = cascade
pdal-c:x64-uwp = cascade
pixel:arm64-uwp = cascade
pixel:x64-uwp = cascade
plplot:arm64-uwp = cascade
plplot:x64-uwp = cascade
plplot[x11]:arm64-windows = cascade
plplot[x11]:x64-windows = cascade
plplot[x11]:x64-windows-static = cascade
plplot[x11]:x64-windows-static-md = cascade
plplot[x11]:x86-windows = cascade
pmdk:x64-uwp = cascade
poco[mysql]:x86-windows = cascade
prometheus-cpp[pull]:arm64-uwp = cascade
prometheus-cpp[pull]:arm64-windows = cascade
prometheus-cpp[pull]:x64-uwp = cascade
protobuf-c[test](uwp) = cascade
ptyqt:arm64-windows = cascade
qca:arm64-uwp = cascade
qca:x64-uwp = cascade
qcoro:x64-uwp = cascade
qcustomplot:arm64-uwp = cascade
qcustomplot:x64-uwp = cascade
qhttpengine:arm64-windows = cascade
qscintilla:arm64-uwp = cascade
qscintilla:x64-uwp = cascade
qt:arm64-osx = cascade
qt:arm64-uwp = cascade
qt:arm64-windows = cascade
qt:x64-linux = cascade
qt:x64-uwp = cascade
qt:x64-windows = cascade
qt:x64-windows-static-md = cascade
qt:x86-windows = cascade
qt[default-features]:arm64-osx = cascade
qt-advanced-docking-system:arm64-uwp = cascade
qt-advanced-docking-system:x64-uwp = cascade
qt3d[vulkan] = cascade # no vulkan sdk installed
qt3d(uwp) = cascade
qt5:arm64-uwp = cascade
qt5:arm64-windows = cascade
qt5:x64-uwp = cascade
qt5[all,essentials,script,tools,translations,wayland,webengine]:x86-windows = cascade
qt5[wayland]:arm64-osx = cascade
qt5[wayland,tools,script,translations,essentials,webengine]:x64-windows = cascade
qt5[wayland,webengine]:x64-windows-static = cascade
qt5[wayland,webengine]:x64-windows-static-md = cascade
qt5[webengine]:arm64-osx = cascade
qt5[webengine]:x64-linux = cascade
qt5-3d:arm64-uwp = cascade
qt5-3d:x64-uwp = cascade
qt5-activeqt:arm64-uwp = cascade
qt5-activeqt:x64-uwp = cascade
qt5-base:arm64-uwp = cascade
qt5-base:x64-uwp = cascade
qt5-base[mysqlplugin]:x86-windows = cascade
qt5-base[vulkan](osx) = cascade # no vulkan sdk installed
qt5-charts:arm64-uwp = cascade
qt5-charts:x64-uwp = cascade
qt5-connectivity:arm64-uwp = cascade
qt5-connectivity:x64-uwp = cascade
qt5-datavis3d:arm64-uwp = cascade
qt5-datavis3d:x64-uwp = cascade
qt5-declarative:arm64-uwp = cascade
qt5-declarative:x64-uwp = cascade
qt5-gamepad:arm64-uwp = cascade
qt5-gamepad:x64-uwp = cascade
qt5-graphicaleffects:arm64-uwp = cascade
qt5-graphicaleffects:x64-uwp = cascade
qt5-imageformats:arm64-uwp = cascade
qt5-imageformats:x64-uwp = cascade
qt5-location:arm64-uwp = cascade
qt5-location:x64-uwp = cascade
qt5-mqtt:arm64-uwp = cascade
qt5-mqtt:x64-uwp = cascade
qt5-multimedia:arm64-uwp = cascade
qt5-multimedia:x64-uwp = cascade
qt5-networkauth:arm64-uwp = cascade
qt5-networkauth:x64-uwp = cascade
qt5-purchasing:arm64-uwp = cascade
qt5-purchasing:x64-uwp = cascade
qt5-quickcontrols:arm64-uwp = cascade
qt5-quickcontrols:x64-uwp = cascade
qt5-quickcontrols2:arm64-uwp = cascade
qt5-quickcontrols2:x64-uwp = cascade
qt5-remoteobjects:arm64-uwp = cascade
qt5-remoteobjects:x64-uwp = cascade
qt5-script:arm64-uwp = cascade
qt5-script:x64-uwp = cascade
qt5-script:x64-windows = cascade
qt5-script:x86-windows = cascade
qt5-scxml:arm64-uwp = cascade
qt5-scxml:arm64-windows = cascade
qt5-scxml:x64-uwp = cascade
qt5-sensors:arm64-uwp = cascade
qt5-sensors:x64-uwp = cascade
qt5-serialbus:arm64-uwp = cascade
qt5-serialbus:x64-uwp = cascade
qt5-serialport:arm64-uwp = cascade
qt5-serialport:x64-uwp = cascade
qt5-speech:arm64-uwp = cascade
qt5-speech:x64-uwp = cascade
qt5-svg:arm64-uwp = cascade
qt5-svg:x64-uwp = cascade
qt5-tools:arm64-uwp = cascade
qt5-tools:x64-uwp = cascade
qt5-tools:x64-windows = cascade
qt5-tools:x86-windows = cascade
qt5-translations:arm64-uwp = cascade
qt5-translations:x64-uwp = cascade
qt5-translations:x64-windows = cascade
qt5-translations:x86-windows = cascade
qt5-virtualkeyboard:arm64-uwp = cascade
qt5-virtualkeyboard:x64-uwp = cascade
qt5-webchannel:arm64-uwp = cascade
qt5-webchannel:x64-uwp = cascade
qt5-webengine:arm64-uwp = cascade
qt5-webengine:x64-uwp = cascade
qt5-webengine:x64-windows = cascade
qt5-webengine:x86-windows = cascade
qt5-webglplugin:arm64-uwp = cascade
qt5-webglplugin:x64-uwp = cascade
qt5-websockets:arm64-uwp = cascade
qt5-websockets:x64-uwp = cascade
qt5-webview:arm64-uwp = cascade
qt5-webview:x64-uwp = cascade
qt5-winextras:arm64-uwp = cascade
qt5-winextras:x64-uwp = cascade
qt5-xmlpatterns:arm64-uwp = cascade
qt5-xmlpatterns:x64-uwp = cascade
qt5compat:arm64-uwp = cascade
qt5compat:x64-uwp = cascade
qt5compat[iconv]:x64-uwp = cascade
qtactiveqt:arm64-uwp = cascade
qtactiveqt:x64-uwp = cascade
qtapplicationmanager:arm64-osx = cascade
qtapplicationmanager:arm64-uwp = cascade
qtapplicationmanager:x64-uwp = cascade
qtbase[sql-mysql]:x86-windows = cascade
qtcharts:arm64-uwp = cascade
qtcharts:x64-uwp = cascade
qtcoap:arm64-uwp = cascade
qtcoap:x64-uwp = cascade
qtconnectivity:arm64-uwp = cascade
qtconnectivity:x64-uwp = cascade
qtdatavis3d:arm64-uwp = cascade
qtdatavis3d:x64-uwp = cascade
qtdeclarative:arm64-uwp = cascade
qtdeclarative:x64-uwp = cascade
qtdoc:arm64-uwp = cascade
qtdoc:x64-uwp = cascade
qtgraphs(uwp) = cascade
qtgrpc:arm64-uwp = cascade
qtgrpc:x64-uwp = cascade
qthttpserver:arm64-uwp = cascade
qthttpserver:x64-uwp = cascade
qtimageformats:arm64-uwp = cascade
qtimageformats:x64-uwp = cascade
qtinterfaceframework:arm64-uwp = cascade
qtinterfaceframework:x64-uwp = cascade
qtkeychain:arm64-uwp = cascade
qtkeychain:x64-uwp = cascade
qtkeychain[translations]:x64-windows = cascade
qtkeychain[translations]:x86-windows = cascade
qtkeychain-qt6:arm64-uwp = cascade
qtkeychain-qt6:x64-uwp = cascade
qtlanguageserver:arm64-uwp = cascade
qtlanguageserver:x64-uwp = cascade
qtlocation:arm64-uwp = cascade
qtlocation:x64-uwp = cascade
qtlottie:arm64-uwp = cascade
qtlottie:x64-uwp = cascade
qtmqtt:arm64-uwp = cascade
qtmqtt:x64-uwp = cascade
qtmultimedia:arm64-uwp = cascade
qtmultimedia:x64-uwp = cascade
qtnetworkauth:arm64-uwp = cascade
qtnetworkauth:x64-uwp = cascade
qtopcua:arm64-uwp = cascade
qtopcua:x64-uwp = cascade
qtopcua[open62541]:x64-windows-static-md = cascade
qtpositioning:arm64-uwp = cascade
qtpositioning:x64-uwp = cascade
qtquick3d:arm64-uwp = cascade
qtquick3d:x64-uwp = cascade
qtquick3dphysics:arm64-uwp = cascade
qtquick3dphysics:x64-uwp = cascade
qtquickcontrols2:arm64-uwp = cascade
qtquickcontrols2:x64-uwp = cascade
qtquicktimeline:arm64-uwp = cascade
qtquicktimeline:x64-uwp = cascade
qtremoteobjects:arm64-uwp = cascade
qtremoteobjects:x64-uwp = cascade
qtscxml:arm64-uwp = cascade
qtscxml:x64-uwp = cascade
qtsensors:arm64-uwp = cascade
qtsensors:x64-uwp = cascade
qtserialbus:arm64-uwp = cascade
qtserialbus:x64-uwp = cascade
qtserialport:arm64-uwp = cascade
qtserialport:x64-uwp = cascade
qtshadertools:arm64-uwp = cascade
qtshadertools:x64-uwp = cascade
qtspeech:arm64-uwp = cascade
qtspeech:x64-uwp = cascade
qtsvg:arm64-uwp = cascade
qtsvg:x64-uwp = cascade
qttools:arm64-uwp = cascade
qttools:x64-uwp = cascade
qttranslations:arm64-uwp = cascade
qttranslations:x64-uwp = cascade
qtvirtualkeyboard:arm64-uwp = cascade
qtvirtualkeyboard:x64-uwp = cascade
qtwebchannel:arm64-uwp = cascade
qtwebchannel:x64-uwp = cascade
qtwebengine:x64-uwp = cascade
qtwebsockets:arm64-uwp = cascade
qtwebsockets:x64-uwp = cascade
qtwebview:arm64-uwp = cascade
qtwebview:x64-uwp = cascade
qtwebview[webengine]:x64-windows = cascade
qtwebview[webengine]:x86-windows = cascade
quazip:arm64-uwp = cascade
quazip:x64-uwp = cascade
quickfast:arm64-uwp = cascade
quickfast:x64-uwp = cascade
qwt:arm64-uwp = cascade
qwt:x64-uwp = cascade
qwtw:x64-uwp = cascade
qwtw:x64-windows = cascade
realsense2[openni2]:arm64-uwp = cascade
realsense2[openni2]:arm64-windows = cascade
realsense2[openni2]:x64-uwp = cascade
realsense2[openni2]:x64-windows-static = cascade
realsense2[openni2](!windows) = cascade # cpkg-tool-lessmsi[core] only supports native & windows
redis-plus-plus[async-std,async]:arm64-uwp = cascade
redis-plus-plus[async-std,async]:x64-uwp = cascade
restc-cpp:arm64-uwp = cascade
restc-cpp:arm64-windows = cascade
restc-cpp:x64-uwp = cascade
restc-cpp[threaded-ctx]:x64-uwp = cascade
rhasheq:arm64-uwp = cascade
rhasheq:x64-uwp = cascade
rioki-glow:arm64-uwp = cascade
rioki-glow:x64-uwp = cascade
rkcommon:x64-uwp = cascade
rmqcpp(windows | android) = cascade
rsocket:arm64-uwp = cascade
rsocket:arm64-windows = cascade
rsocket:x64-uwp = cascade
rsocket:x86-windows = cascade
rtabmap:arm64-uwp = cascade
rtabmap:arm64-windows = cascade
rtabmap:x64-uwp = cascade
rtabmap[opencv-cuda]:x86-windows = cascade
rtlsdr:x64-uwp = cascade
ryml:arm64-uwp = cascade
ryml:arm64-windows = cascade
ryml:x64-uwp = cascade
salome-configuration:arm64-uwp = cascade
salome-configuration:arm64-windows = cascade
salome-configuration:x64-uwp = cascade
salome-med-fichier:arm64-uwp = cascade
salome-med-fichier:arm64-windows = cascade
salome-med-fichier:x64-uwp = cascade
salome-medcoupling(arm | uwp | !(linux | windows)) = cascade
sassc:arm64-uwp = cascade
sassc:x64-uwp = cascade
saucer:arm64-osx = cascade
saucer:x64-linux = cascade
sdformat10:x64-windows-static = cascade
sdformat13:x64-windows-static = cascade
sdformat6:x64-windows-static = cascade
sdformat9:x64-windows-static = cascade
sdl1-net:arm64-uwp = cascade
sdl1-net:x64-uwp = cascade
sdl1-net(osx) = cascade
sdl2-mixer[fluidsynth,libmodplug,opusfile]:arm64-uwp = cascade
sdl2-mixer[fluidsynth,libmodplug,opusfile]:x64-uwp = cascade
sdl2-mixer-ext[fluidsynth,libmodplug,opusfile]:x64-uwp = cascade
sdl2-mixer-ext[fluidsynth,libmodplug,opusfile,wavpack]:arm64-uwp = cascade
sdl2-mixer-ext[wavpack]:arm64-windows = cascade
sdl2-ttf[harfbuzz]:arm64-uwp = cascade
sdl2-ttf[harfbuzz]:x64-uwp = cascade
seacas:arm64-uwp = cascade
seacas:arm64-windows = cascade
seacas:x64-uwp = cascade
seacas[mpi]:x86-windows = cascade
seal[hexl]:arm64-uwp = cascade
seal[hexl]:arm64-windows = cascade
seal[hexl]:x64-uwp = cascade
seal[hexl]:x86-windows = cascade
seal[hexl](osx) = cascade
sfgui:arm64-uwp = cascade
sfgui:x64-uwp = cascade
sfml:arm64-uwp = cascade
sfml:x64-uwp = cascade
shiftmedia-libgnutls:x64-uwp = cascade
shiva:arm64-uwp = cascade
shiva:arm64-windows = cascade
shiva:x64-uwp = cascade
shiva-sfml:arm64-uwp = cascade
shiva-sfml:arm64-windows = cascade
shiva-sfml:x64-uwp = cascade
shiva-sfml:x64-windows-static = cascade
shiva-sfml:x64-windows-static-md = cascade
skia[dawn,fontconfig,harfbuzz,icu,vulkan]:arm64-uwp = cascade
skia[dawn,fontconfig,harfbuzz,icu,vulkan]:x64-uwp = cascade
skia[default-features]:arm64-windows = cascade
skia[freetype]:x64-uwp = cascade
sleepy-discord[websocketpp]:arm64-uwp = cascade
sleepy-discord[websocketpp]:x64-uwp = cascade
soci[mysql]:x86-windows = cascade
soci[mysql,postgresql]:arm64-uwp = cascade
soci[mysql,postgresql]:x64-uwp = cascade
soem:arm64-windows = cascade
soem:x64-windows-static = cascade
soem:x64-windows-static-md = cascade
soem:x86-windows = cascade
spatialite-tools:arm64-uwp = cascade
spatialite-tools:x64-uwp = cascade
spdlog[benchmark]:arm64-uwp = cascade
spdlog[benchmark]:x64-uwp = cascade
sqlcipher:arm64-windows = cascade
sqlitecpp[sqlcipher]:arm64-osx = cascade
sqlitecpp[sqlcipher]:arm64-uwp = cascade
sqlitecpp[sqlcipher]:arm64-windows = cascade
sqlitecpp[sqlcipher]:x64-linux = cascade
sqlitecpp[sqlcipher]:x64-uwp = cascade
sqlitecpp[sqlcipher]:x64-windows-static = cascade
sqlitecpp[sqlcipher]:x64-windows-static-md = cascade
sqlpp11[mariadb,mysql,postgresql]:arm64-uwp = cascade
sqlpp11[mariadb,mysql,postgresql]:x64-uwp = cascade
sqlpp11[mysql]:x86-windows = cascade
sqlpp11-connector-mysql[mariadb,mysql]:arm64-uwp = cascade
sqlpp11-connector-mysql[mariadb,mysql]:x64-uwp = cascade
sqlpp11-connector-mysql[mysql]:arm64-windows = cascade
sqlpp11-connector-mysql[mysql]:x64-windows-static = cascade
sqlpp11-connector-mysql[mysql]:x64-windows-static-md = cascade
sqlpp11-connector-mysql[mysql]:x86-windows = cascade
srpc:arm64-uwp = cascade
srpc:x64-uwp = cascade
symengine[llvm]:arm64-windows = cascade
tensorpipe[cuda](osx) = cascade
tgbot-cpp:arm64-uwp = cascade
tgbot-cpp:x64-uwp = cascade
tgui[sdl2,sfml,tool](uwp) = cascade
theia(osx) = cascade
thor:arm64-uwp = cascade
thor:x64-uwp = cascade
thrift:arm64-uwp = cascade
thrift:x64-uwp = cascade
treehopper:arm64-uwp = cascade
treehopper:x64-uwp = cascade
triton:x64-uwp = cascade
ttauri:x64-uwp = cascade
ttauri:x64-windows-static = cascade
ttauri:x64-windows-static-md = cascade
uchardet[tool]:arm64-uwp = cascade
uchardet[tool]:x64-uwp = cascade
usbmuxd:x64-uwp = cascade
usockets:arm64-uwp = cascade
usockets:x64-uwp = cascade
usockets[network](osx) = cascade
uvw:arm64-uwp = cascade
uvw:x64-uwp = cascade
uwebsockets:arm64-uwp = cascade
uwebsockets:x64-uwp = cascade
v-hacd[opencl]:x64-uwp = cascade
vk-bootstrap:arm64-uwp = cascade
vk-bootstrap:x64-uwp = cascade
volk:arm64-uwp = cascade
volk:x64-uwp = cascade
vsg:x64-uwp = cascade
vsgxchange:arm64-uwp = cascade
vsgxchange:x64-linux = cascade
vsgxchange:x64-uwp = cascade
vsgxchange:x86-windows = cascade
vtk:arm64-uwp = cascade
vtk:arm64-windows = cascade
vtk:x64-uwp = cascade
vtk[all]:x64-uwp = cascade
vtk[all]:x64-windows = cascade
vtk[all,cuda,mpi,python,vtkm]:x86-windows = cascade
vtk[cuda](osx) = cascade
vtk[openvr]:arm64-osx = cascade
vtk[openvr]:x64-windows-static = cascade
vtk-dicom:arm64-uwp = cascade
vtk-dicom:arm64-windows = cascade
vtk-dicom:x64-uwp = cascade
vtk-m[cuda](osx) = cascade
vulkan[tools](osx) = cascade
vulkan-sdk-components[tools]( osx | staticcrt) = cascade
wampcc:x64-uwp = cascade
wangle:arm64-uwp = cascade
wangle:arm64-windows = cascade
wangle:x64-uwp = cascade
wangle:x86-windows = cascade
wayland[force-build](!native) = cascade    # needs wayland[force-build](native)
wayland-protocols[force-build] = cascade   # needs wayland[force-build](native)
wayland-protocols(windows | osx) = cascade # needs wayland
wpilib:arm64-uwp = cascade
wpilib:x64-uwp = cascade
wt:arm64-uwp = cascade
wt:x64-uwp = cascade
wxchartdir:arm64-windows = cascade
wxchartdir(uwp) = cascade
wxcharts:arm64-uwp = cascade
wxcharts:x64-uwp = cascade
wxwidgets[webview]:arm64-osx = cascade
wxwidgets[webview](!windows) = cascade
xbitmaps:arm64-uwp = cascade
xbitmaps:x64-uwp = cascade
xcb:arm64-uwp = cascade
xcb:x64-uwp = cascade
xcb-image:arm64-uwp = cascade
xcb-image:x64-uwp = cascade
xcb-keysyms:arm64-uwp = cascade
xcb-keysyms:x64-uwp = cascade
xcb-proto:arm64-uwp = cascade
xcb-proto:x64-uwp = cascade
xcb-render-util:arm64-uwp = cascade
xcb-render-util:x64-uwp = cascade
xcb-util:arm64-uwp = cascade
xcb-util:x64-uwp = cascade
xcb-util-errors:arm64-uwp = cascade
xcb-util-errors:x64-uwp = cascade
xcb-util-wm:arm64-uwp = cascade
xcb-util-wm:x64-uwp = cascade
xeus:arm64-uwp = cascade
xeus:x64-uwp = cascade
xproto:arm64-uwp = cascade
xproto:x64-uwp = cascade
xqilla:arm64-uwp = cascade
xqilla:x64-uwp = cascade
xtensor[tbb]:arm64-uwp = cascade
xtensor[tbb]:x64-uwp = cascade
xtrans:arm64-uwp = cascade
xtrans:x64-uwp = cascade
yasm-tool:arm64-uwp = cascade
yasm-tool:x64-uwp = cascade
zeroc-ice[icediscovery]:x64-windows-static = cascade
zeroc-ice[icediscovery]:x64-windows-static-md = cascade
zeromq[websockets-secure]:arm64-windows = cascade
zeromq[websockets-secure]:x64-windows = cascade
zeromq[websockets-secure]:x64-windows-static = cascade
zeromq[websockets-secure]:x64-windows-static-md = cascade
zeromq[websockets-secure]:x86-windows = cascade
zyre:arm64-uwp = cascade
zyre:x64-uwp = cascade

# failures
# adios2[zfp](osx) = feature-fails # requires openmp (works with right setup)
# adios2[core,mpi,zfp](osx) = combination-fails # mpi not found
ableton-link[hut](linux) = feature-fails # libportaudiocpp0 must be installed in ci. See https://github.com/microsoft/vcpkg/pull/32144
adios2[python](!uwp) = feature-fails # Could NOT find Python (missing: Python_NumPy_INCLUDE_DIRS NumPy)
arrayfire[opencl](windows & !uwp) = feature-fails # build errror: See https://github.com/microsoft/vcpkg/issues/33464
ashes[core](windows) = combination-fails # CMake Error: INSTALL(EXPORT) given unknown export "AshesRenderers". One render backend must be selected 
atk[introspection](windows & arm & !static) = feature-fails # ERROR: Dependency "gobject-introspection-1.0" not found. See https://github.com/microsoft/vcpkg/issues/33751
azure-kinect-sensor-sdk[tool](windows & !uwp) = feature-fails # Waits for https://github.com/microsoft/vcpkg/pull/33231
# boost-python[core](!linux) = combination-fails
awlib[graphics] = feature-fails # Broken code. See https://github.com/microsoft/vcpkg/issues/39849
cgns[core,fortran,hdf5,legacy,lfs,lfsselector,mpi,tests,tools](osx) = combination-fails # ["fortran","hdf5","mpi"]: Could NOT find MPI (missing: MPI_Fortran_FOUND) (found version "3.1")
cgns[fortran](windows) = feature-fails # No fortran compiler installed
coroutine(osx) = fail # requires c++20
crashrpt(windows) = fail # precompiled header errors. See https://github.com/microsoft/vcpkg/issues/33470
ctbench(osx) = fail # requires C++ 20
curl[brotli,c-ares,http2,idn,idn2,mbedtls,non-http,openssl,sectransp,ssh,ssl,tool,websockets,wolfssl](osx) = combination-fails
curl[core,openssl,wolfssl] = options # openssl and wolfssl are exclusive ssl backends
date[remote-api](uwp) = feature-fails # error C2065: 'FOLDERID_ProgramFiles': undeclared identifier. See https://github.com/microsoft/vcpkg/issues/33610
dcmtk[core,iconv,icu,openssl,png,tiff,tools,xml2,zlib](osx) = combination-fails # missing symbols from libtiff. See https://github.com/microsoft/vcpkg/issues/33512
dcmtk[xml2](windows) = feature-fails # fatal error C1083: Cannot open include file: 'iconv.h'. See https://github.com/microsoft/vcpkg/issues/33473
dcmtk(uwp) = fail # Please set the C++ runtime location (required for running applications targeting Windows). See https://github.com/microsoft/vcpkg/issues/35112
dmlc[openmp](osx) = feature-fails # No openmp on osx
dv-processing[tools](osx) = feature-fails # Broke with compiler version. See https://github.com/microsoft/vcpkg/issues/39852
embree3[core,avx,avx2,avx512,default-features,sse2,sse42](osx) = combination-fails # CMake Error at CMakeLists.txt:447 (MESSAGE):   Using Embree as static library is not supported with AppleClang >= 9.0 when multiple ISAs are selected.  Please either build a shared library or enable only one ISA.
fftw3[openmp](osx) = feature-fails # waits for https://github.com/microsoft/vcpkg/pull/30833
fftw3[openmp](windows) = feature-fails # Linker missing symbols. See https://github.com/microsoft/vcpkg/issues/33322
flashlight-cpu = fail # CMake Error: INSTALL(EXPORT) given unknown export "flashlightTargets". See https://github.com/microsoft/vcpkg/issues/32098
flashlight-sequence[openmp](osx) = feature-fails # No openmp on osx
freerdp[server](osx) = skip # Uses api removed with macOS 15. Don't get fixed. See https://github.com/FreeRDP/FreeRDP/issues/10558
gdal[netcdf](windows & arm) = feature-fails # gdal_target_link_libraries(): PRIVATE is a mandatory argument. See https://github.com/microsoft/vcpkg/issues/33753
gdk-pixbuf[introspection](windows & arm) = feature-fails # ERROR: Dependency "gobject-introspection-1.0" not found. See https://github.com/microsoft/vcpkg/issues/33751
gegl(osx) = fail # meson bug on osx. See https://github.com/microsoft/vcpkg/issues/44411
geogram[graphics] = feature-fails # imgui not found. See https://github.com/microsoft/vcpkg/issues/32421
ginkgo[openmp](osx) = feature-fails # No openmp on osx
ginkgo[openmp](windows) = feature-fails # needs openmp 3.0 support but msvc only supports openmp 2.0
glib-networking[openssl, gnutls] = options # You have to select exactly one ssl backend
google-cloud-cpp[storagetransfer](osx) = feature-fails # See https://github.com/microsoft/vcpkg/issues/32149
graphviz(osx) = fail # CMake configure error. See https://github.com/microsoft/vcpkg/issues/44414
grpc[codegen](uwp) = feature-fails # linker errors. See https://github.com/microsoft/vcpkg/issues/33622
gstreamer[chromaprint](osx) = feature-fails # see https://github.com/microsoft/vcpkg/issues/31109
gstreamer[openal](osx) = feature-fails # see https://github.com/microsoft/vcpkg/issues/43419
gstreamer[x11-bad](osx) = feature-fails # no x11 on macOS
harfbuzz[introspection](windows & arm & !static) = feature-fails # ERROR: Dependency "gobject-introspection-1.0" not found. See https://github.com/microsoft/vcpkg/issues/33751
hdf5[core,cpp,fortran,map,parallel,szip,threadsafe,tools,utils,zlib](!windows & arm) = combination-fails # some features are mutually exclusive
hdf5[fortran](windows) = feature-fails # No fortan compiler
highway[contrib](osx) = feature-fails # clang: fatal error: error in backend: Calling convention SVE_VectorCall is unsupported on Darwin.
hunspell[tools](windows) = feature-fails # error C2065: 'mode_t': undeclared identifier. See https://github.com/microsoft/vcpkg/issues/30633
igraph[openmp](osx) = feature-fails # openmp setup needed
imgui[core,sdl2-binding](uwp) = options # sdl2-binding fails to build when build together with docking-experimental => exclude from all
irrlicht[tools](osx) = feature-fails # X11 installation required
ixwebsocket[core,mbedtls,openssl,sectransp,ssl] = options # you can only choose one ssl backend or none
kissfft[openmp](osx) = feature-fails # No openmp on osx
ktx[tools](uwp) = feature-fails # build error. See https://github.com/microsoft/vcpkg/issues/33687
lapack-reference[core,cblas,noblas] = options # Cannot built feature 'cblas' together with feature 'noblas'. cblas requires blas.
libalkimia[tools](linux) = feature-fails # link errors. See https://github.com/microsoft/vcpkg/issues/32361
libcanberra[core] = combination-fails # configure: error: *** No backend enabled. ***
libcanberra[core](osx) = combination-fails # see https://github.com/microsoft/vcpkg/issues/31032
libcanberra[core,defaults,gstreamer,gtk3,null](osx) = combination-fails # fatal error: 'gdk/gdkx.h' file not found
libcanberra[gtk3](osx) = combination-fails # No package 'systemd' found # See https://github.com/microsoft/vcpkg/issues/31032
libcanberra[oss](osx) = feature-fails # oss not installed
libcanberra[pulse](osx) = feature-fails # pulseaudio not installed
libgit2[core,openssl,winhttp,sectransp,mbedtls] = options # only one TLS backend is allowed
libgit2[pcre,pcre2] = options # have to select pcre xor pcre2
libgit2[winhttp](!windows) = feature-fails
libgwenhywfar[qt5](osx) = feature-fails # See https://github.com/microsoft/vcpkg/issues/31216
libmariadb[ssl] = options # You have to select exactly one ssl backend, we use the default one
libofx[ofx2qif,ofxdump](osx) = feature-fails # gettext link error. See https://github.com/microsoft/vcpkg/issues/33043
libopnmidi[gens-emulator] = options # You have to select at least one emulator
libproxy[bindings-csharp](!windows & !osx) = feature-fails # No C# compiler installed (brew install mono on osx)
libpsl[libidn2,libicu] = options # "At least one of libidn2 and libicu should be selected."
libraw[openmp](osx) = feature-fails # requires openmp (works with right setup)
libsbml[expat, libxml2] = options # have to select excatly one xml lib(they are features)
libssh[core,openssl,mbedtls] = options # we have to select feature openssl or mbedtls
libwebp[anim,cwebp,dwebp,extras,img2webp](uwp) = feature-fails # linker error. See https://github.com/microsoft/vcpkg/issues/33603
llvm[core,flang] = options # exclude flang from all since it is not compatible with enable enable-eh
llvm[enable-mlir-python-bindings](osx) = feature-fails # Could NOT find Python3 (missing: Development Development.Module Development.Embed) (found version "3.12"). Same as https://github.com/microsoft/vcpkg/issues/34779
llvm[libcxxabi](windows) = feature-fails # see https://github.com/microsoft/vcpkg/issues/31038
magnum-plugins[meshoptimizersceneconverter](!uwp) = feature-fails # see https://github.com/microsoft/vcpkg/issues/31112
mesa[egl](!windows) = feature-fails # ERROR: Problem encountered: EGL requires dri, haiku, or windows
mesa[llvm](!uwp) = feature-fails # ERROR: Neither a subproject directory nor a llvm.wrap file was found. (llvm-config found: NO)
mesa(osx) = fail # See https://github.com/microsoft/vcpkg/issues/39782
ms-quic(windows) = fail # fixed upstream. See https://github.com/microsoft/vcpkg/issues/29459
msdfgen[core,extensions,geometry-preprocessing,openmp,tools](osx) = combination-fails # requires openmp (works with right setup)
msdfgen[openmp](osx) = feature-fails # No openmp on osx
mygui[tools](osx) = feature-fails # Linker errors undefined symbols. See https://github.com/microsoft/vcpkg/issues/34416
opencv2[ffmpeg](!windows) = feature-fails # ffmpeg5+ is not supported under opencv2. See https://github.com/microsoft/vcpkg/issues/32151
opencv2[python](osx) = feature-fails # requires python2
opencv2[world] = feature-fails # See https://github.com/microsoft/vcpkg/issues/29943
opencv3[ffmpeg] = feature-fails # ffmpeg5+ is not supported under opencv3. See https://github.com/microsoft/vcpkg/issues/32150
opencv3[halide](osx) = feature-fails # Same as opencv4[halide]
openmvg(windows & arm) = fail # nmmintrin.h(17): fatal error C1189: #error:  This header is specific to X86, X64, ARM64, and ARM64EC targets. See https://github.com/microsoft/vcpkg/issues/33746
openscap[python](!windows) = feature-fails # CI image lacks swig
opentelemetry-cpp[otlp](uwp) = feature-fails # --grpc_out: protoc-gen-grpc: The system cannot find the file specified. See https://github.com/microsoft/vcpkg/issues/34847
openvdb[ax] = feature-fails # ax requires llvm version <= 14. Work when using a baseline + overwrite
pangolin[core,eigen,examples,ffmpeg,gui,jpeg,lz4,module,openexr,png,pybind11,realsense,test,tiff,tools,vars,video,zstd](!(arm & windows)) = combination-fails # see https://github.com/microsoft/vcpkg/issues/31304
poco[core,mariadb,mysql] = options # You can not install mariadb and mysql at the same time
qt3d[animation] = options # is a requirement, see https://github.com/microsoft/vcpkg/issues/31336
qt3d[extras] = options # is a requirement, see https://github.com/microsoft/vcpkg/issues/31336
qt5compat[iconv](!uwp) = feature-fails # requires qtbase without icu
qtbase[fontconfig] = feature-fails # see https://github.com/microsoft/vcpkg/issues/31247
qtbase[sql-oci](!(arm & windows)) = feature-fails # see https://github.com/microsoft/vcpkg/issues/32052
qtmultimedia[core,ffmpeg,gstreamer,qml,widgets](osx) = combination-fails # Error: Qt will by default autolink both plugin backends in static builds leading to symbol collisions and a build failure in dependent ports! As such in static builds only one backend is allowed by default.
qtopcua[uacpp](!uwp) = feature-fails # Unified Automation C++ SDK is not installed
realsense2:arm64-windows = fail # fw-update-device.h(1): warning C4828: The file contains a character starting at offset 0x4c3 that is illegal in the current source character set (codepage 65001). See https://github.com/microsoft/vcpkg/issues/35628
realsense2[tools](osx) = feature-fails # Could NOT find Threads (missing: Threads_FOUND)
rtabmap(osx) = fail # Linker errors. See https://github.com/microsoft/vcpkg/issues/39856
rubberband[cli](linux) = feature-fails # See https://github.com/microsoft/vcpkg/issues/32360
sqlite-orm[test](uwp) = feature-fails # error LNK2019: unresolved external symbol main referenced in function "int __cdecl invoke_main(void)". See https://github.com/microsoft/vcpkg/issues/33769
sqlpp11[core,mariadb,mysql] = options # can not select mariadb and mysql at the same time
sqlpp11-connector-mysql[core,mariadb,mysql] = options # can not select mariadb and mysql at the same time
symengine[tcmalloc](windows) = feature-fails # tcmalloc not found. See https://github.com/microsoft/vcpkg/issues/33576
tgui[sdl2] = options # At least one of the backend features must be selected: sdl2 sfml
vlfeat[openmp](osx) = feature-fails # No openmp on osx
vlpp[tools](linux) = feature-fails # See https://github.com/microsoft/vcpkg/issues/32143 (error: inconsistent begin/end types in range-based ‘for’ statement)
vlpp[tools](osx) = feature-fails # error: use of undeclared identifier 'PATH_MAX'
vtk[all](!windows) = feature-fails # Wait for fix: https://github.com/microsoft/vcpkg/pull/29260
vtk-m[omp](osx) = feature-fails # fixed by https://github.com/microsoft/vcpkg/pull/30923
wasmedge[aot] = feature-fails # ar: /libzstd.a: No such file or directory. See https://github.com/microsoft/vcpkg/issues/32146
wayland[force-build](native) = feature-fails # error: To build wayland libraries the `force-build` feature must be enabled and the X_VCPKG_FORCE_VCPKG_WAYLAND_LIBRARIES triplet variable must be set.
xbitmaps(osx) = fail # error: must install xorg-macros 1.3 or later before running autoconf/autogen
xerces-c[xmlch-wchar](!windows) = feature-fails # wchar_t must be 16 bit and not 32

# skip
cairo[x11](osx) = skip # No x11 on osx
entt[experimental] = skip # required head build
freerdp[x11](osx) = skip # No x11 on osx
glad[glx](osx) = skip # No x11 on osx
hello-imgui[freetype-lunasvg] = skip # see https://github.com/microsoft/vcpkg/issues/44212
hello-imgui[sdl2-binding] = skip # see https://github.com/microsoft/vcpkg/issues/44212
libhdfs3 = skip # never worked https://github.com/microsoft/vcpkg/pull/10021#issuecomment-1595343157
magnum[anyshaderconverter,shadertools,shaderconverter,vk-info] = skip # only available in head build
magnum-plugins[cgltfimporter,glslangshaderconverter,ktximageconverter,ktximporter,openexrimageconverter,openexrimporter,spirvtoolsshaderconverter,stbdxtimageconverter] = skip # only available in head build
openjpeg[tools] = skip # fails and is deprecated
qtbase[xcb,xcb-xlib,xkb,xkbcommon-x11,xlib,xrender](osx) = skip # no x11 on macOS
s2n = skip # builds too slow
sciter = skip # The sciter port is deprecated by upstream and conflicts with upstream's replacement.
shogun = skip # shogun is not compatible with c++17 because it uses dynamic exception specifications but the dependency abseil requires c++17
winpcap = skip # Broken and merked for removal. See https://github.com/microsoft/vcpkg/pull/33215 
